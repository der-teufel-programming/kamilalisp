"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 43)
(COMMON-LISP:SETQ SYSTEM:*SOURCE* #P"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp")
(COMMON-LISP:SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-219181 #:ENVIRONMENT-219182 #:WHOLE-219229 #:ENVIRONMENT-219230 #:WHOLE-219284 #:ENVIRONMENT-219285 #:WHOLE-219310 #:ENVIRONMENT-219311 #:WHOLE-219365 #:ENVIRONMENT-219366 #:WHOLE-219391 #:ENVIRONMENT-219392 #:WHOLE-219416 #:ENVIRONMENT-219417 #:WHOLE-219441 #:ENVIRONMENT-219442 #:WHOLE-219509 #:ENVIRONMENT-219510 #:WHOLE-219535 #:ENVIRONMENT-219536 #:WHOLE-219561 #:ENVIRONMENT-219562 #:WHOLE-219586 #:ENVIRONMENT-219587 #:WHOLE-219611 #:ENVIRONMENT-219612 #:WHOLE-219635 #:ENVIRONMENT-219636 #:WHOLE-219848 #:ENVIRONMENT-219849 #:WHOLE-219872 #:ENVIRONMENT-219873 #:WHOLE-220023 #:ENVIRONMENT-220024 #:WHOLE-220047 #:ENVIRONMENT-220048 #:WHOLE-220198 #:ENVIRONMENT-220199 #:WHOLE-220222 #:ENVIRONMENT-220223 #:WHOLE-220433 #:ENVIRONMENT-220434 #:WHOLE-220457 #:ENVIRONMENT-220458 #:WHOLE-220605 #:ENVIRONMENT-220606 #:WHOLE-220629 #:ENVIRONMENT-220630))
(COMMON-LISP:SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.find"))
(COMMON-LISP:IN-PACKAGE "COMMON-LISP-USER")
(SYSTEM:%IN-PACKAGE "SYSTEM")
(REQUIRE "EXTENSIBLE-SEQUENCES-BASE")
(PROGN (PUT 'VECTOR-LOCATER-MACRO 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
1622) (GET 'VECTOR-LOCATER-MACRO 'SOURCE NIL))) (FSET 'VECTOR-LOCATER-MACRO (MAKE-MACRO 
'VECTOR-LOCATER-MACRO (GET-FASL-FUNCTION *FASL-LOADER* 0)) 1622 '(SEQUENCE BODY-FORM 
RETURN-TYPE) NIL))
(PROGN (PUT 'LOCATER-TEST-NOT 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
2224) (GET 'LOCATER-TEST-NOT 'SOURCE NIL))) (FSET 'LOCATER-TEST-NOT (MAKE-MACRO 'LOCATER-TEST-NOT 
(GET-FASL-FUNCTION *FASL-LOADER* 1)) 2224 '(ITEM SEQUENCE SEQ-TYPE RETURN-TYPE) NIL))
(PROGN (PUT 'VECTOR-LOCATER 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
2868) (GET 'VECTOR-LOCATER 'SOURCE NIL))) (FSET 'VECTOR-LOCATER (MAKE-MACRO 'VECTOR-LOCATER 
(GET-FASL-FUNCTION *FASL-LOADER* 2)) 2868 '(ITEM SEQUENCE RETURN-TYPE) NIL))
(PROGN (PUT 'LOCATER-IF-TEST 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
3078) (GET 'LOCATER-IF-TEST 'SOURCE NIL))) (FSET 'LOCATER-IF-TEST (MAKE-MACRO 'LOCATER-IF-TEST 
(GET-FASL-FUNCTION *FASL-LOADER* 3)) 3078 '(TEST SEQUENCE SEQ-TYPE RETURN-TYPE SENSE) 
NIL))
(PROGN (PUT 'VECTOR-LOCATER-IF-MACRO 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
3709) (GET 'VECTOR-LOCATER-IF-MACRO 'SOURCE NIL))) (FSET 'VECTOR-LOCATER-IF-MACRO 
(MAKE-MACRO 'VECTOR-LOCATER-IF-MACRO (GET-FASL-FUNCTION *FASL-LOADER* 4)) 3709 '(TEST 
SEQUENCE RETURN-TYPE SENSE) NIL))
(PROGN (PUT 'VECTOR-LOCATER-IF 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
3940) (GET 'VECTOR-LOCATER-IF 'SOURCE NIL))) (FSET 'VECTOR-LOCATER-IF (MAKE-MACRO 
'VECTOR-LOCATER-IF (GET-FASL-FUNCTION *FASL-LOADER* 5)) 3940 '(TEST SEQUENCE RETURN-TYPE) 
NIL))
(PROGN (PUT 'VECTOR-LOCATER-IF-NOT 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
4058) (GET 'VECTOR-LOCATER-IF-NOT 'SOURCE NIL))) (FSET 'VECTOR-LOCATER-IF-NOT (MAKE-MACRO 
'VECTOR-LOCATER-IF-NOT (GET-FASL-FUNCTION *FASL-LOADER* 6)) 4058 '(TEST SEQUENCE 
RETURN-TYPE) NIL))
(PROGN (PUT 'LIST-LOCATER-MACRO 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
4182) (GET 'LIST-LOCATER-MACRO 'SOURCE NIL))) (FSET 'LIST-LOCATER-MACRO (MAKE-MACRO 
'LIST-LOCATER-MACRO (GET-FASL-FUNCTION *FASL-LOADER* 7)) 4182 '(SEQUENCE BODY-FORM 
RETURN-TYPE) NIL))
(PROGN (PUT 'LIST-LOCATER 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
5243) (GET 'LIST-LOCATER 'SOURCE NIL))) (FSET 'LIST-LOCATER (MAKE-MACRO 'LIST-LOCATER 
(GET-FASL-FUNCTION *FASL-LOADER* 8)) 5243 '(ITEM SEQUENCE RETURN-TYPE) NIL))
(PROGN (PUT 'LIST-LOCATER-IF-MACRO 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
5443) (GET 'LIST-LOCATER-IF-MACRO 'SOURCE NIL))) (FSET 'LIST-LOCATER-IF-MACRO (MAKE-MACRO 
'LIST-LOCATER-IF-MACRO (GET-FASL-FUNCTION *FASL-LOADER* 9)) 5443 '(TEST SEQUENCE 
RETURN-TYPE SENSE) NIL))
(PROGN (PUT 'LIST-LOCATER-IF 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
5664) (GET 'LIST-LOCATER-IF 'SOURCE NIL))) (FSET 'LIST-LOCATER-IF (MAKE-MACRO 'LIST-LOCATER-IF 
(GET-FASL-FUNCTION *FASL-LOADER* 10)) 5664 '(TEST SEQUENCE RETURN-TYPE) NIL))
(PROGN (PUT 'LIST-LOCATER-IF-NOT 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
5778) (GET 'LIST-LOCATER-IF-NOT 'SOURCE NIL))) (FSET 'LIST-LOCATER-IF-NOT (MAKE-MACRO 
'LIST-LOCATER-IF-NOT (GET-FASL-FUNCTION *FASL-LOADER* 11)) 5778 '(TEST SEQUENCE RETURN-TYPE) 
NIL))
(PROGN (PUT 'VECTOR-POSITION 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
5898) (GET 'VECTOR-POSITION 'SOURCE NIL))) (FSET 'VECTOR-POSITION (MAKE-MACRO 'VECTOR-POSITION 
(GET-FASL-FUNCTION *FASL-LOADER* 12)) 5898 '(ITEM SEQUENCE) NIL))
(PROGN (PUT 'LIST-POSITION 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
5988) (GET 'LIST-POSITION 'SOURCE NIL))) (FSET 'LIST-POSITION (MAKE-MACRO 'LIST-POSITION 
(GET-FASL-FUNCTION *FASL-LOADER* 13)) 5988 '(ITEM SEQUENCE) NIL))
(PROGN (PUT 'POSITION 'SOURCE (CONS '((:FUNCTION POSITION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
6074) (GET 'POSITION 'SOURCE NIL))) (FSET 'POSITION (GET-FASL-FUNCTION *FASL-LOADER* 
14) 6074 '(ITEM SEQUENCE &REST ARGS &KEY FROM-END (TEST (FUNCTION EQL)) TEST-NOT 
(START 0) END KEY) NIL))
(PROGN (PUT 'LIST-POSITION* 'SOURCE (CONS '((:FUNCTION LIST-POSITION*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
6424) (GET 'LIST-POSITION* 'SOURCE NIL))) (FSET 'LIST-POSITION* (GET-FASL-FUNCTION 
*FASL-LOADER* 15) 6424 '(ITEM SEQUENCE FROM-END TEST TEST-NOT START END KEY) NIL))
(PROGN (PUT 'VECTOR-POSITION* 'SOURCE (CONS '((:FUNCTION VECTOR-POSITION*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
6642) (GET 'VECTOR-POSITION* 'SOURCE NIL))) (FSET 'VECTOR-POSITION* (GET-FASL-FUNCTION 
*FASL-LOADER* 16) 6642 '(ITEM SEQUENCE FROM-END TEST TEST-NOT START END KEY) NIL))
(PROGN (PUT 'VECTOR-POSITION-IF 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
6864) (GET 'VECTOR-POSITION-IF 'SOURCE NIL))) (FSET 'VECTOR-POSITION-IF (MAKE-MACRO 
'VECTOR-POSITION-IF (GET-FASL-FUNCTION *FASL-LOADER* 17)) 6864 '(TEST SEQUENCE) NIL))
(PROGN (PUT 'LIST-POSITION-IF 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
6960) (GET 'LIST-POSITION-IF 'SOURCE NIL))) (FSET 'LIST-POSITION-IF (MAKE-MACRO 'LIST-POSITION-IF 
(GET-FASL-FUNCTION *FASL-LOADER* 18)) 6960 '(TEST SEQUENCE) NIL))
(PROGN (PUT 'POSITION-IF 'SOURCE (CONS '((:FUNCTION POSITION-IF) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
7052) (GET 'POSITION-IF 'SOURCE NIL))) (FSET 'POSITION-IF (GET-FASL-FUNCTION *FASL-LOADER* 
19) 7052 '(TEST SEQUENCE &REST ARGS &KEY FROM-END (START 0) KEY END) NIL))
(PROGN (PUT 'VECTOR-POSITION-IF-NOT 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
7413) (GET 'VECTOR-POSITION-IF-NOT 'SOURCE NIL))) (FSET 'VECTOR-POSITION-IF-NOT (MAKE-MACRO 
'VECTOR-POSITION-IF-NOT (GET-FASL-FUNCTION *FASL-LOADER* 20)) 7413 '(TEST SEQUENCE) 
NIL))
(PROGN (PUT 'LIST-POSITION-IF-NOT 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
7517) (GET 'LIST-POSITION-IF-NOT 'SOURCE NIL))) (FSET 'LIST-POSITION-IF-NOT (MAKE-MACRO 
'LIST-POSITION-IF-NOT (GET-FASL-FUNCTION *FASL-LOADER* 21)) 7517 '(TEST SEQUENCE) 
NIL))
(PROGN (PUT 'POSITION-IF-NOT 'SOURCE (CONS '((:FUNCTION POSITION-IF-NOT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
7617) (GET 'POSITION-IF-NOT 'SOURCE NIL))) (FSET 'POSITION-IF-NOT (GET-FASL-FUNCTION 
*FASL-LOADER* 22) 7617 '(TEST SEQUENCE &REST ARGS &KEY FROM-END (START 0) KEY END) 
NIL))
(PROGN (PUT 'VECTOR-FIND 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
7994) (GET 'VECTOR-FIND 'SOURCE NIL))) (FSET 'VECTOR-FIND (MAKE-MACRO 'VECTOR-FIND 
(GET-FASL-FUNCTION *FASL-LOADER* 23)) 7994 '(ITEM SEQUENCE) NIL))
(PROGN (PUT 'LIST-FIND 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
8079) (GET 'LIST-FIND 'SOURCE NIL))) (FSET 'LIST-FIND (MAKE-MACRO 'LIST-FIND (GET-FASL-FUNCTION 
*FASL-LOADER* 24)) 8079 '(ITEM SEQUENCE) NIL))
(PROGN (PUT 'LIST-FIND* 'SOURCE (CONS '((:FUNCTION LIST-FIND*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
8160) (GET 'LIST-FIND* 'SOURCE NIL))) (FSET 'LIST-FIND* (GET-FASL-FUNCTION *FASL-LOADER* 
25) 8160 '(ITEM SEQUENCE FROM-END TEST TEST-NOT START END KEY) NIL))
(PROGN (PUT 'VECTOR-FIND* 'SOURCE (CONS '((:FUNCTION VECTOR-FIND*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
8348) (GET 'VECTOR-FIND* 'SOURCE NIL))) (FSET 'VECTOR-FIND* (GET-FASL-FUNCTION *FASL-LOADER* 
26) 8348 '(ITEM SEQUENCE FROM-END TEST TEST-NOT START END KEY) NIL))
(PROGN (PUT 'FIND 'SOURCE (CONS '((:FUNCTION FIND) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
8540) (GET 'FIND 'SOURCE NIL))) (FSET 'FIND (GET-FASL-FUNCTION *FASL-LOADER* 27) 
8540 '(ITEM SEQUENCE &REST ARGS &KEY FROM-END (TEST (FUNCTION EQL)) TEST-NOT (START 
0) END KEY) NIL))
(PROGN (PUT 'VECTOR-FIND-IF 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
8936) (GET 'VECTOR-FIND-IF 'SOURCE NIL))) (FSET 'VECTOR-FIND-IF (MAKE-MACRO 'VECTOR-FIND-IF 
(GET-FASL-FUNCTION *FASL-LOADER* 28)) 8936 '(TEST SEQUENCE) NIL))
(PROGN (PUT 'LIST-FIND-IF 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
9027) (GET 'LIST-FIND-IF 'SOURCE NIL))) (FSET 'LIST-FIND-IF (MAKE-MACRO 'LIST-FIND-IF 
(GET-FASL-FUNCTION *FASL-LOADER* 29)) 9027 '(TEST SEQUENCE) NIL))
(PROGN (PUT 'FIND-IF 'SOURCE (CONS '((:FUNCTION FIND-IF) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
9114) (GET 'FIND-IF 'SOURCE NIL))) (FSET 'FIND-IF (GET-FASL-FUNCTION *FASL-LOADER* 
30) 9114 '(TEST SEQUENCE &REST ARGS &KEY FROM-END (START 0) END KEY) NIL))
(PROGN (PUT 'VECTOR-FIND-IF-NOT 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
9427) (GET 'VECTOR-FIND-IF-NOT 'SOURCE NIL))) (FSET 'VECTOR-FIND-IF-NOT (MAKE-MACRO 
'VECTOR-FIND-IF-NOT (GET-FASL-FUNCTION *FASL-LOADER* 31)) 9427 '(TEST SEQUENCE) NIL))
(PROGN (PUT 'LIST-FIND-IF-NOT 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
9526) (GET 'LIST-FIND-IF-NOT 'SOURCE NIL))) (FSET 'LIST-FIND-IF-NOT (MAKE-MACRO 'LIST-FIND-IF-NOT 
(GET-FASL-FUNCTION *FASL-LOADER* 32)) 9526 '(TEST SEQUENCE) NIL))
(PROGN (PUT 'FIND-IF-NOT 'SOURCE (CONS '((:FUNCTION FIND-IF-NOT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/find.lisp" 
9621) (GET 'FIND-IF-NOT 'SOURCE NIL))) (FSET 'FIND-IF-NOT (GET-FASL-FUNCTION *FASL-LOADER* 
33) 9621 '(TEST SEQUENCE &REST ARGS &KEY FROM-END (START 0) END KEY) NIL))
