"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 43)
(COMMON-LISP:SETQ SYSTEM:*SOURCE* #P"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp")
(COMMON-LISP:SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-280725 #:ENVIRONMENT-280726 #:WHOLE-280827 #:ENVIRONMENT-280828))
(COMMON-LISP:SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.java"))
(COMMON-LISP:IN-PACKAGE "COMMON-LISP-USER")
(SYSTEM:%IN-PACKAGE "JAVA")
(REQUIRE "CLOS")
(REQUIRE "PRINT-OBJECT")
(PROGN (SYSTEM:PUT '*CLASSLOADER* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
1642) (GET '*CLASSLOADER* 'SYSTEM::SOURCE NIL))) (DEFVAR *CLASSLOADER* (GET-DEFAULT-CLASSLOADER)))
(EXPORT '(JREGISTER-HANDLER JINTERFACE-IMPLEMENTATION JMAKE-INVOCATION-HANDLER JMAKE-PROXY 
JPROPERTY-VALUE JOBJECT-CLASS JCLASS-SUPERCLASS JCLASS-INTERFACES JCLASS-INTERFACE-P 
JCLASS-SUPERCLASS-P JCLASS-ARRAY-P JARRAY-COMPONENT-TYPE JARRAY-LENGTH JNEW-ARRAY-FROM-ARRAY 
JNEW-ARRAY-FROM-LIST JARRAY-FROM-LIST JCLASS-CONSTRUCTORS JCONSTRUCTOR-PARAMS JCLASS-FIELD 
JCLASS-FIELDS JFIELD-TYPE JFIELD-NAME JCLASS-METHODS JMETHOD-PARAMS JMETHOD-NAME 
JINSTANCE-OF-P JMEMBER-STATIC-P JMEMBER-PUBLIC-P JMEMBER-PROTECTED-P JNEW-RUNTIME-CLASS 
DEFINE-JAVA-CLASS ENSURE-JAVA-CLASS CHAIN JMETHOD-LET JEQUAL))
(PROGN (SYSTEM:PUT 'ADD-URL-TO-CLASSPATH 'SYSTEM::SOURCE (CONS '((:FUNCTION ADD-URL-TO-CLASSPATH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 2377) (GET 
'ADD-URL-TO-CLASSPATH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ADD-URL-TO-CLASSPATH (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 0) 2377 '(URL &OPTIONAL (CLASSLOADER *CLASSLOADER*)) NIL))
(PROGN (SYSTEM:PUT 'ADD-URLS-TO-CLASSPATH 'SYSTEM::SOURCE (CONS '((:FUNCTION ADD-URLS-TO-CLASSPATH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 2489) (GET 
'ADD-URLS-TO-CLASSPATH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ADD-URLS-TO-CLASSPATH 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 2489 '(&REST URLS) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(PROGN (SYSTEM:PUT 'ADD-TO-CLASSPATH 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION ADD-TO-CLASSPATH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 2586) (GET 
'ADD-TO-CLASSPATH 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'ADD-TO-CLASSPATH 'SYSTEM::SOURCE (CONS '((:METHOD ADD-TO-CLASSPATH NIL 
(T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 2887) 
(GET 'ADD-TO-CLASSPATH 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ADD-TO-CLASSPATH :LAMBDA-LIST '(JAR-OR-JARS &OPTIONAL (CLASSLOADER 
(GET-CURRENT-CLASSLOADER))) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(PROGN (SYSTEM:PUT 'JREGISTER-HANDLER 'SYSTEM::SOURCE (CONS '((:FUNCTION JREGISTER-HANDLER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 3027) (GET 
'JREGISTER-HANDLER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JREGISTER-HANDLER (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 7) 3027 '(OBJECT EVENT HANDLER &KEY DATA COUNT) NIL))
(PROGN (SYSTEM:PUT 'JINTERFACE-IMPLEMENTATION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
JINTERFACE-IMPLEMENTATION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
3148) (GET 'JINTERFACE-IMPLEMENTATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JINTERFACE-IMPLEMENTATION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8) 3148 '(INTERFACE &REST METHOD-NAMES-AND-DEFS) 
"Creates and returns an implementation of a Java interface with
   methods calling Lisp closures as given in METHOD-NAMES-AND-DEFS.

   INTERFACE is either a Java interface or a string naming one.

   METHOD-NAMES-AND-DEFS is an alternating list of method names
   (strings) and method definitions (closures).

   For missing methods, a dummy implementation is provided that
   returns nothing or null depending on whether the return type is
   void or not. This is for convenience only, and a warning is issued
   for each undefined method."))
(PROGN (SYSTEM:PUT 'JMAKE-INVOCATION-HANDLER 'SYSTEM::SOURCE (CONS '((:FUNCTION JMAKE-INVOCATION-HANDLER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 4988) (GET 
'JMAKE-INVOCATION-HANDLER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMAKE-INVOCATION-HANDLER 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 9) 4988 '(FUNCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 11))
(PROGN (SYSTEM:PUT 'JMAKE-PROXY 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION JMAKE-PROXY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 5134) (GET 
'JMAKE-PROXY 'SYSTEM::SOURCE NIL))))
(PROGN (SYSTEM:PUT 'CANONICALIZE-JPROXY-INTERFACES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CANONICALIZE-JPROXY-INTERFACES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
5862) (GET 'CANONICALIZE-JPROXY-INTERFACES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CANONICALIZE-JPROXY-INTERFACES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12) 5862 '(IFACES) NIL))
(SYSTEM:PUT 'JMAKE-PROXY 'SYSTEM::SOURCE (CONS '((:METHOD JMAKE-PROXY NIL (T T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 5993) (GET 
'JMAKE-PROXY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE INVOCATION-HANDLER &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'T)) :DOCUMENTATION "Basic implementation that directly uses an invocation handler." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13))
(SYSTEM:PUT 'JMAKE-PROXY 'SYSTEM::SOURCE (CONS '((:METHOD JMAKE-PROXY NIL (T FUNCTION)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 6226) (GET 
'JMAKE-PROXY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE IMPLEMENTATION &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'FUNCTION)) :DOCUMENTATION "Implements a Java interface forwarding method calls to a Lisp function." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 17))
(SYSTEM:PUT 'JMAKE-PROXY 'SYSTEM::SOURCE (CONS '((:METHOD JMAKE-PROXY NIL (T PACKAGE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 6497) (GET 
'JMAKE-PROXY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE IMPLEMENTATION &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'PACKAGE)) :DOCUMENTATION "Implements a Java interface mapping Java method names to symbols in a given package. javaMethodName is mapped to a JAVA-METHOD-NAME symbol. An error is signaled if no such symbol exists in the package, or if the symbol exists but does not name a function." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 21))
(SYSTEM:PUT 'JMAKE-PROXY 'SYSTEM::SOURCE (CONS '((:METHOD JMAKE-PROXY NIL (T HASH-TABLE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 8209) (GET 
'JMAKE-PROXY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE IMPLEMENTATION &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'HASH-TABLE)) :DOCUMENTATION "Implements a Java interface using closures in an hash-table keyed by Java method name." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 28))
(PROGN (SYSTEM:PUT 'JEQUAL 'SYSTEM::SOURCE (CONS '((:FUNCTION JEQUAL) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
8837) (GET 'JEQUAL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JEQUAL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 33) 8837 '(OBJ1 OBJ2) "Compares obj1 with obj2 using java.lang.Object.equals()"))
(PROGN (SYSTEM:PUT 'JOBJECT-CLASS 'SYSTEM::SOURCE (CONS '((:FUNCTION JOBJECT-CLASS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 9011) (GET 
'JOBJECT-CLASS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JOBJECT-CLASS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 34) 9011 '(OBJ) "Returns the Java class that OBJ belongs to"))
(PROGN (SYSTEM:PUT 'JCLASS-SUPERCLASS 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-SUPERCLASS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 9141) (GET 
'JCLASS-SUPERCLASS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-SUPERCLASS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 35) 9141 '(CLASS) "Returns the superclass of CLASS, or NIL if it hasn't got one"))
(PROGN (SYSTEM:PUT 'JCLASS-INTERFACES 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-INTERFACES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 9310) (GET 
'JCLASS-INTERFACES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-INTERFACES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 36) 9310 '(CLASS) "Returns the vector of interfaces of CLASS"))
(PROGN (SYSTEM:PUT 'JCLASS-INTERFACE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-INTERFACE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 9460) (GET 
'JCLASS-INTERFACE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-INTERFACE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 37) 9460 '(CLASS) "Returns T if CLASS is an interface"))
(PROGN (SYSTEM:PUT 'JCLASS-SUPERCLASS-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-SUPERCLASS-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 9602) (GET 
'JCLASS-SUPERCLASS-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-SUPERCLASS-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 38) 9602 '(CLASS-1 CLASS-2) "Returns T if CLASS-1 is a superclass or interface of CLASS-2"))
(PROGN (SYSTEM:PUT 'JCLASS-ARRAY-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-ARRAY-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 9841) (GET 
'JCLASS-ARRAY-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-ARRAY-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 39) 9841 '(CLASS) "Returns T if CLASS is an array class"))
(PROGN (SYSTEM:PUT 'JARRAY-COMPONENT-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION JARRAY-COMPONENT-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 9977) (GET 
'JARRAY-COMPONENT-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JARRAY-COMPONENT-TYPE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 40) 9977 '(ATYPE) "Returns the component type of the array type ATYPE"))
(PROGN (SYSTEM:PUT 'JARRAY-LENGTH 'SYSTEM::SOURCE (CONS '((:FUNCTION JARRAY-LENGTH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 10168) (GET 
'JARRAY-LENGTH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JARRAY-LENGTH (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 41) 10168 '(JAVA-ARRAY) "Returns the length of a Java primitive array."))
(PROGN (SYSTEM:PUT 'JARRAY-REF 'SYSTEM::SOURCE (CONS '((:FUNCTION (SETF JARRAY-REF)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 10317) (GET 
'JARRAY-REF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '(SETF JARRAY-REF) (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 42) 10317 '(NEW-VALUE JAVA-ARRAY &REST INDICES) NIL))
(PROGN (SYSTEM:PUT 'JNEW-ARRAY-FROM-ARRAY 'SYSTEM::SOURCE (CONS '((:FUNCTION JNEW-ARRAY-FROM-ARRAY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 10433) (GET 
'JNEW-ARRAY-FROM-ARRAY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JNEW-ARRAY-FROM-ARRAY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 43) 10433 '(ELEMENT-TYPE ARRAY) "Returns a new Java array with base type ELEMENT-TYPE (a string or a class-ref)
   initialized from ARRAY."))
(PROGN (SYSTEM:PUT 'JNEW-ARRAY-FROM-LIST 'SYSTEM::SOURCE (CONS '((:FUNCTION JNEW-ARRAY-FROM-LIST) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 11560) (GET 
'JNEW-ARRAY-FROM-LIST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JNEW-ARRAY-FROM-LIST (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 45) 11560 '(ELEMENT-TYPE LIST) "Returns a new Java array with base type ELEMENT-TYPE (a string or a class-ref)
   initialized from a Lisp list."))
(PROGN (SYSTEM:PUT 'JARRAY-FROM-LIST 'SYSTEM::SOURCE (CONS '((:FUNCTION JARRAY-FROM-LIST) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 11890) (GET 
'JARRAY-FROM-LIST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JARRAY-FROM-LIST (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 46) 11890 '(LIST) "Return a Java array from LIST whose type is inferred from the first element.

For more control over the type of the array, use JNEW-ARRAY-FROM-LIST."))
(PROGN (SYSTEM:PUT 'LIST-FROM-JARRAY 'SYSTEM::SOURCE (CONS '((:FUNCTION LIST-FROM-JARRAY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 12141) (GET 
'LIST-FROM-JARRAY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LIST-FROM-JARRAY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 47) 12141 '(JARRAY) "Returns a list with the elements of `jarray`."))
(PROGN (SYSTEM:PUT 'VECTOR-FROM-JARRAY 'SYSTEM::SOURCE (CONS '((:FUNCTION VECTOR-FROM-JARRAY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 12315) (GET 
'VECTOR-FROM-JARRAY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VECTOR-FROM-JARRAY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 48) 12315 '(JARRAY) "Returns a vector with the elements of `jarray`."))
(PROGN (SYSTEM:PUT 'LIST-FROM-JENUMERATION 'SYSTEM::SOURCE (CONS '((:FUNCTION LIST-FROM-JENUMERATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 12592) (GET 
'LIST-FROM-JENUMERATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LIST-FROM-JENUMERATION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49) 12592 '(JENUMERATION) "Returns a list with the elements returned by successive `nextElement`
calls on the java.util.Enumeration `jenumeration`."))
(PROGN (SYSTEM:PUT 'JCLASS-CONSTRUCTORS 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-CONSTRUCTORS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 12981) (GET 
'JCLASS-CONSTRUCTORS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-CONSTRUCTORS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 50) 12981 '(CLASS) "Returns a vector of constructors for CLASS"))
(PROGN (SYSTEM:PUT 'JCONSTRUCTOR-PARAMS 'SYSTEM::SOURCE (CONS '((:FUNCTION JCONSTRUCTOR-PARAMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 13136) (GET 
'JCONSTRUCTOR-PARAMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCONSTRUCTOR-PARAMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 51) 13136 '(CONSTRUCTOR) "Returns a vector of parameter types (Java classes) for CONSTRUCTOR"))
(PROGN (SYSTEM:PUT 'JCLASS-FIELDS 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-FIELDS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 13334) (GET 
'JCLASS-FIELDS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-FIELDS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 52) 13334 '(CLASS &KEY DECLARED PUBLIC) "Returns a vector of all (or just the declared/public, if DECLARED/PUBLIC is true) fields of CLASS"))
(PROGN (SYSTEM:PUT 'JCLASS-FIELD 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-FIELD) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 13695) (GET 
'JCLASS-FIELD 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-FIELD (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 53) 13695 '(CLASS FIELD-NAME) "Returns the field named FIELD-NAME of CLASS"))
(PROGN (SYSTEM:PUT 'JFIELD-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION JFIELD-TYPE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
13887) (GET 'JFIELD-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JFIELD-TYPE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 54) 13887 '(FIELD) "Returns the type (Java class) of FIELD"))
(PROGN (SYSTEM:PUT 'JFIELD-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION JFIELD-NAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
14021) (GET 'JFIELD-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JFIELD-NAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 55) 14021 '(FIELD) "Returns the name of FIELD as a Lisp string"))
(PROGN (SYSTEM:PUT 'JFIELD 'SYSTEM::SOURCE (CONS '((:FUNCTION (SETF JFIELD)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
14159) (GET 'JFIELD 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '(SETF JFIELD) (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 56) 14159 '(NEWVALUE CLASS-REF-OR-FIELD FIELD-OR-INSTANCE &OPTIONAL 
(INSTANCE NIL INSTANCE-SUPPLIED-P) UNUSED-VALUE) NIL))
(PROGN (SYSTEM:PUT 'JCLASS-METHODS 'SYSTEM::SOURCE (CONS '((:FUNCTION JCLASS-METHODS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 14507) (GET 
'JCLASS-METHODS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-METHODS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 57) 14507 '(CLASS &KEY DECLARED PUBLIC) "Return a vector of all (or just the declared/public, if DECLARED/PUBLIC is true) methods of CLASS"))
(PROGN (SYSTEM:PUT 'JMETHOD-PARAMS 'SYSTEM::SOURCE (CONS '((:FUNCTION JMETHOD-PARAMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 14874) (GET 
'JMETHOD-PARAMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMETHOD-PARAMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 58) 14874 '(METHOD) "Returns a vector of parameter types (Java classes) for METHOD"))
(PROGN (SYSTEM:PUT 'JMETHOD-RETURN-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION JMETHOD-RETURN-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 15047) (GET 
'JMETHOD-RETURN-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMETHOD-RETURN-TYPE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 59) 15047 '(METHOD) "Returns the result type (Java class) of the METHOD"))
(PROGN (SYSTEM:PUT 'JMETHOD-DECLARING-CLASS 'SYSTEM::SOURCE (CONS '((:FUNCTION JMETHOD-DECLARING-CLASS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 15210) (GET 
'JMETHOD-DECLARING-CLASS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMETHOD-DECLARING-CLASS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 60) 15210 '(METHOD) "Returns the Java class declaring METHOD"))
(PROGN (SYSTEM:PUT 'JMETHOD-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION JMETHOD-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 15370) (GET 
'JMETHOD-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMETHOD-NAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 61) 15370 '(METHOD) "Returns the name of METHOD as a Lisp string"))
(PROGN (SYSTEM:PUT 'JINSTANCE-OF-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JINSTANCE-OF-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 15513) (GET 
'JINSTANCE-OF-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JINSTANCE-OF-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 62) 15513 '(OBJ CLASS) "OBJ is an instance of CLASS (or one of its subclasses)"))
(PROGN (SYSTEM:PUT 'JMEMBER-STATIC-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JMEMBER-STATIC-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 15730) (GET 
'JMEMBER-STATIC-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMEMBER-STATIC-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 63) 15730 '(MEMBER) "MEMBER is a static member of its declaring class"))
(PROGN (SYSTEM:PUT 'JMEMBER-PUBLIC-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JMEMBER-PUBLIC-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 16004) (GET 
'JMEMBER-PUBLIC-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMEMBER-PUBLIC-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 64) 16004 '(MEMBER) "MEMBER is a public member of its declaring class"))
(PROGN (SYSTEM:PUT 'JMEMBER-PROTECTED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JMEMBER-PROTECTED-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 16278) (GET 
'JMEMBER-PROTECTED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMEMBER-PROTECTED-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 65) 16278 '(MEMBER) "MEMBER is a protected member of its declaring class"))
(SYSTEM:PUT 'MAKE-LOAD-FORM 'SYSTEM::SOURCE (CONS '((:METHOD MAKE-LOAD-FORM NIL (JAVA-OBJECT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 16561) (GET 
'MAKE-LOAD-FORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(OBJECT &OPTIONAL ENVIRONMENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-OBJECT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 66))
(PROGN (SYSTEM:PUT 'JPROPERTY-VALUE 'SYSTEM::SOURCE (CONS '((:FUNCTION JPROPERTY-VALUE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 18506) (GET 
'JPROPERTY-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JPROPERTY-VALUE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 70) 18506 '(OBJECT PROPERTY) "setf-able access on the Java Beans notion of property named PROPETRY on OBJECT."))
(PROGN (SYSTEM:PUT 'JPROPERTY-VALUE 'SYSTEM::SOURCE (CONS '((:FUNCTION (SETF JPROPERTY-VALUE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 18674) (GET 
'JPROPERTY-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '(SETF JPROPERTY-VALUE) (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 71) 18674 '(VALUE OBJ PROP) NIL))
(PROGN (SYSTEM:PUT 'CHAIN 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
18763) (GET 'CHAIN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHAIN (SYSTEM:MAKE-MACRO 
'CHAIN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 72)) 18763 '(TARGET OP &REST 
OPS) "Performs chained method invocations. 

TARGET is either the receiver object when the first call is a virtual method
call or a list in the form (:static <jclass>) when the first method
call is a static method call. 

OP and each of the OPS are either method designators or lists in the
form (<method designator> &rest args), where a method designator is
either a string naming a method, or a jmethod object. CHAIN will
perform the method call specified by OP on TARGET; then, for each
of the OPS, CHAIN will perform the specified method call using the
object returned by the previous method call as the receiver, and will
ultimately return the result of the last method call.  For example,
the form:

  (chain (:static \"java.lang.Runtime\") \"getRuntime\" (\"exec\" \"ls\"))

is equivalent to the following Java code:

  java.lang.Runtime.getRuntime().exec(\"ls\");"))
(PROGN (SYSTEM:PUT 'JMETHOD-LET 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
20689) (GET 'JMETHOD-LET 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JMETHOD-LET (SYSTEM:MAKE-MACRO 
'JMETHOD-LET (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 77)) 20689 '(BINDINGS 
&BODY BODY) NIL))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (JAVA-OBJECT 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 21116) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(OBJ STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-OBJECT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 78) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
81))
(SYSTEM:PUT 'PRINT-JAVA-OBJECT-BY-CLASS 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-JAVA-OBJECT-BY-CLASS 
(:AROUND) (T T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
21321) (GET 'PRINT-JAVA-OBJECT-BY-CLASS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-JAVA-OBJECT-BY-CLASS :LAMBDA-LIST '(CLASS OBJ STREAM) 
:QUALIFIERS '(:AROUND) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 84))
(SYSTEM:PUT 'PRINT-JAVA-OBJECT-BY-CLASS 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-JAVA-OBJECT-BY-CLASS 
NIL (T T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
22079) (GET 'PRINT-JAVA-OBJECT-BY-CLASS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-JAVA-OBJECT-BY-CLASS :LAMBDA-LIST '(CLASS OBJ STREAM) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 89))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (JAVA-EXCEPTION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 22644) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(E STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-EXCEPTION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 92) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
100))
(PROGN (SYSTEM:PUT '+JAVA-LANG-OBJECT+ 'SYSTEM::SOURCE (CONS '(+JAVA-LANG-OBJECT+ 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 23507) (GET 
'+JAVA-LANG-OBJECT+ 'SYSTEM::SOURCE NIL))) (DEFCONSTANT +JAVA-LANG-OBJECT+ (JCLASS 
"java.lang.Object")))
(SYSTEM:PUT 'JAVA-CLASS 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
23592) (GET 'JAVA-CLASS 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 108))
(SYSTEM:PUT 'MOP:VALIDATE-SUPERCLASS 'SYSTEM::SOURCE (CONS '((:METHOD MOP:VALIDATE-SUPERCLASS 
NIL (JAVA-CLASS BUILT-IN-CLASS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
23752) (GET 'MOP:VALIDATE-SUPERCLASS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MOP:VALIDATE-SUPERCLASS :LAMBDA-LIST '(CLASS SUPERCLASS) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-CLASS 'BUILT-IN-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 110) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 113))
(PROGN (SYSTEM:PUT '+JAVA-LANG-OBJECT-CLASS+ 'SYSTEM::SOURCE (CONS '(+JAVA-LANG-OBJECT-CLASS+ 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 24159) (GET 
'+JAVA-LANG-OBJECT-CLASS+ 'SYSTEM::SOURCE NIL))) (DEFCONSTANT +JAVA-LANG-OBJECT-CLASS+ 
(%REGISTER-JAVA-CLASS +JAVA-LANG-OBJECT+ (MOP:ENSURE-CLASS (MAKE-SYMBOL "java.lang.Object") 
:METACLASS (FIND-CLASS 'JAVA-CLASS) :DIRECT-SUPERCLASSES (LIST (FIND-CLASS 'JAVA-OBJECT)) 
:JAVA-CLASS +JAVA-LANG-OBJECT+))))
(PROGN (SYSTEM:PUT 'JCLASS-ADDITIONAL-SUPERCLASSES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
JCLASS-ADDITIONAL-SUPERCLASSES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
24600) (GET 'JCLASS-ADDITIONAL-SUPERCLASSES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JCLASS-ADDITIONAL-SUPERCLASSES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 116) 24600 '(JCLASS) "Extension point to put additional CLOS classes on the CPL of a CLOS Java class."))
(PROGN (SYSTEM:PUT 'ENSURE-JAVA-CLASS 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-JAVA-CLASS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 24852) (GET 
'ENSURE-JAVA-CLASS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-JAVA-CLASS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 117) 24852 '(JCLASS) "Attempt to ensure that the Java class referenced by JCLASS exists in the current process of the implementation."))
(SYSTEM:PUT 'MOP:COMPUTE-CLASS-PRECEDENCE-LIST 'SYSTEM::SOURCE (CONS '((:METHOD MOP:COMPUTE-CLASS-PRECEDENCE-LIST 
NIL (JAVA-CLASS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 
25757) (GET 'MOP:COMPUTE-CLASS-PRECEDENCE-LIST 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MOP:COMPUTE-CLASS-PRECEDENCE-LIST :LAMBDA-LIST '(CLASS) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-CLASS)) :DOCUMENTATION 
"Sort classes this way:
   1. Java classes (but not java.lang.Object)
   2. Java interfaces
   3. java.lang.Object
   4. other classes
   Rationale:
   1. Concrete classes are the most specific.
   2. Then come interfaces.
     So if a generic function is specialized both on an interface and a concrete class,
     the concrete class comes first.
   3. because everything is an Object.
   4. to handle base CLOS classes.
   Note: Java interfaces are not sorted among themselves in any way, so if a
   gf is specialized on two different interfaces and you apply it to an object that
   implements both, it is unspecified which method will be called." :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 118) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
123))
(SYSTEM:PUT 'MAKE-INSTANCE 'SYSTEM::SOURCE (CONS '((:METHOD MAKE-INSTANCE NIL (JAVA-CLASS)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 27010) (GET 
'MAKE-INSTANCE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MAKE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS &KEY &ALLOW-OTHER-KEYS) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 128))
(PROGN (SYSTEM:PUT 'JINPUT-STREAM 'SYSTEM::SOURCE (CONS '((:FUNCTION JINPUT-STREAM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/java.lisp" 27189) (GET 
'JINPUT-STREAM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'JINPUT-STREAM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 132) 27189 '(PATHNAME) "Returns a java.io.InputStream for resource denoted by PATHNAME."))
(PROVIDE "JAVA")
