"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 43)
(COMMON-LISP:SETQ SYSTEM:*SOURCE* #P"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp")
(COMMON-LISP:SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-283915 #:ENVIRONMENT-283916 #:WHOLE-283963 #:ENV-283964 #:WHOLE-283999 #:ENV-284000 #:WHOLE-284004 #:ENV-284005 #:WHOLE-284009 #:ENV-284010))
(COMMON-LISP:SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.late_setf"))
(COMMON-LISP:IN-PACKAGE "COMMON-LISP-USER")
(SYSTEM:%IN-PACKAGE "SYSTEM")
(PROGN (PUT 'DEFINE-SETF-EXPANDER 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp" 
1610) (GET 'DEFINE-SETF-EXPANDER 'SOURCE NIL))) (FSET 'DEFINE-SETF-EXPANDER (MAKE-MACRO 
'DEFINE-SETF-EXPANDER (GET-FASL-FUNCTION *FASL-LOADER* 0)) 1610 '(ACCESS-FN LAMBDA-LIST 
&BODY BODY) NIL))
(PUT 'VALUES 'SOURCE (CONS '(:SETF-EXPANDER "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp" 
2482) (GET 'VALUES 'SOURCE NIL)))
(PUT 'VALUES 'SETF-EXPANDER (FUNCTION (LAMBDA (#2? #3?) (BLOCK VALUES (LET* ((ENV 
#3?)) (UNLESS (<= 0 (DOT-LENGTH (CDR #2?))) (ARG-COUNT-ERROR 'DEFINE-SETF-EXPANDER 
'VALUES (CDR #2?) '(&REST PLACES &ENVIRONMENT ENV) 0 NIL)) (LET* ((PLACES (CDR #2?))) 
(BLOCK VALUES (LET ((SETTERS NIL) (GETTERS NIL) (ALL-DUMMIES NIL) (ALL-VALS NIL) 
(NEWVALS NIL)) (DOLIST (PLACE PLACES) (MULTIPLE-VALUE-BIND (DUMMIES VALS NEWVAL SETTER 
GETTER) (GET-SETF-EXPANSION PLACE ENV) (PROGN (SETQ ALL-DUMMIES (APPEND ALL-DUMMIES 
DUMMIES (CDR NEWVAL))) (SETQ ALL-VALS (APPEND ALL-VALS VALS (MAPCAR (CONSTANTLY NIL) 
(CDR NEWVAL)))) (SETQ NEWVALS (APPEND NEWVALS (LIST (CAR NEWVAL))))) (SETQ SETTERS 
(CONS SETTER SETTERS)) (SETQ GETTERS (CONS GETTER GETTERS)))) (VALUES ALL-DUMMIES 
ALL-VALS NEWVALS (BACKQ-CONS 'VALUES (REVERSE SETTERS)) (BACKQ-CONS 'VALUES (REVERSE 
GETTERS)))))))))))
(PROGN (PUT 'MAKE-GENSYM-LIST 'SOURCE (CONS '((:FUNCTION MAKE-GENSYM-LIST) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp" 
3206) (GET 'MAKE-GENSYM-LIST 'SOURCE NIL))) (FSET 'MAKE-GENSYM-LIST (GET-FASL-FUNCTION 
*FASL-LOADER* 1) 3206 '(N) NIL))
(PUT 'GETF 'SOURCE (CONS '(:SETF-EXPANDER "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp" 
3308) (GET 'GETF 'SOURCE NIL)))
(PUT 'GETF 'SETF-EXPANDER (FUNCTION (LAMBDA (#4? #5?) (BLOCK GETF (LET* ((ENV #5?)) 
(UNLESS (<= 2 (DOT-LENGTH (CDR #4?)) 3) (ARG-COUNT-ERROR 'DEFINE-SETF-EXPANDER 'GETF 
(CDR #4?) '(PLACE PROP &OPTIONAL DEFAULT &ENVIRONMENT ENV) 2 3)) (LET* ((PLACE (CAR 
(CDR #4?))) (PROP (CAR (CDR (CDR #4?)))) (DEFAULT (IF (NOT (NULL (CDR (CDR (CDR #4?))))) 
(CAR (CDR (CDR (CDR #4?)))) NIL))) (BLOCK GETF (MULTIPLE-VALUE-BIND (TEMPS VALUES 
STORES SET GET) (GET-SETF-EXPANSION PLACE ENV) (LET ((NEWVAL (GENSYM)) (PTEMP (GENSYM)) 
(DEF-TEMP (IF DEFAULT (GENSYM)))) (VALUES (BACKQ-APPEND TEMPS (BACKQ-CONS PTEMP (IF 
DEFAULT (BACKQ-LIST DEF-TEMP)))) (BACKQ-APPEND VALUES (BACKQ-CONS PROP (IF DEFAULT 
(BACKQ-LIST DEFAULT)))) (BACKQ-LIST NEWVAL) (BACKQ-LIST 'LET (BACKQ-LIST (BACKQ-LIST 
(CAR STORES) (BACKQ-LIST '%PUTF GET PTEMP NEWVAL))) SET NEWVAL) (BACKQ-LIST* 'GETF 
GET PTEMP (IF DEFAULT (BACKQ-LIST DEF-TEMP)))))))))))))
(PUT 'APPLY 'SOURCE (CONS '(:SETF-EXPANDER "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp" 
3895) (GET 'APPLY 'SOURCE NIL)))
(PUT 'APPLY 'SETF-EXPANDER (FUNCTION (LAMBDA (#6? #7?) (DECLARE (IGNORE #7?)) (BLOCK 
APPLY (LET* NIL (UNLESS (<= 1 (DOT-LENGTH (CDR #6?))) (ARG-COUNT-ERROR 'DEFINE-SETF-EXPANDER 
'APPLY (CDR #6?) '(FUNCTIONOID &REST ARGS) 1 NIL)) (LET* ((FUNCTIONOID (CAR (CDR 
#6?))) (ARGS (CDR (CDR #6?)))) (BLOCK APPLY (LET ((FUNCTION (SECOND FUNCTIONOID)) 
(NEW-VAR (GENSYM)) (VARS (MAKE-GENSYM-LIST (LENGTH ARGS)))) (VALUES VARS ARGS (LIST 
NEW-VAR) (BACKQ-LIST* 'APPLY (BACKQ-LIST 'FUNCTION (BACKQ-LIST 'SETF FUNCTION)) NEW-VAR 
VARS) (BACKQ-LIST* 'APPLY (BACKQ-LIST 'FUNCTION FUNCTION) VARS))))))))))
(PUT 'THE 'SOURCE (CONS '(:SETF-EXPANDER "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp" 
4201) (GET 'THE 'SOURCE NIL)))
(PUT 'THE 'SETF-EXPANDER (FUNCTION (LAMBDA (#8? #9?) (BLOCK THE (LET* ((ENV #9?)) 
(UNLESS (<= 2 (DOT-LENGTH (CDR #8?)) 2) (ARG-COUNT-ERROR 'DEFINE-SETF-EXPANDER 'THE 
(CDR #8?) '(TYPE PLACE &ENVIRONMENT ENV) 2 2)) (LET* ((TYPE (CAR (CDR #8?))) (PLACE 
(CAR (CDR (CDR #8?))))) (BLOCK THE (MULTIPLE-VALUE-BIND (TEMPS SUBFORMS STORE-VARS 
SETTER GETTER) (GET-SETF-EXPANSION PLACE ENV) (VALUES TEMPS SUBFORMS STORE-VARS (BACKQ-LIST 
'MULTIPLE-VALUE-BIND STORE-VARS (BACKQ-LIST 'THE TYPE (BACKQ-CONS 'VALUES STORE-VARS)) 
SETTER) (BACKQ-LIST 'THE TYPE GETTER))))))))))
(PROGN (PUT 'MACRO-FUNCTION 'SOURCE (CONS '((:FUNCTION (SETF MACRO-FUNCTION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/late-setf.lisp" 
4551) (GET 'MACRO-FUNCTION 'SOURCE NIL))) (FSET '(SETF MACRO-FUNCTION) (GET-FASL-FUNCTION 
*FASL-LOADER* 2) 4551 '(NEW-FUNCTION SYMBOL &OPTIONAL ENVIRONMENT) NIL))
