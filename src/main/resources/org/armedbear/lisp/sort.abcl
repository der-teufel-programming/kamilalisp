"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 43)
(COMMON-LISP:SETQ SYSTEM:*SOURCE* #P"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp")
(COMMON-LISP:SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-302760 #:ENVIRONMENT-302761 #:WHOLE-302842 #:ENVIRONMENT-302843 #:G302898 #:G302899 #:G302900 #:G302901 #:G302902 #:G302897 #:G302904 #:G302935 #:G302936 #:G302937 #:G302938 #:G302939 #:G302934 #:G302941 #:G302972 #:G302973 #:G302974 #:G302975 #:G302976 #:G302971 #:G302978 #:G303009 #:G303010 #:G303011 #:G303012 #:G303013 #:G303008 #:G303015 #:WHOLE-303531 #:ENVIRONMENT-303532 #:G303731))
(COMMON-LISP:SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.sort"))
(COMMON-LISP:IN-PACKAGE "COMMON-LISP-USER")
(SYSTEM:%IN-PACKAGE "SYSTEM")
(REQUIRE "EXTENSIBLE-SEQUENCES-BASE")
(PROGN (PUT 'MERGE-VECTORS-BODY 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
1622) (GET 'MERGE-VECTORS-BODY 'SOURCE NIL))) (FSET 'MERGE-VECTORS-BODY (MAKE-MACRO 
'MERGE-VECTORS-BODY (GET-FASL-FUNCTION *FASL-LOADER* 0)) 1622 '(TYPE REF A START-A 
END-A B START-B END-B AUX START-AUX PREDICATE &OPTIONAL KEY) NIL))
(PROGN (PUT 'MERGE-SORT-BODY 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
6263) (GET 'MERGE-SORT-BODY 'SOURCE NIL))) (FSET 'MERGE-SORT-BODY (MAKE-MACRO 'MERGE-SORT-BODY 
(GET-FASL-FUNCTION *FASL-LOADER* 1)) 6263 '(TYPE REF MPREDICATE MKEY MSEQUENCE MSTART 
MEND) NIL))
(PROGN (PUT 'MERGE-SORT-VECTORS 'SOURCE (CONS '((:FUNCTION MERGE-SORT-VECTORS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
8162) (GET 'MERGE-SORT-VECTORS 'SOURCE NIL))) (FSET 'MERGE-SORT-VECTORS (GET-FASL-FUNCTION 
*FASL-LOADER* 2) 8162 '(SEQUENCE PREDICATE KEY) NIL))
(PROCLAIM '(FTYPE (FUNCTION (LIST) CONS) LAST-CONS-OF))
(PROGN (PUT 'LAST-CONS-OF 'SOURCE (CONS '((:FUNCTION LAST-CONS-OF) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
8805) (GET 'LAST-CONS-OF 'SOURCE NIL))) (FSET 'LAST-CONS-OF (GET-FASL-FUNCTION *FASL-LOADER* 
7) 8805 '(LIST) NIL))
(PROGN (PUT 'MERGE-LISTS 'SOURCE (CONS '((:FUNCTION MERGE-LISTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
8940) (GET 'MERGE-LISTS 'SOURCE NIL))) (FSET 'MERGE-LISTS (GET-FASL-FUNCTION *FASL-LOADER* 
8) 8940 '(LIST1 LIST2 PRED KEY) NIL))
(PROGN (PUT 'MERGE-LISTS-NO-KEY 'SOURCE (CONS '((:FUNCTION MERGE-LISTS-NO-KEY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
10488) (GET 'MERGE-LISTS-NO-KEY 'SOURCE NIL))) (FSET 'MERGE-LISTS-NO-KEY (GET-FASL-FUNCTION 
*FASL-LOADER* 9) 10488 '(LIST1 LIST2 PRED) NIL))
(PROGN (PUT 'SORT-LIST 'SOURCE (CONS '((:FUNCTION SORT-LIST) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
11808) (GET 'SORT-LIST 'SOURCE NIL))) (FSET 'SORT-LIST (GET-FASL-FUNCTION *FASL-LOADER* 
10) 11808 '(LIST PRED KEY) NIL))
(PROGN (PUT 'MERGE 'SOURCE (CONS '((:FUNCTION MERGE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
14536) (GET 'MERGE 'SOURCE NIL))) (FSET 'MERGE (GET-FASL-FUNCTION *FASL-LOADER* 11) 
14536 '(RESULT-TYPE SEQUENCE1 SEQUENCE2 PREDICATE &KEY KEY &AUX (L1 (LENGTH SEQUENCE1)) 
(L2 (LENGTH SEQUENCE2))) NIL))
(PROGN (PUT 'QUICKSORT-BODY 'SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
15850) (GET 'QUICKSORT-BODY 'SOURCE NIL))) (FSET 'QUICKSORT-BODY (MAKE-MACRO 'QUICKSORT-BODY 
(GET-FASL-FUNCTION *FASL-LOADER* 12)) 15850 '(TYPE REF MPREDICATE MKEY SEQUENCE MSTART 
MEND) NIL))
(PROGN (PUT 'QUICKSORT 'SOURCE (CONS '((:FUNCTION QUICKSORT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
19090) (GET 'QUICKSORT 'SOURCE NIL))) (FSET 'QUICKSORT (GET-FASL-FUNCTION *FASL-LOADER* 
13) 19090 '(SEQUENCE PREDICATE KEY) NIL))
(PROGN (PUT 'QUICK-SORT 'SOURCE (CONS '((:FUNCTION QUICK-SORT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
19812) (GET 'QUICK-SORT 'SOURCE NIL))) (FSET 'QUICK-SORT (GET-FASL-FUNCTION *FASL-LOADER* 
19) 19812 '(SEQ START END PRED KEY) NIL))
(PROGN (PUT 'SORT 'SOURCE (CONS '((:FUNCTION SORT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
20787) (GET 'SORT 'SOURCE NIL))) (FSET 'SORT (GET-FASL-FUNCTION *FASL-LOADER* 20) 
20787 '(SEQUENCE PREDICATE &REST ARGS &KEY KEY) NIL))
(PROGN (PUT 'STABLE-SORT 'SOURCE (CONS '((:FUNCTION STABLE-SORT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/sort.lisp" 
21162) (GET 'STABLE-SORT 'SOURCE NIL))) (FSET 'STABLE-SORT (GET-FASL-FUNCTION *FASL-LOADER* 
21) 21162 '(SEQUENCE PREDICATE &REST ARGS &KEY KEY) NIL))
