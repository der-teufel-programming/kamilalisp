"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 43)
(COMMON-LISP:SETQ SYSTEM:*SOURCE* #P"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp")
(COMMON-LISP:SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:JVM-OPCODE- #:G143576 #:G143577 #:G143578 #:G143579 #:G143580 #:G143581 #:G143652 #:G143725 #:G143818 #:G143890 #:G143983 #:G144056 #:G144148 #:G144221 #:G144314 #:G144387 #:G144480 #:G144553 #:WHOLE-144688 #:ENVIRONMENT-144689 #:INSTRUCTION- #:G144984 #:G145058 #:G145151 #:G145223 #:G145316 #:G145389 #:G145481 #:G145554 #:G145647 #:G145720 #:WHOLE-146004 #:ENVIRONMENT-146005 #:WHOLE-147251 #:ENVIRONMENT-147252 #:G147402 #:G147442 #:G147482 #:G147522 #:G147562 #:G147602 #:G147642 #:G147852 #:G147954 #:G148050 #:G148146 #:G148286 #:JVM-INSTRUCTIONS))
(COMMON-LISP:SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.jvm_instructions"))
(COMMON-LISP:IN-PACKAGE "COMMON-LISP-USER")
(SYSTEM:%IN-PACKAGE "JVM")
(REQUIRE "COMPILER-ERROR")
(PROCLAIM '(INLINE U2 S1 S2))
(SYSTEM::%DEFKNOWN 'U2 '(FIXNUM) 'CONS)
(SETF (INLINE-EXPANSION 'U2) '(LAMBDA (N) (DECLARE (OPTIMIZE SPEED)) (DECLARE (TYPE 
(UNSIGNED-BYTE 16) N)) (BLOCK U2 (WHEN (NOT (<= 0 N 65535)) (ERROR "u2 argument ~A out of 65k range." 
N)) (LIST (LOGAND (ASH N -8) 255) (LOGAND N 255)))))
(PROGN (PUT 'U2 'SYSTEM::SOURCE (CONS '((:FUNCTION U2) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
1717) (GET 'U2 'SYSTEM::SOURCE NIL))) (FSET 'U2 (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
0) 1717 '(N) NIL))
(SYSTEM::%DEFKNOWN 'S1 '(FIXNUM) 'FIXNUM)
(SETF (INLINE-EXPANSION 'S1) '(LAMBDA (N) (DECLARE (OPTIMIZE SPEED)) (DECLARE (TYPE 
(SIGNED-BYTE 8) N)) (BLOCK S1 (WHEN (NOT (<= -128 N 127)) (ERROR "s1 argument ~A out of 8-bit signed range." 
N)) (IF (< N 0) (1+ (LOGXOR (- N) 255)) N))))
(PROGN (PUT 'S1 'SYSTEM::SOURCE (CONS '((:FUNCTION S1) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
1969) (GET 'S1 'SYSTEM::SOURCE NIL))) (FSET 'S1 (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
1) 1969 '(N) NIL))
(SYSTEM::%DEFKNOWN 'S2 '(FIXNUM) 'CONS)
(SETF (INLINE-EXPANSION 'S2) '(LAMBDA (N) (DECLARE (OPTIMIZE SPEED)) (DECLARE (TYPE 
(SIGNED-BYTE 16) N)) (BLOCK S2 (WHEN (NOT (<= -32768 N 32767)) (ERROR "s2 argument ~A out of 16-bit signed range." 
N)) (U2 (IF (< N 0) (1+ (LOGXOR (- N) 65535)) N)))))
(PROGN (PUT 'S2 'SYSTEM::SOURCE (CONS '((:FUNCTION S2) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2223) (GET 'S2 'SYSTEM::SOURCE NIL))) (FSET 'S2 (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
2) 2223 '(N) NIL))
(PROGN (PUT '*OPCODE-TABLE* 'SYSTEM::SOURCE (CONS '(*OPCODE-TABLE* "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2458) (GET '*OPCODE-TABLE* 'SYSTEM::SOURCE NIL))) (DEFCONSTANT *OPCODE-TABLE* (IF 
(BOUNDP '*OPCODE-TABLE*) (SYMBOL-VALUE '*OPCODE-TABLE*) (MAKE-ARRAY 256))))
(PROGN (PUT '*OPCODES* 'SYSTEM::SOURCE (CONS '(*OPCODES* "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2517) (GET '*OPCODES* 'SYSTEM::SOURCE NIL))) (DEFCONSTANT *OPCODES* (IF (BOUNDP '*OPCODES*) 
(SYMBOL-VALUE '*OPCODES*) (MAKE-HASH-TABLE :TEST 'EQUALP))))
(COMPILER-DEFSTRUCT 'JVM-OPCODE :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR 'MAKE-JVM-OPCODE 
:COPIER 'COPY-JVM-OPCODE :PREDICATE '"JVM-OPCODE-P" :DIRECT-SLOTS '(#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 NAME 0 JVM-OPCODE-NAME NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION NUMBER 1 JVM-OPCODE-NUMBER
 NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION SIZE 2 JVM-OPCODE-SIZE NIL T NIL) 
#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION STACK-EFFECT 3 JVM-OPCODE-STACK-EFFECT NIL T
 NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION REGISTER-USED 4 JVM-OPCODE-REGISTER-USED
 NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION ARGS-SPEC 5 JVM-OPCODE-ARGS-SPEC
 "" T NIL)) :SLOTS '(#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION NAME 0 JVM-OPCODE-NAME NIL
 T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION NUMBER 1 JVM-OPCODE-NUMBER NIL T NIL) 
#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION SIZE 2 JVM-OPCODE-SIZE NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 STACK-EFFECT 3 JVM-OPCODE-STACK-EFFECT NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 REGISTER-USED 4 JVM-OPCODE-REGISTER-USED NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 ARGS-SPEC 5 JVM-OPCODE-ARGS-SPEC "" T NIL)) :INHERITED-ACCESSORS 'NIL :DOCUMENTATION 
'NIL)
(PUT 'JVM-OPCODE 'SYSTEM::SOURCE (CONS '(:STRUCTURE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE 'SYSTEM::SOURCE NIL)))
(PROGN (PUT 'MAKE-JVM-OPCODE 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-JVM-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'MAKE-JVM-OPCODE 'SYSTEM::SOURCE NIL))) (FSET 'MAKE-JVM-OPCODE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 3) 2571 '(&KEY ((:NAME #1?) NIL) ((:NUMBER #2?) NIL) ((:SIZE #3?) NIL) 
((:STACK-EFFECT #4?) NIL) ((:REGISTER-USED #5?) NIL) ((:ARGS-SPEC #6?) "")) NIL))
(PROGN (PUT 'JVM-OPCODE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION JVM-OPCODE-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-P 'SYSTEM::SOURCE NIL))) (FSET 'JVM-OPCODE-P (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 4) 2571 '(SYSTEM::OBJECT) NIL))
(PROCLAIM '(FTYPE (FUNCTION * T) JVM-OPCODE-NAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 5))
(PUT 'JVM-OPCODE-NAME 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER JVM-OPCODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NAME 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-NAME 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM JVM-OPCODE-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NAME 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 6))
(PUT 'JVM-OPCODE-NAME 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 'JVM-OPCODE))
(PUT 'JVM-OPCODE-NAME 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER JVM-OPCODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NAME 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-NAME 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF JVM-OPCODE-NAME)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NAME 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 8))
(PROCLAIM '(FTYPE (FUNCTION * T) JVM-OPCODE-NUMBER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 10))
(PUT 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER JVM-OPCODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM JVM-OPCODE-NUMBER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 11))
(PUT 'JVM-OPCODE-NUMBER 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 'JVM-OPCODE))
(PUT 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER JVM-OPCODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF JVM-OPCODE-NUMBER)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-NUMBER 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 13))
(PROCLAIM '(FTYPE (FUNCTION * T) JVM-OPCODE-SIZE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 15))
(PUT 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER JVM-OPCODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM JVM-OPCODE-SIZE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 16))
(PUT 'JVM-OPCODE-SIZE 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 'JVM-OPCODE))
(PUT 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER JVM-OPCODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF JVM-OPCODE-SIZE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-SIZE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 18))
(PROCLAIM '(FTYPE (FUNCTION * T) JVM-OPCODE-STACK-EFFECT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 20))
(PUT 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER JVM-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM JVM-OPCODE-STACK-EFFECT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 21))
(PUT 'JVM-OPCODE-STACK-EFFECT 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 3 'JVM-OPCODE))
(PUT 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER JVM-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF JVM-OPCODE-STACK-EFFECT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-STACK-EFFECT 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 23))
(PROCLAIM '(FTYPE (FUNCTION * T) JVM-OPCODE-REGISTER-USED))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 25))
(PUT 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER JVM-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM JVM-OPCODE-REGISTER-USED) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 26))
(PUT 'JVM-OPCODE-REGISTER-USED 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 4 'JVM-OPCODE))
(PUT 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER JVM-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF JVM-OPCODE-REGISTER-USED)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-REGISTER-USED 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 28))
(PROCLAIM '(FTYPE (FUNCTION * T) JVM-OPCODE-ARGS-SPEC))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 30))
(PUT 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER JVM-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM JVM-OPCODE-ARGS-SPEC) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 31))
(PUT 'JVM-OPCODE-ARGS-SPEC 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 5 'JVM-OPCODE))
(PUT 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER JVM-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE NIL)))
(PUT 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF JVM-OPCODE-ARGS-SPEC)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
2571) (GET 'JVM-OPCODE-ARGS-SPEC 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 33))
(PROCLAIM '(FTYPE (FUNCTION (T) T) COPY-JVM-OPCODE))
(SYSTEM::%SET-FDEFINITION 'COPY-JVM-OPCODE (FUNCTION COPY-STRUCTURE))
(PROGN (PUT '%DEFINE-OPCODE 'SYSTEM::SOURCE (CONS '((:FUNCTION %DEFINE-OPCODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
3414) (GET '%DEFINE-OPCODE 'SYSTEM::SOURCE NIL))) (FSET '%DEFINE-OPCODE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 35) 3414 '(NAME NUMBER SIZE STACK-EFFECT REGISTER &OPTIONAL ARGS-SPEC) 
NIL))
(PROGN (PUT 'DEFINE-OPCODE 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
4046) (GET 'DEFINE-OPCODE 'SYSTEM::SOURCE NIL))) (FSET 'DEFINE-OPCODE (MAKE-MACRO 
'DEFINE-OPCODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 36)) 4046 '(NAME NUMBER SIZE 
STACK-EFFECT REGISTER &OPTIONAL ARGS-SPEC) NIL))
(%DEFINE-OPCODE 'NOP 0 1 0 NIL)
(%DEFINE-OPCODE 'ACONST_NULL 1 1 1 NIL)
(%DEFINE-OPCODE 'ICONST_M1 2 1 1 NIL)
(%DEFINE-OPCODE 'ICONST_0 3 1 1 NIL)
(%DEFINE-OPCODE 'ICONST_1 4 1 1 NIL)
(%DEFINE-OPCODE 'ICONST_2 5 1 1 NIL)
(%DEFINE-OPCODE 'ICONST_3 6 1 1 NIL)
(%DEFINE-OPCODE 'ICONST_4 7 1 1 NIL)
(%DEFINE-OPCODE 'ICONST_5 8 1 1 NIL)
(%DEFINE-OPCODE 'LCONST_0 9 1 2 NIL)
(%DEFINE-OPCODE 'LCONST_1 10 1 2 NIL)
(%DEFINE-OPCODE 'FCONST_0 11 1 1 NIL)
(%DEFINE-OPCODE 'FCONST_1 12 1 1 NIL)
(%DEFINE-OPCODE 'FCONST_2 13 1 1 NIL)
(%DEFINE-OPCODE 'DCONST_0 14 1 2 NIL)
(%DEFINE-OPCODE 'DCONST_1 15 1 2 NIL)
(%DEFINE-OPCODE 'BIPUSH 16 2 1 NIL)
(%DEFINE-OPCODE 'SIPUSH 17 3 1 NIL)
(%DEFINE-OPCODE 'LDC 18 2 1 NIL "p")
(%DEFINE-OPCODE 'LDC_W 19 3 1 NIL "P")
(%DEFINE-OPCODE 'LDC2_W 20 3 2 NIL "P")
(%DEFINE-OPCODE 'ILOAD 21 2 1 T)
(%DEFINE-OPCODE 'LLOAD 22 2 2 T)
(%DEFINE-OPCODE 'FLOAD 23 2 NIL T)
(%DEFINE-OPCODE 'DLOAD 24 2 NIL T)
(%DEFINE-OPCODE 'ALOAD 25 2 1 T)
(%DEFINE-OPCODE 'ILOAD_0 26 1 1 0)
(%DEFINE-OPCODE 'ILOAD_1 27 1 1 1)
(%DEFINE-OPCODE 'ILOAD_2 28 1 1 2)
(%DEFINE-OPCODE 'ILOAD_3 29 1 1 3)
(%DEFINE-OPCODE 'LLOAD_0 30 1 2 0)
(%DEFINE-OPCODE 'LLOAD_1 31 1 2 1)
(%DEFINE-OPCODE 'LLOAD_2 32 1 2 2)
(%DEFINE-OPCODE 'LLOAD_3 33 1 2 3)
(%DEFINE-OPCODE 'FLOAD_0 34 1 NIL 0)
(%DEFINE-OPCODE 'FLOAD_1 35 1 NIL 1)
(%DEFINE-OPCODE 'FLOAD_2 36 1 NIL 2)
(%DEFINE-OPCODE 'FLOAD_3 37 1 NIL 3)
(%DEFINE-OPCODE 'DLOAD_0 38 1 NIL 0)
(%DEFINE-OPCODE 'DLOAD_1 39 1 NIL 1)
(%DEFINE-OPCODE 'DLOAD_2 40 1 NIL 2)
(%DEFINE-OPCODE 'DLOAD_3 41 1 NIL 3)
(%DEFINE-OPCODE 'ALOAD_0 42 1 1 0)
(%DEFINE-OPCODE 'ALOAD_1 43 1 1 1)
(%DEFINE-OPCODE 'ALOAD_2 44 1 1 2)
(%DEFINE-OPCODE 'ALOAD_3 45 1 1 3)
(%DEFINE-OPCODE 'IALOAD 46 1 -1 NIL)
(%DEFINE-OPCODE 'LALOAD 47 1 0 NIL)
(%DEFINE-OPCODE 'FALOAD 48 1 -1 NIL)
(%DEFINE-OPCODE 'DALOAD 49 1 0 NIL)
(%DEFINE-OPCODE 'AALOAD 50 1 -1 NIL)
(%DEFINE-OPCODE 'BALOAD 51 1 NIL NIL)
(%DEFINE-OPCODE 'CALOAD 52 1 NIL NIL)
(%DEFINE-OPCODE 'SALOAD 53 1 NIL NIL)
(%DEFINE-OPCODE 'ISTORE 54 2 -1 T)
(%DEFINE-OPCODE 'LSTORE 55 2 -2 T)
(%DEFINE-OPCODE 'FSTORE 56 2 NIL T)
(%DEFINE-OPCODE 'DSTORE 57 2 NIL T)
(%DEFINE-OPCODE 'ASTORE 58 2 -1 T)
(%DEFINE-OPCODE 'ISTORE_0 59 1 -1 0)
(%DEFINE-OPCODE 'ISTORE_1 60 1 -1 1)
(%DEFINE-OPCODE 'ISTORE_2 61 1 -1 2)
(%DEFINE-OPCODE 'ISTORE_3 62 1 -1 3)
(%DEFINE-OPCODE 'LSTORE_0 63 1 -2 0)
(%DEFINE-OPCODE 'LSTORE_1 64 1 -2 1)
(%DEFINE-OPCODE 'LSTORE_2 65 1 -2 2)
(%DEFINE-OPCODE 'LSTORE_3 66 1 -2 3)
(%DEFINE-OPCODE 'FSTORE_0 67 1 NIL 0)
(%DEFINE-OPCODE 'FSTORE_1 68 1 NIL 1)
(%DEFINE-OPCODE 'FSTORE_2 69 1 NIL 2)
(%DEFINE-OPCODE 'FSTORE_3 70 1 NIL 3)
(%DEFINE-OPCODE 'DSTORE_0 71 1 NIL 0)
(%DEFINE-OPCODE 'DSTORE_1 72 1 NIL 1)
(%DEFINE-OPCODE 'DSTORE_2 73 1 NIL 2)
(%DEFINE-OPCODE 'DSTORE_3 74 1 NIL 3)
(%DEFINE-OPCODE 'ASTORE_0 75 1 -1 0)
(%DEFINE-OPCODE 'ASTORE_1 76 1 -1 1)
(%DEFINE-OPCODE 'ASTORE_2 77 1 -1 2)
(%DEFINE-OPCODE 'ASTORE_3 78 1 -1 3)
(%DEFINE-OPCODE 'IASTORE 79 1 -3 NIL)
(%DEFINE-OPCODE 'LASTORE 80 1 -4 NIL)
(%DEFINE-OPCODE 'FASTORE 81 1 -3 NIL)
(%DEFINE-OPCODE 'DASTORE 82 1 -4 NIL)
(%DEFINE-OPCODE 'AASTORE 83 1 -3 NIL)
(%DEFINE-OPCODE 'BASTORE 84 1 NIL NIL)
(%DEFINE-OPCODE 'CASTORE 85 1 NIL NIL)
(%DEFINE-OPCODE 'SASTORE 86 1 NIL NIL)
(%DEFINE-OPCODE 'POP 87 1 -1 NIL)
(%DEFINE-OPCODE 'POP2 88 1 -2 NIL)
(%DEFINE-OPCODE 'DUP 89 1 1 NIL)
(%DEFINE-OPCODE 'DUP_X1 90 1 1 NIL)
(%DEFINE-OPCODE 'DUP_X2 91 1 1 NIL)
(%DEFINE-OPCODE 'DUP2 92 1 2 NIL)
(%DEFINE-OPCODE 'DUP2_X1 93 1 2 NIL)
(%DEFINE-OPCODE 'DUP2_X2 94 1 2 NIL)
(%DEFINE-OPCODE 'SWAP 95 1 0 NIL)
(%DEFINE-OPCODE 'IADD 96 1 -1 NIL)
(%DEFINE-OPCODE 'LADD 97 1 -2 NIL)
(%DEFINE-OPCODE 'FADD 98 1 -1 NIL)
(%DEFINE-OPCODE 'DADD 99 1 -2 NIL)
(%DEFINE-OPCODE 'ISUB 100 1 -1 NIL)
(%DEFINE-OPCODE 'LSUB 101 1 -2 NIL)
(%DEFINE-OPCODE 'FSUB 102 1 -1 NIL)
(%DEFINE-OPCODE 'DSUB 103 1 -2 NIL)
(%DEFINE-OPCODE 'IMUL 104 1 -1 NIL)
(%DEFINE-OPCODE 'LMUL 105 1 -2 NIL)
(%DEFINE-OPCODE 'FMUL 106 1 -1 NIL)
(%DEFINE-OPCODE 'DMUL 107 1 -2 NIL)
(%DEFINE-OPCODE 'IDIV 108 1 NIL NIL)
(%DEFINE-OPCODE 'LDIV 109 1 NIL NIL)
(%DEFINE-OPCODE 'FDIV 110 1 NIL NIL)
(%DEFINE-OPCODE 'DDIV 111 1 NIL NIL)
(%DEFINE-OPCODE 'IREM 112 1 NIL NIL)
(%DEFINE-OPCODE 'LREM 113 1 NIL NIL)
(%DEFINE-OPCODE 'FREM 114 1 NIL NIL)
(%DEFINE-OPCODE 'DREM 115 1 NIL NIL)
(%DEFINE-OPCODE 'INEG 116 1 0 NIL)
(%DEFINE-OPCODE 'LNEG 117 1 0 NIL)
(%DEFINE-OPCODE 'FNEG 118 1 0 NIL)
(%DEFINE-OPCODE 'DNEG 119 1 0 NIL)
(%DEFINE-OPCODE 'ISHL 120 1 -1 NIL)
(%DEFINE-OPCODE 'LSHL 121 1 -1 NIL)
(%DEFINE-OPCODE 'ISHR 122 1 -1 NIL)
(%DEFINE-OPCODE 'LSHR 123 1 -1 NIL)
(%DEFINE-OPCODE 'IUSHR 124 1 NIL NIL)
(%DEFINE-OPCODE 'LUSHR 125 1 NIL NIL)
(%DEFINE-OPCODE 'IAND 126 1 -1 NIL)
(%DEFINE-OPCODE 'LAND 127 1 -2 NIL)
(%DEFINE-OPCODE 'IOR 128 1 -1 NIL)
(%DEFINE-OPCODE 'LOR 129 1 -2 NIL)
(%DEFINE-OPCODE 'IXOR 130 1 -1 NIL)
(%DEFINE-OPCODE 'LXOR 131 1 -2 NIL)
(%DEFINE-OPCODE 'IINC 132 3 0 T)
(%DEFINE-OPCODE 'I2L 133 1 1 NIL)
(%DEFINE-OPCODE 'I2F 134 1 0 NIL)
(%DEFINE-OPCODE 'I2D 135 1 1 NIL)
(%DEFINE-OPCODE 'L2I 136 1 -1 NIL)
(%DEFINE-OPCODE 'L2F 137 1 -1 NIL)
(%DEFINE-OPCODE 'L2D 138 1 0 NIL)
(%DEFINE-OPCODE 'F2I 139 1 NIL NIL)
(%DEFINE-OPCODE 'F2L 140 1 NIL NIL)
(%DEFINE-OPCODE 'F2D 141 1 1 NIL)
(%DEFINE-OPCODE 'D2I 142 1 NIL NIL)
(%DEFINE-OPCODE 'D2L 143 1 NIL NIL)
(%DEFINE-OPCODE 'D2F 144 1 -1 NIL)
(%DEFINE-OPCODE 'I2B 145 1 NIL NIL)
(%DEFINE-OPCODE 'I2C 146 1 NIL NIL)
(%DEFINE-OPCODE 'I2S 147 1 NIL NIL)
(%DEFINE-OPCODE 'LCMP 148 1 -3 NIL)
(%DEFINE-OPCODE 'FCMPL 149 1 -1 NIL)
(%DEFINE-OPCODE 'FCMPG 150 1 -1 NIL)
(%DEFINE-OPCODE 'DCMPL 151 1 -3 NIL)
(%DEFINE-OPCODE 'DCMPG 152 1 -3 NIL)
(%DEFINE-OPCODE 'IFEQ 153 3 -1 NIL)
(%DEFINE-OPCODE 'IFNE 154 3 -1 NIL)
(%DEFINE-OPCODE 'IFLT 155 3 -1 NIL)
(%DEFINE-OPCODE 'IFGE 156 3 -1 NIL)
(%DEFINE-OPCODE 'IFGT 157 3 -1 NIL)
(%DEFINE-OPCODE 'IFLE 158 3 -1 NIL)
(%DEFINE-OPCODE 'IF_ICMPEQ 159 3 -2 NIL)
(%DEFINE-OPCODE 'IF_ICMPNE 160 3 -2 NIL)
(%DEFINE-OPCODE 'IF_ICMPLT 161 3 -2 NIL)
(%DEFINE-OPCODE 'IF_ICMPGE 162 3 -2 NIL)
(%DEFINE-OPCODE 'IF_ICMPGT 163 3 -2 NIL)
(%DEFINE-OPCODE 'IF_ICMPLE 164 3 -2 NIL)
(%DEFINE-OPCODE 'IF_ACMPEQ 165 3 -2 NIL)
(%DEFINE-OPCODE 'IF_ACMPNE 166 3 -2 NIL)
(%DEFINE-OPCODE 'GOTO 167 3 0 NIL)
(%DEFINE-OPCODE 'TABLESWITCH 170 0 NIL NIL)
(%DEFINE-OPCODE 'LOOKUPSWITCH 171 0 NIL NIL)
(%DEFINE-OPCODE 'IRETURN 172 1 NIL NIL)
(%DEFINE-OPCODE 'LRETURN 173 1 NIL NIL)
(%DEFINE-OPCODE 'FRETURN 174 1 NIL NIL)
(%DEFINE-OPCODE 'DRETURN 175 1 NIL NIL)
(%DEFINE-OPCODE 'IRETURN 172 1 -1 NIL)
(%DEFINE-OPCODE 'ARETURN 176 1 -1 NIL)
(%DEFINE-OPCODE 'RETURN 177 1 0 NIL)
(%DEFINE-OPCODE 'GETSTATIC 178 3 1 NIL "P")
(%DEFINE-OPCODE 'PUTSTATIC 179 3 -1 NIL "P")
(%DEFINE-OPCODE 'GETFIELD 180 3 0 NIL "P")
(%DEFINE-OPCODE 'PUTFIELD 181 3 -2 NIL "P")
(%DEFINE-OPCODE 'INVOKEVIRTUAL 182 3 NIL NIL "P")
(%DEFINE-OPCODE 'INVOKESPECIAL 183 3 NIL NIL "P")
(%DEFINE-OPCODE 'INVOKESTATIC 184 3 NIL NIL "P")
(%DEFINE-OPCODE 'INVOKEINTERFACE 185 5 NIL NIL "P")
(%DEFINE-OPCODE 'UNUSED 186 0 NIL NIL)
(%DEFINE-OPCODE 'NEW 187 3 1 NIL "P")
(%DEFINE-OPCODE 'NEWARRAY 188 2 NIL NIL)
(%DEFINE-OPCODE 'ANEWARRAY 189 3 0 NIL)
(%DEFINE-OPCODE 'ARRAYLENGTH 190 1 0 NIL)
(%DEFINE-OPCODE 'ATHROW 191 1 0 NIL)
(%DEFINE-OPCODE 'CHECKCAST 192 3 0 NIL "P")
(%DEFINE-OPCODE 'INSTANCEOF 193 3 0 NIL "P")
(%DEFINE-OPCODE 'MONITORENTER 194 1 -1 NIL)
(%DEFINE-OPCODE 'MONITOREXIT 195 1 -1 NIL)
(%DEFINE-OPCODE 'WIDE 196 0 NIL NIL)
(%DEFINE-OPCODE 'MULTIANEWARRAY 197 4 NIL NIL)
(%DEFINE-OPCODE 'IFNULL 198 3 -1 NIL)
(%DEFINE-OPCODE 'IFNONNULL 199 3 NIL NIL)
(%DEFINE-OPCODE 'GOTO_W 200 5 NIL NIL)
(%DEFINE-OPCODE 'LABEL 202 0 0 NIL)
(%DEFINE-OPCODE 'CLEAR-VALUES 205 0 0 T)
(PROGN (PUT '*LAST-OPCODE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
11836) (GET '*LAST-OPCODE* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *LAST-OPCODE* 206))
(PROCLAIM '(FTYPE (FUNCTION (T) T) OPCODE-NAME))
(PROGN (PUT 'OPCODE-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION OPCODE-NAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
11991) (GET 'OPCODE-NAME 'SYSTEM::SOURCE NIL))) (FSET 'OPCODE-NAME (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 37) 11991 '(OPCODE-NUMBER) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) (INTEGER 0 255)) OPCODE-NUMBER))
(PROGN (PUT 'OPCODE-NUMBER 'SYSTEM::SOURCE (CONS '((:FUNCTION OPCODE-NUMBER) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12186) (GET 'OPCODE-NUMBER 'SYSTEM::SOURCE NIL))) (FSET 'OPCODE-NUMBER (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 38) 12186 '(OPCODE-NAME) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) FIXNUM) OPCODE-SIZE))
(PROGN (PUT 'OPCODE-SIZE 'SYSTEM::SOURCE (CONS '((:FUNCTION OPCODE-SIZE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12464) (GET 'OPCODE-SIZE 'SYSTEM::SOURCE NIL))) (FSET 'OPCODE-SIZE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 39) 12464 '(OPCODE-NUMBER) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) T) OPCODE-STACK-EFFECT))
(PROGN (PUT 'OPCODE-STACK-EFFECT 'SYSTEM::SOURCE (CONS '((:FUNCTION OPCODE-STACK-EFFECT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12702) (GET 'OPCODE-STACK-EFFECT 'SYSTEM::SOURCE NIL))) (FSET 'OPCODE-STACK-EFFECT 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 40) 12702 '(OPCODE-NUMBER) NIL))
(PROGN (PUT 'OPCODE-ARGS-SPEC 'SYSTEM::SOURCE (CONS '((:FUNCTION OPCODE-ARGS-SPEC) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12840) (GET 'OPCODE-ARGS-SPEC 'SYSTEM::SOURCE NIL))) (FSET 'OPCODE-ARGS-SPEC (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 41) 12840 '(OPCODE-NUMBER) NIL))
(COMPILER-DEFSTRUCT 'INSTRUCTION :CONC-NAME '#21? :DEFAULT-CONSTRUCTOR 'NIL :CONSTRUCTORS 
'((%MAKE-INSTRUCTION (OPCODE ARGS))) :COPIER 'COPY-INSTRUCTION :PREDICATE '"INSTRUCTION-P" 
:DIRECT-SLOTS '(#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION OPCODE 0 INSTRUCTION-OPCODE 0
 (INTEGER 0 255) NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION ARGS 1 INSTRUCTION-ARGS
 NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION STACK 2 INSTRUCTION-STACK NIL T NIL) 
#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION DEPTH 3 INSTRUCTION-DEPTH NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 WIDE 4 INSTRUCTION-WIDE NIL T NIL)) :SLOTS '(#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 OPCODE 0 INSTRUCTION-OPCODE 0 (INTEGER 0 255) NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 ARGS 1 INSTRUCTION-ARGS NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION STACK 2 INSTRUCTION-STACK
 NIL T NIL) #(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION DEPTH 3 INSTRUCTION-DEPTH NIL T NIL) 
#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION WIDE 4 INSTRUCTION-WIDE NIL T NIL)) :INHERITED-ACCESSORS 
'NIL :DOCUMENTATION 'NIL)
(PUT 'INSTRUCTION 'SYSTEM::SOURCE (CONS '(:STRUCTURE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION 'SYSTEM::SOURCE NIL)))
(PROCLAIM '(INLINE %MAKE-INSTRUCTION))
(SETF (INLINE-EXPANSION '%MAKE-INSTRUCTION) '(LAMBDA (OPCODE ARGS) (BLOCK %MAKE-INSTRUCTION 
(MAKE-STRUCTURE (TRULY-THE SYMBOL 'INSTRUCTION) OPCODE ARGS NIL NIL NIL))))
(PROGN (PUT '%MAKE-INSTRUCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION %MAKE-INSTRUCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET '%MAKE-INSTRUCTION 'SYSTEM::SOURCE NIL))) (FSET '%MAKE-INSTRUCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 42) 12975 '(OPCODE ARGS) NIL))
(PROGN (PUT 'INSTRUCTION-P 'SYSTEM::SOURCE (CONS '((:FUNCTION INSTRUCTION-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-P 'SYSTEM::SOURCE NIL))) (FSET 'INSTRUCTION-P (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 43) 12975 '(SYSTEM::OBJECT) NIL))
(PROCLAIM '(FTYPE (FUNCTION * (INTEGER 0 255)) INSTRUCTION-OPCODE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 44))
(PUT 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER INSTRUCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM INSTRUCTION-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 45))
(PUT 'INSTRUCTION-OPCODE 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 'INSTRUCTION))
(PUT 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER INSTRUCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF INSTRUCTION-OPCODE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-OPCODE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 47))
(PROCLAIM '(FTYPE (FUNCTION * T) INSTRUCTION-ARGS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 49))
(PUT 'INSTRUCTION-ARGS 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-ARGS 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-ARGS 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM INSTRUCTION-ARGS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-ARGS 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 50))
(PUT 'INSTRUCTION-ARGS 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 'INSTRUCTION))
(PUT 'INSTRUCTION-ARGS 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-ARGS 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-ARGS 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF INSTRUCTION-ARGS)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-ARGS 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 52))
(PROCLAIM '(FTYPE (FUNCTION * T) INSTRUCTION-STACK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 54))
(PUT 'INSTRUCTION-STACK 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-STACK 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-STACK 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM INSTRUCTION-STACK) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-STACK 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 55))
(PUT 'INSTRUCTION-STACK 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 'INSTRUCTION))
(PUT 'INSTRUCTION-STACK 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-STACK 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-STACK 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF INSTRUCTION-STACK)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-STACK 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 57))
(PROCLAIM '(FTYPE (FUNCTION * T) INSTRUCTION-DEPTH))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 59))
(PUT 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM INSTRUCTION-DEPTH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 60))
(PUT 'INSTRUCTION-DEPTH 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 3 'INSTRUCTION))
(PUT 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF INSTRUCTION-DEPTH)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-DEPTH 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 62))
(PROCLAIM '(FTYPE (FUNCTION * T) INSTRUCTION-WIDE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 64))
(PUT 'INSTRUCTION-WIDE 'SYSTEM::SOURCE (CONS '((:STRUCTURE-READER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-WIDE 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-WIDE 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM INSTRUCTION-WIDE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-WIDE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 65))
(PUT 'INSTRUCTION-WIDE 'SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 4 'INSTRUCTION))
(PUT 'INSTRUCTION-WIDE 'SYSTEM::SOURCE (CONS '((:STRUCTURE-WRITER INSTRUCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-WIDE 'SYSTEM::SOURCE NIL)))
(PUT 'INSTRUCTION-WIDE 'SYSTEM::SOURCE (CONS '((:SOURCE-TRANSFORM (SETF INSTRUCTION-WIDE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
12975) (GET 'INSTRUCTION-WIDE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 67))
(PROCLAIM '(FTYPE (FUNCTION (T) T) COPY-INSTRUCTION))
(SYSTEM::%SET-FDEFINITION 'COPY-INSTRUCTION (FUNCTION COPY-STRUCTURE))
(PROGN (PUT 'MAKE-INSTRUCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-INSTRUCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
13134) (GET 'MAKE-INSTRUCTION 'SYSTEM::SOURCE NIL))) (FSET 'MAKE-INSTRUCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 69) 13134 '(OPCODE ARGS) NIL))
(PROGN (PUT 'PRINT-INSTRUCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION PRINT-INSTRUCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
13385) (GET 'PRINT-INSTRUCTION 'SYSTEM::SOURCE NIL))) (FSET 'PRINT-INSTRUCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 70) 13385 '(INSTRUCTION) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) T) INSTRUCTION-LABEL))
(PROGN (PUT 'INSTRUCTION-LABEL 'SYSTEM::SOURCE (CONS '((:FUNCTION INSTRUCTION-LABEL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
13713) (GET 'INSTRUCTION-LABEL 'SYSTEM::SOURCE NIL))) (FSET 'INSTRUCTION-LABEL (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 71) 13713 '(INSTRUCTION) NIL))
(SYSTEM::%DEFKNOWN 'INST '* 'T)
(PROGN (PUT 'INST 'SYSTEM::SOURCE (CONS '((:FUNCTION INST) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
13906) (GET 'INST 'SYSTEM::SOURCE NIL))) (FSET 'INST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
72) 13906 '(INSTR &OPTIONAL ARGS) NIL))
(PROGN (PUT '*CODE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
14170) (GET '*CODE* 'SYSTEM::SOURCE NIL))) (DEFVAR *CODE* NIL))
(SYSTEM::%DEFKNOWN '%%EMIT '* 'T)
(PROGN (PUT '%%EMIT 'SYSTEM::SOURCE (CONS '((:FUNCTION %%EMIT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
14451) (GET '%%EMIT 'SYSTEM::SOURCE NIL))) (FSET '%%EMIT (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 73) 14451 '(INSTR &REST ARGS) NIL))
(SYSTEM::%DEFKNOWN '%EMIT '* 'T)
(PROGN (PUT '%EMIT 'SYSTEM::SOURCE (CONS '((:FUNCTION %EMIT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
14636) (GET '%EMIT 'SYSTEM::SOURCE NIL))) (FSET '%EMIT (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 74) 14636 '(INSTR &REST ARGS) NIL))
(PROGN (PUT 'EMIT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
14786) (GET 'EMIT 'SYSTEM::SOURCE NIL))) (FSET 'EMIT (MAKE-MACRO 'EMIT (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 75)) 14786 '(INSTR &REST ARGS) NIL))
(SYSTEM::%DEFKNOWN 'LABEL '(SYMBOL) 'T)
(PROGN (PUT 'LABEL 'SYSTEM::SOURCE (CONS '((:FUNCTION LABEL) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
15103) (GET 'LABEL 'SYSTEM::SOURCE NIL))) (FSET 'LABEL (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 76) 15103 '(SYMBOL) NIL))
(SYSTEM::%DEFKNOWN 'ALOAD '(FIXNUM) 'T)
(PROGN (PUT 'ALOAD 'SYSTEM::SOURCE (CONS '((:FUNCTION ALOAD) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
15275) (GET 'ALOAD 'SYSTEM::SOURCE NIL))) (FSET 'ALOAD (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 77) 15275 '(INDEX) NIL))
(SYSTEM::%DEFKNOWN 'ASTORE '(FIXNUM) 'T)
(PROGN (PUT 'ASTORE 'SYSTEM::SOURCE (CONS '((:FUNCTION ASTORE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
15466) (GET 'ASTORE 'SYSTEM::SOURCE NIL))) (FSET 'ASTORE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 78) 15466 '(INDEX) NIL))
(SYSTEM::%DEFKNOWN 'ILOAD '(FIXNUM) 'T)
(PROGN (PUT 'ILOAD 'SYSTEM::SOURCE (CONS '((:FUNCTION ILOAD) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
15662) (GET 'ILOAD 'SYSTEM::SOURCE NIL))) (FSET 'ILOAD (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 79) 15662 '(INDEX) NIL))
(SYSTEM::%DEFKNOWN 'ISTORE '(FIXNUM) 'T)
(PROGN (PUT 'ISTORE 'SYSTEM::SOURCE (CONS '((:FUNCTION ISTORE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
15853) (GET 'ISTORE 'SYSTEM::SOURCE NIL))) (FSET 'ISTORE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 80) 15853 '(INDEX) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) T) BRANCH-P))
(PROCLAIM '(INLINE BRANCH-P))
(SETF (INLINE-EXPANSION 'BRANCH-P) '(LAMBDA (OPCODE) (BLOCK BRANCH-P (OR (<= 153 
OPCODE 167) (<= 198 OPCODE 200)))))
(PROGN (PUT 'BRANCH-P 'SYSTEM::SOURCE (CONS '((:FUNCTION BRANCH-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
16092) (GET 'BRANCH-P 'SYSTEM::SOURCE NIL))) (FSET 'BRANCH-P (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 81) 16092 '(OPCODE) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) T) UNCONDITIONAL-CONTROL-TRANSFER-P))
(PROCLAIM '(INLINE UNCONDITIONAL-CONTROL-TRANSFER-P))
(SETF (INLINE-EXPANSION 'UNCONDITIONAL-CONTROL-TRANSFER-P) '(LAMBDA (OPCODE) (BLOCK 
UNCONDITIONAL-CONTROL-TRANSFER-P (OR (= 167 OPCODE) (= 200 OPCODE) (<= 172 OPCODE 
177) (= 191 OPCODE)))))
(PROGN (PUT 'UNCONDITIONAL-CONTROL-TRANSFER-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
UNCONDITIONAL-CONTROL-TRANSFER-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
16398) (GET 'UNCONDITIONAL-CONTROL-TRANSFER-P 'SYSTEM::SOURCE NIL))) (FSET 'UNCONDITIONAL-CONTROL-TRANSFER-P 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 82) 16398 '(OPCODE) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) BOOLEAN) LABEL-P))
(PROCLAIM '(INLINE LABEL-P))
(SETF (INLINE-EXPANSION 'LABEL-P) '(LAMBDA (INSTRUCTION) (BLOCK LABEL-P (AND INSTRUCTION 
(= (THE FIXNUM (INSTRUCTION-OPCODE (THE INSTRUCTION INSTRUCTION))) 202)))))
(PROGN (PUT 'LABEL-P 'SYSTEM::SOURCE (CONS '((:FUNCTION LABEL-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
16660) (GET 'LABEL-P 'SYSTEM::SOURCE NIL))) (FSET 'LABEL-P (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 83) 16660 '(INSTRUCTION) NIL))
(PROGN (PUT 'CONSTANT-POOL-INDEX 'SYSTEM::SOURCE (CONS '((:FUNCTION CONSTANT-POOL-INDEX) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
16789) (GET 'CONSTANT-POOL-INDEX 'SYSTEM::SOURCE NIL))) (FSET 'CONSTANT-POOL-INDEX 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 84) 16789 '(INSTRUCTION) "If an instruction references an item in the constant pool, return
   the index, otherwise return nil."))
(PROGN (PUT 'FORMAT-INSTRUCTION-ARGS 'SYSTEM::SOURCE (CONS '((:FUNCTION FORMAT-INSTRUCTION-ARGS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
17504) (GET 'FORMAT-INSTRUCTION-ARGS 'SYSTEM::SOURCE NIL))) (FSET 'FORMAT-INSTRUCTION-ARGS 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 85) 17504 '(INSTRUCTION POOL) NIL))
(PROGN (PUT 'PRINT-CODE 'SYSTEM::SOURCE (CONS '((:FUNCTION PRINT-CODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
18128) (GET 'PRINT-CODE 'SYSTEM::SOURCE NIL))) (FSET 'PRINT-CODE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 87) 18128 '(CODE POOL) NIL))
(PROGN (PUT 'PRINT-CODE2 'SYSTEM::SOURCE (CONS '((:FUNCTION PRINT-CODE2) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
18589) (GET 'PRINT-CODE2 'SYSTEM::SOURCE NIL))) (FSET 'PRINT-CODE2 (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 89) 18589 '(CODE POOL) NIL))
(PROGN (PUT 'EXPAND-VIRTUAL-INSTRUCTIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION EXPAND-VIRTUAL-INSTRUCTIONS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
19033) (GET 'EXPAND-VIRTUAL-INSTRUCTIONS 'SYSTEM::SOURCE NIL))) (FSET 'EXPAND-VIRTUAL-INSTRUCTIONS 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 92) 19033 '(CODE) NIL))
(PROGN (PUT 'UNSUPPORTED-OPCODE 'SYSTEM::SOURCE (CONS '((:FUNCTION UNSUPPORTED-OPCODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
19842) (GET 'UNSUPPORTED-OPCODE 'SYSTEM::SOURCE NIL))) (FSET 'UNSUPPORTED-OPCODE 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 93) 19842 '(INSTRUCTION) NIL))
(PROCLAIM '(TYPE HASH-TABLE +RESOLVERS+))
(PROGN (PUT '+RESOLVERS+ 'SYSTEM::SOURCE (CONS '(+RESOLVERS+ "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
20010) (GET '+RESOLVERS+ 'SYSTEM::SOURCE NIL))) (DEFCONSTANT +RESOLVERS+ (IF (BOUNDP 
'+RESOLVERS+) (SYMBOL-VALUE '+RESOLVERS+) (MAKE-HASH-TABLE))))
(PROGN (PUT 'INITIALIZE-RESOLVERS 'SYSTEM::SOURCE (CONS '((:FUNCTION INITIALIZE-RESOLVERS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
20051) (GET 'INITIALIZE-RESOLVERS 'SYSTEM::SOURCE NIL))) (FSET 'INITIALIZE-RESOLVERS 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 94) 20051 'NIL NIL))
(INITIALIZE-RESOLVERS)
(PROGN (PUT 'DEFINE-RESOLVER 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
23736) (GET 'DEFINE-RESOLVER 'SYSTEM::SOURCE NIL))) (FSET 'DEFINE-RESOLVER (MAKE-MACRO 
'DEFINE-RESOLVER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 95)) 23736 '(OPCODES ARGS 
&BODY BODY) NIL))
(PROGN (PUT 'LOAD/STORE-RESOLVER 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD/STORE-RESOLVER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
24174) (GET 'LOAD/STORE-RESOLVER 'SYSTEM::SOURCE NIL))) (FSET 'LOAD/STORE-RESOLVER 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 96) 24174 '(INSTRUCTION INST-INDEX INST-INDEX2 
ERROR-TEXT) NIL))
(PROGN (PUT '#36? 'SYSTEM::SOURCE (CONS '((:FUNCTION #36?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
24541) (GET '#36? 'SYSTEM::SOURCE NIL))) (FSET '#36? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
97) 24541 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 98))
(PROGN (PUT '#37? 'SYSTEM::SOURCE (CONS '((:FUNCTION #37?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
24653) (GET '#37? 'SYSTEM::SOURCE NIL))) (FSET '#37? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
99) 24653 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 100))
(PROGN (PUT '#38? 'SYSTEM::SOURCE (CONS '((:FUNCTION #38?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
24767) (GET '#38? 'SYSTEM::SOURCE NIL))) (FSET '#38? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
101) 24767 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 102))
(PROGN (PUT '#39? 'SYSTEM::SOURCE (CONS '((:FUNCTION #39?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
24879) (GET '#39? 'SYSTEM::SOURCE NIL))) (FSET '#39? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
103) 24879 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 104))
(PROGN (PUT '#40? 'SYSTEM::SOURCE (CONS '((:FUNCTION #40?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
24993) (GET '#40? 'SYSTEM::SOURCE NIL))) (FSET '#40? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
105) 24993 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 106))
(PROGN (PUT '#41? 'SYSTEM::SOURCE (CONS '((:FUNCTION #41?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
25105) (GET '#41? 'SYSTEM::SOURCE NIL))) (FSET '#41? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
107) 25105 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 108))
(PROGN (PUT '#42? 'SYSTEM::SOURCE (CONS '((:FUNCTION #42?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
25219) (GET '#42? 'SYSTEM::SOURCE NIL))) (FSET '#42? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
109) 25219 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 110))
(PROGN (PUT '#43? 'SYSTEM::SOURCE (CONS '((:FUNCTION #43?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
25558) (GET '#43? 'SYSTEM::SOURCE NIL))) (FSET '#43? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
111) 25558 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 112))
(PROGN (PUT '#44? 'SYSTEM::SOURCE (CONS '((:FUNCTION #44?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
25822) (GET '#44? 'SYSTEM::SOURCE NIL))) (FSET '#44? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
113) 25822 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 114))
(PROGN (PUT '#45? 'SYSTEM::SOURCE (CONS '((:FUNCTION #45?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
26027) (GET '#45? 'SYSTEM::SOURCE NIL))) (FSET '#45? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
115) 26027 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 116))
(PROGN (PUT '#46? 'SYSTEM::SOURCE (CONS '((:FUNCTION #46?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
26234) (GET '#46? 'SYSTEM::SOURCE NIL))) (FSET '#46? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
117) 26234 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 118))
(PROGN (PUT '#47? 'SYSTEM::SOURCE (CONS '((:FUNCTION #47?) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
26509) (GET '#47? 'SYSTEM::SOURCE NIL))) (FSET '#47? (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
119) 26509 '(INSTRUCTION) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 120))
(SYSTEM::%DEFKNOWN 'RESOLVE-INSTRUCTION '(T) 'T)
(PROGN (PUT 'RESOLVE-INSTRUCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION RESOLVE-INSTRUCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
26761) (GET 'RESOLVE-INSTRUCTION 'SYSTEM::SOURCE NIL))) (FSET 'RESOLVE-INSTRUCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 121) 26761 '(INSTRUCTION) NIL))
(PROGN (PUT 'RESOLVE-INSTRUCTIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION RESOLVE-INSTRUCTIONS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
26986) (GET 'RESOLVE-INSTRUCTIONS 'SYSTEM::SOURCE NIL))) (FSET 'RESOLVE-INSTRUCTIONS 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 122) 26986 '(CODE) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T T T) T) ANALYZE-STACK-PATH))
(PROGN (PUT 'ANALYZE-STACK-PATH 'SYSTEM::SOURCE (CONS '((:FUNCTION ANALYZE-STACK-PATH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
27417) (GET 'ANALYZE-STACK-PATH 'SYSTEM::SOURCE NIL))) (FSET 'ANALYZE-STACK-PATH 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 123) 27417 '(CODE START-INDEX DEPTH) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) T) ANALYZE-STACK))
(PROGN (PUT 'ANALYZE-STACK 'SYSTEM::SOURCE (CONS '((:FUNCTION ANALYZE-STACK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
29536) (GET 'ANALYZE-STACK 'SYSTEM::SOURCE NIL))) (FSET 'ANALYZE-STACK (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 124) 29536 '(CODE EXCEPTION-ENTRY-POINTS) NIL))
(PROGN (PUT 'ANALYZE-LOCALS 'SYSTEM::SOURCE (CONS '((:FUNCTION ANALYZE-LOCALS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
30863) (GET 'ANALYZE-LOCALS 'SYSTEM::SOURCE NIL))) (FSET 'ANALYZE-LOCALS (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 125) 30863 '(CODE) NIL))
(PROGN (PUT 'DELETE-UNUSED-LABELS 'SYSTEM::SOURCE (CONS '((:FUNCTION DELETE-UNUSED-LABELS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
31452) (GET 'DELETE-UNUSED-LABELS 'SYSTEM::SOURCE NIL))) (FSET 'DELETE-UNUSED-LABELS 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 126) 31452 '(CODE HANDLER-LABELS) NIL))
(PROGN (PUT 'DELETE-UNREACHABLE-CODE 'SYSTEM::SOURCE (CONS '((:FUNCTION DELETE-UNREACHABLE-CODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
32503) (GET 'DELETE-UNREACHABLE-CODE 'SYSTEM::SOURCE NIL))) (FSET 'DELETE-UNREACHABLE-CODE 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 127) 32503 '(CODE) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T) LABEL-TARGET-INSTRUCTIONS) HASH-LABELS))
(PROGN (PUT 'LABEL-TARGET-INSTRUCTIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION LABEL-TARGET-INSTRUCTIONS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
33403) (GET 'LABEL-TARGET-INSTRUCTIONS 'SYSTEM::SOURCE NIL))) (FSET 'LABEL-TARGET-INSTRUCTIONS 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 128) 33403 '(CODE) NIL))
(PROGN (PUT 'OPTIMIZE-JUMPS 'SYSTEM::SOURCE (CONS '((:FUNCTION OPTIMIZE-JUMPS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
33977) (GET 'OPTIMIZE-JUMPS 'SYSTEM::SOURCE NIL))) (FSET 'OPTIMIZE-JUMPS (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 129) 33977 '(CODE) NIL))
(PROGN (PUT 'OPTIMIZE-INSTRUCTION-SEQUENCES 'SYSTEM::SOURCE (CONS '((:FUNCTION OPTIMIZE-INSTRUCTION-SEQUENCES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
35052) (GET 'OPTIMIZE-INSTRUCTION-SEQUENCES 'SYSTEM::SOURCE NIL))) (FSET 'OPTIMIZE-INSTRUCTION-SEQUENCES 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 130) 35052 '(CODE) NIL))
(PROGN (PUT '*ENABLE-OPTIMIZATION* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
37033) (GET '*ENABLE-OPTIMIZATION* 'SYSTEM::SOURCE NIL))) (DEFVAR *ENABLE-OPTIMIZATION* 
T))
(SYSTEM::%DEFKNOWN 'OPTIMIZE-CODE '(T T) 'T)
(PROGN (PUT 'OPTIMIZE-CODE 'SYSTEM::SOURCE (CONS '((:FUNCTION OPTIMIZE-CODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
37101) (GET 'OPTIMIZE-CODE 'SYSTEM::SOURCE NIL))) (FSET 'OPTIMIZE-CODE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 131) 37101 '(CODE HANDLER-LABELS POOL) NIL))
(PROGN (PUT 'CODE-BYTES 'SYSTEM::SOURCE (CONS '((:FUNCTION CODE-BYTES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
38346) (GET 'CODE-BYTES 'SYSTEM::SOURCE NIL))) (FSET 'CODE-BYTES (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 134) 38346 '(CODE) NIL))
(PROGN (PUT 'FINALIZE-CODE 'SYSTEM::SOURCE (CONS '((:FUNCTION FINALIZE-CODE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/jvm-instructions.lisp" 
40386) (GET 'FINALIZE-CODE 'SYSTEM::SOURCE NIL))) (FSET 'FINALIZE-CODE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 135) 40386 '(CODE HANDLER-LABELS OPTIMIZE POOL) NIL))
(PROVIDE '#48?)
