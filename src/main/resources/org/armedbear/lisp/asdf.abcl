"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 43)
(COMMON-LISP:SETQ SYSTEM:*SOURCE* #P"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp")
(COMMON-LISP:SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:G309423 #:G309424 #:WHOLE-310089 #:ENVIRONMENT-310090 #:WHOLE-310113 #:ENVIRONMENT-310114 #:UIOP #:FEATUREP #:WHOLE-312922 #:ENVIRONMENT-312923 #:DEFINE-PACKAGE-STYLE-WARNING #:NO-SUCH-PACKAGE-ERROR #:PACKAGE-DESIGNATOR #:DEFINE-PACKAGE-STYLE-WARNING #:NO-SUCH-PACKAGE-ERROR #:PACKAGE-DESIGNATOR #:WHOLE-370036 #:ENVIRONMENT-370037 #:COMPATFMT #:FROB-SUBSTRINGS #:COMPATFMT #:FROB-SUBSTRINGS #:COMPATFMT #:UIOP-DEBUG #:LOAD-UIOP-DEBUG-UTILITY #:*UIOP-DEBUG-UTILITY* #:WITH-UPGRADABILITY #:NEST #:IF-LET #:PARSE-BODY #:WHILE-COLLECTING #:APPENDF #:LENGTH=N-P #:ENSURE-LIST #:REMOVE-PLIST-KEYS #:REMOVE-PLIST-KEY #:EMPTYP #:+NON-BASE-CHARS-EXIST-P+ #:+MAX-CHARACTER-TYPE-INDEX+ #:CHARACTER-TYPE-INDEX #:+CHARACTER-TYPES+ #:BASE-STRING-P #:STRINGS-COMMON-ELEMENT-TYPE #:REDUCE/STRCAT #:STRCAT #:FIRST-CHAR #:LAST-CHAR #:SPLIT-STRING #:STRIPLN #:+CR+ #:+LF+ #:+CRLF+ #:STRING-PREFIX-P #:STRING-ENCLOSED-P #:STRING-SUFFIX-P #:STANDARD-CASE-SYMBOL-NAME #:FIND-STANDARD-CASE-SYMBOL #:COERCE-CLASS #:TIMESTAMP< #:TIMESTAMPS< #:TIMESTAMP*< #:TIMESTAMP<= #:EARLIER-TIMESTAMP #:TIMESTAMPS-EARLIEST #:EARLIEST-TIMESTAMP #:LATER-TIMESTAMP #:TIMESTAMPS-LATEST #:LATEST-TIMESTAMP #:LATEST-TIMESTAMP-F #:LIST-TO-HASH-SET #:ENSURE-GETHASH #:ENSURE-FUNCTION #:ACCESS-AT #:ACCESS-AT-COUNT #:CALL-FUNCTION #:CALL-FUNCTIONS #:REGISTER-HOOK-FUNCTION #:LEXICOGRAPHIC< #:LEXICOGRAPHIC<= #:SIMPLE-STYLE-WARNING #:STYLE-WARN #:MATCH-CONDITION-P #:MATCH-ANY-CONDITION-P #:CALL-WITH-MUFFLED-CONDITIONS #:WITH-MUFFLED-CONDITIONS #:NOT-IMPLEMENTED-ERROR #:PARAMETER-ERROR #:SYMBOL-TEST-TO-FEATURE-EXPRESSION #:BOOLEAN-TO-FEATURE-EXPRESSION #:WHOLE-404338 #:ENVIRONMENT-404339 #:WHOLE-404402 #:ENVIRONMENT-404403 #:G404454 #:WHOLE-404547 #:ENVIRONMENT-404548 #:WHOLE-404582 #:ENVIRONMENT-404583 #:WHOLE-404684 #:ENVIRONMENT-404685 #:WHOLE-404811 #:ENVIRONMENT-404812 #:G404810 #:G404809 #:WHOLE-405776 #:ENVIRONMENT-405777 #:G405775 #:G405774 #:G406340 #:G406344 #:WHOLE-406505 #:ENVIRONMENT-406506 #:*UIOP-VERSION* #:PARSE-VERSION #:UNPARSE-VERSION #:VERSION< #:VERSION<= #:VERSION= #:NEXT-VERSION #:DEPRECATED-FUNCTION-CONDITION #:DEPRECATED-FUNCTION-NAME #:DEPRECATED-FUNCTION-STYLE-WARNING #:DEPRECATED-FUNCTION-WARNING #:DEPRECATED-FUNCTION-ERROR #:DEPRECATED-FUNCTION-SHOULD-BE-DELETED #:VERSION-DEPRECATION #:WITH-DEPRECATION #:WHOLE-441777 #:ENVIRONMENT-441778 #:FEATUREP #:OS-UNIX-P #:OS-MACOSX-P #:OS-WINDOWS-P #:OS-GENERA-P #:DETECT-OS #:OS-COND #:GETENV #:GETENVP #:IMPLEMENTATION-IDENTIFIER #:IMPLEMENTATION-TYPE #:*IMPLEMENTATION-TYPE* #:OPERATING-SYSTEM #:ARCHITECTURE #:LISP-VERSION-STRING #:HOSTNAME #:GETCWD #:CHDIR #:READ-NULL-TERMINATED-STRING #:READ-LITTLE-ENDIAN #:PARSE-FILE-LOCATION-INFO #:PARSE-WINDOWS-SHORTCUT #:WHOLE-476641 #:ENVIRONMENT-476642 #:ACCESS-FORM-476684 #:ENVIRONMENT-476685 #:ARGS-476683 #:G477238 #:NORMALIZE-PATHNAME-DIRECTORY-COMPONENT #:DENORMALIZE-PATHNAME-DIRECTORY-COMPONENT #:MERGE-PATHNAME-DIRECTORY-COMPONENTS #:*UNSPECIFIC-PATHNAME-TYPE* #:MAKE-PATHNAME* #:MAKE-PATHNAME-COMPONENT-LOGICAL #:MAKE-PATHNAME-LOGICAL #:MERGE-PATHNAMES* #:NIL-PATHNAME #:*NIL-PATHNAME* #:WITH-PATHNAME-DEFAULTS #:PATHNAME-EQUAL #:LOGICAL-PATHNAME-P #:PHYSICAL-PATHNAME-P #:PHYSICALIZE-PATHNAME #:ABSOLUTE-PATHNAME-P #:RELATIVE-PATHNAME-P #:HIDDEN-PATHNAME-P #:FILE-PATHNAME-P #:PATHNAME-DIRECTORY-PATHNAME #:PATHNAME-PARENT-DIRECTORY-PATHNAME #:DIRECTORY-PATHNAME-P #:ENSURE-DIRECTORY-PATHNAME #:SPLIT-NAME-TYPE #:PARSE-UNIX-NAMESTRING #:UNIX-NAMESTRING #:SPLIT-UNIX-NAMESTRING-DIRECTORY-COMPONENTS #:SUBPATHNAME #:SUBPATHNAME* #:ENSURE-ABSOLUTE-PATHNAME #:PATHNAME-ROOT #:PATHNAME-HOST-PATHNAME #:SUBPATHP #:ENOUGH-PATHNAME #:WITH-ENOUGH-PATHNAME #:CALL-WITH-ENOUGH-PATHNAME #:ENSURE-PATHNAME #:*WILD* #:*WILD-FILE* #:*WILD-FILE-FOR-DIRECTORY* #:*WILD-DIRECTORY* #:*WILD-INFERIORS* #:*WILD-PATH* #:WILDEN #:RELATIVIZE-DIRECTORY-COMPONENT #:RELATIVIZE-PATHNAME-DIRECTORY #:DIRECTORY-SEPARATOR-FOR-HOST #:DIRECTORIZE-PATHNAME-HOST-DEVICE #:TRANSLATE-PATHNAME* #:*OUTPUT-TRANSLATION-FUNCTION* #:WHOLE-513934 #:ENVIRONMENT-513935 #:G514263 #:WHOLE-515068 #:ENVIRONMENT-515069 #:NATIVE-NAMESTRING #:PARSE-NATIVE-NAMESTRING #:TRUENAME* #:SAFE-FILE-WRITE-DATE #:PROBE-FILE* #:DIRECTORY-EXISTS-P #:FILE-EXISTS-P #:DIRECTORY* #:FILTER-LOGICAL-DIRECTORY-RESULTS #:DIRECTORY-FILES #:SUBDIRECTORIES #:COLLECT-SUB*DIRECTORIES #:TRUENAMIZE #:RESOLVE-SYMLINKS #:*RESOLVE-SYMLINKS* #:RESOLVE-SYMLINKS* #:GET-PATHNAME-DEFAULTS #:CALL-WITH-CURRENT-DIRECTORY #:WITH-CURRENT-DIRECTORY #:INTER-DIRECTORY-SEPARATOR #:SPLIT-NATIVE-PATHNAMES-STRING #:GETENV-PATHNAME #:GETENV-PATHNAMES #:GETENV-ABSOLUTE-DIRECTORY #:GETENV-ABSOLUTE-DIRECTORIES #:LISP-IMPLEMENTATION-DIRECTORY #:LISP-IMPLEMENTATION-PATHNAME-P #:ENSURE-ALL-DIRECTORIES-EXIST #:RENAME-FILE-OVERWRITING-TARGET #:DELETE-FILE-IF-EXISTS #:DELETE-EMPTY-DIRECTORY #:DELETE-DIRECTORY-TREE #:G552462 #:G552519 #:G552577 #:G552715 #:G552795 #:G553014 #:G553018 #:WHOLE-553481 #:ENVIRONMENT-553482 #:G553810 #:*DEFAULT-STREAM-ELEMENT-TYPE* #:*STDIN* #:SETUP-STDIN #:*STDOUT* #:SETUP-STDOUT #:*STDERR* #:SETUP-STDERR #:DETECT-ENCODING #:*ENCODING-DETECTION-HOOK* #:ALWAYS-DEFAULT-ENCODING #:ENCODING-EXTERNAL-FORMAT #:*ENCODING-EXTERNAL-FORMAT-HOOK* #:DEFAULT-ENCODING-EXTERNAL-FORMAT #:*DEFAULT-ENCODING* #:*UTF-8-EXTERNAL-FORMAT* #:WITH-SAFE-IO-SYNTAX #:CALL-WITH-SAFE-IO-SYNTAX #:SAFE-READ-FROM-STRING #:WITH-OUTPUT #:OUTPUT-STRING #:WITH-INPUT #:INPUT-STRING #:WITH-INPUT-FILE #:CALL-WITH-INPUT-FILE #:WITH-OUTPUT-FILE #:CALL-WITH-OUTPUT-FILE #:NULL-DEVICE-PATHNAME #:CALL-WITH-NULL-INPUT #:WITH-NULL-INPUT #:CALL-WITH-NULL-OUTPUT #:WITH-NULL-OUTPUT #:FINISH-OUTPUTS #:FORMAT! #:SAFE-FORMAT! #:COPY-STREAM-TO-STREAM #:CONCATENATE-FILES #:COPY-FILE #:SLURP-STREAM-STRING #:SLURP-STREAM-LINES #:SLURP-STREAM-LINE #:SLURP-STREAM-FORMS #:SLURP-STREAM-FORM #:READ-FILE-STRING #:READ-FILE-LINE #:READ-FILE-LINES #:SAFE-READ-FILE-LINE #:READ-FILE-FORMS #:READ-FILE-FORM #:SAFE-READ-FILE-FORM #:EVAL-INPUT #:EVAL-THUNK #:STANDARD-EVAL-THUNK #:PRINTLN #:WRITELN #:FILE-STREAM-P #:FILE-OR-SYNONYM-STREAM-P #:*TEMPORARY-DIRECTORY* #:TEMPORARY-DIRECTORY #:DEFAULT-TEMPORARY-DIRECTORY #:SETUP-TEMPORARY-DIRECTORY #:CALL-WITH-TEMPORARY-FILE #:WITH-TEMPORARY-FILE #:ADD-PATHNAME-SUFFIX #:TMPIZE-PATHNAME #:CALL-WITH-STAGING-PATHNAME #:WITH-STAGING-PATHNAME #:WHOLE-593621 #:ENVIRONMENT-593622 #:WHOLE-593813 #:ENVIRONMENT-593814 #:WHOLE-593940 #:ENVIRONMENT-593941 #:WHOLE-594164 #:ENVIRONMENT-594165 #:WHOLE-594269 #:ENVIRONMENT-594270 #:WHOLE-594407 #:ENVIRONMENT-594408 #:WHOLE-594502 #:ENVIRONMENT-594503 #:G594571 #:G594664 #:EOF #:EOF #:G595676 #:G595680 #:WHOLE-595906 #:ENVIRONMENT-595907 #:WHOLE-596206 #:ENVIRONMENT-596207 #:*IMAGE-DUMPED-P* #:RAW-COMMAND-LINE-ARGUMENTS #:*COMMAND-LINE-ARGUMENTS* #:COMMAND-LINE-ARGUMENTS #:RAW-COMMAND-LINE-ARGUMENTS #:SETUP-COMMAND-LINE-ARGUMENTS #:ARGV0 #:*LISP-INTERACTION* #:FATAL-CONDITION #:FATAL-CONDITION-P #:HANDLE-FATAL-CONDITION #:CALL-WITH-FATAL-CONDITION-HANDLER #:WITH-FATAL-CONDITION-HANDLER #:*IMAGE-RESTORE-HOOK* #:*IMAGE-PRELUDE* #:*IMAGE-ENTRY-POINT* #:*IMAGE-POSTLUDE* #:*IMAGE-DUMP-HOOK* #:QUIT #:DIE #:RAW-PRINT-BACKTRACE #:PRINT-BACKTRACE #:PRINT-CONDITION-BACKTRACE #:SHELL-BOOLEAN-EXIT #:REGISTER-IMAGE-RESTORE-HOOK #:REGISTER-IMAGE-DUMP-HOOK #:CALL-IMAGE-RESTORE-HOOK #:CALL-IMAGE-DUMP-HOOK #:RESTORE-IMAGE #:DUMP-IMAGE #:CREATE-IMAGE #:G635358 #:G635479 #:WHOLE-635644 #:ENVIRONMENT-635645 #:*COMPILE-FILE-WARNINGS-BEHAVIOUR* #:*COMPILE-FILE-FAILURE-BEHAVIOUR* #:*OUTPUT-TRANSLATION-FUNCTION* #:*OPTIMIZATION-SETTINGS* #:*PREVIOUS-OPTIMIZATION-SETTINGS* #:*BASE-BUILD-DIRECTORY* #:COMPILE-CONDITION #:COMPILE-FILE-ERROR #:COMPILE-WARNED-ERROR #:COMPILE-FAILED-ERROR #:COMPILE-WARNED-WARNING #:COMPILE-FAILED-WARNING #:CHECK-LISP-COMPILE-RESULTS #:CHECK-LISP-COMPILE-WARNINGS #:*UNINTERESTING-CONDITIONS* #:*USUAL-UNINTERESTING-CONDITIONS* #:*UNINTERESTING-COMPILER-CONDITIONS* #:*UNINTERESTING-LOADER-CONDITIONS* #:GET-OPTIMIZATION-SETTINGS #:PROCLAIM-OPTIMIZATION-SETTINGS #:WITH-OPTIMIZATION-SETTINGS #:CALL-WITH-MUFFLED-COMPILER-CONDITIONS #:WITH-MUFFLED-COMPILER-CONDITIONS #:CALL-WITH-MUFFLED-LOADER-CONDITIONS #:WITH-MUFFLED-LOADER-CONDITIONS #:REIFY-SIMPLE-SEXP #:UNREIFY-SIMPLE-SEXP #:REIFY-DEFERRED-WARNINGS #:UNREIFY-DEFERRED-WARNINGS #:RESET-DEFERRED-WARNINGS #:SAVE-DEFERRED-WARNINGS #:CHECK-DEFERRED-WARNINGS #:WITH-SAVED-DEFERRED-WARNINGS #:WARNINGS-FILE-P #:WARNINGS-FILE-TYPE #:*WARNINGS-FILE-TYPE* #:ENABLE-DEFERRED-WARNINGS-CHECK #:DISABLE-DEFERRED-WARNINGS-CHECK #:CURRENT-LISP-FILE-PATHNAME #:LOAD-PATHNAME #:LISPIZE-PATHNAME #:COMPILE-FILE-TYPE #:CALL-AROUND-HOOK #:COMPILE-FILE* #:COMPILE-FILE-PATHNAME* #:*COMPILE-CHECK* #:LOAD* #:LOAD-FROM-STRING #:COMBINE-FASLS #:DEFAULTS #:FAILURE-P #:WARNINGS-P #:S #:Y #:BODY #:WHOLE-678090 #:ENVIRONMENT-678091 #:FINALIZERS-OFF-WARNING #:WHOLE-678178 #:ENVIRONMENT-678179 #:WHOLE-678235 #:ENVIRONMENT-678236 #:G679113 #:WHOLE-679280 #:ENVIRONMENT-679281 #:EASY-SH-CHARACTER-P #:ESCAPE-SH-TOKEN #:ESCAPE-SH-COMMAND #:ESCAPE-WINDOWS-TOKEN #:ESCAPE-WINDOWS-COMMAND #:ESCAPE-SHELL-TOKEN #:ESCAPE-SHELL-COMMAND #:ESCAPE-TOKEN #:ESCAPE-COMMAND #:LAUNCH-PROGRAM #:CLOSE-STREAMS #:PROCESS-ALIVE-P #:TERMINATE-PROCESS #:WAIT-PROCESS #:PROCESS-INFO #:PROCESS-INFO-ERROR-OUTPUT #:PROCESS-INFO-INPUT #:PROCESS-INFO-OUTPUT #:PROCESS-INFO-PID #:%HANDLE-IF-DOES-NOT-EXIST #:%HANDLE-IF-EXISTS #:%INTERACTIVEP #:INPUT-STREAM #:OUTPUT-STREAM #:ERROR-OUTPUT-STREAM #:RUN-PROGRAM #:SLURP-INPUT-STREAM #:VOMIT-OUTPUT-STREAM #:SUBPROCESS-ERROR #:SUBPROCESS-ERROR-CODE #:SUBPROCESS-ERROR-COMMAND #:SUBPROCESS-ERROR-PROCESS #:WHOLE-763560 #:ENVIRONMENT-763561 #:WHOLE-763588 #:ENVIRONMENT-763589 #:WHOLE-763666 #:ENVIRONMENT-763667 #:WHOLE-763744 #:ENVIRONMENT-763745 #:USER-CONFIGURATION-DIRECTORIES #:SYSTEM-CONFIGURATION-DIRECTORIES #:IN-FIRST-DIRECTORY #:IN-USER-CONFIGURATION-DIRECTORY #:IN-SYSTEM-CONFIGURATION-DIRECTORY #:GET-FOLDER-PATH #:XDG-DATA-HOME #:XDG-CONFIG-HOME #:XDG-DATA-DIRS #:XDG-CONFIG-DIRS #:XDG-CACHE-HOME #:XDG-RUNTIME-DIR #:SYSTEM-CONFIG-PATHNAMES #:FILTER-PATHNAME-SET #:XDG-DATA-PATHNAMES #:XDG-CONFIG-PATHNAMES #:FIND-PREFERRED-FILE #:XDG-DATA-PATHNAME #:XDG-CONFIG-PATHNAME #:VALIDATE-CONFIGURATION-FORM #:VALIDATE-CONFIGURATION-FILE #:VALIDATE-CONFIGURATION-DIRECTORY #:CONFIGURATION-INHERITANCE-DIRECTIVE-P #:REPORT-INVALID-FORM #:INVALID-CONFIGURATION #:*IGNORED-CONFIGURATION-FORM* #:*USER-CACHE* #:*CLEAR-CONFIGURATION-HOOK* #:CLEAR-CONFIGURATION #:REGISTER-CLEAR-CONFIGURATION-HOOK #:RESOLVE-LOCATION #:LOCATION-DESIGNATOR-P #:LOCATION-FUNCTION-P #:*HERE-DIRECTORY* #:RESOLVE-RELATIVE-LOCATION #:RESOLVE-ABSOLUTE-LOCATION #:UPGRADE-CONFIGURATION #:UIOP-DIRECTORY #:G807740 #:G808860 #:G808866 #:COERCE-PATHNAME #:USER-CONFIGURATION-DIRECTORIES #:SYSTEM-CONFIGURATION-DIRECTORIES #:IN-FIRST-DIRECTORY #:IN-USER-CONFIGURATION-DIRECTORY #:IN-SYSTEM-CONFIGURATION-DIRECTORY #:VERSION-COMPATIBLE-P #:G851312 #:G851313 #:G851389 #:G851390 #:G851461 #:G851462 #:G851533 #:G851534 #:G851638 #:G851639 #:G851714 #:G851715 #:G851792 #:G851793 #:INTERN* #:FIND-SYMBOL* #:ASDF-VERSION #:*PREVIOUS-ASDF-VERSIONS* #:*ASDF-VERSION* #:ASDF-MESSAGE #:*VERBOSE-OUT* #:UPGRADING-P #:WHEN-UPGRADING #:UPGRADE-ASDF #:DEFPARAMETER* #:*POST-UPGRADE-CLEANUP-HOOK* #:CLEANUP-UPGRADED-ASDF #:WITH-ASDF-DEPRECATION #:INTERN* #:WHOLE-950897 #:ENVIRONMENT-950898 #:WHOLE-950999 #:ENVIRONMENT-951000 #:NORMALIZE-VERSION #:COMPONENT-DEPENDS-ON #:INPUT-FILES #:FIND-COMPONENT #:COMPILE-CONCATENATED-SOURCE-OP #:OPERATION #:COMPILE-BUNDLE-OP #:OPERATION #:CONCATENATE-SOURCE-OP #:OPERATION #:DLL-OP #:OPERATION #:LIB-OP #:OPERATION #:MONOLITHIC-COMPILE-BUNDLE-OP #:OPERATION #:MONOLITHIC-CONCATENATE-SOURCE-OP #:OPERATION #:WHOLE-951196 #:ENVIRONMENT-951197 #:GET-FILE-STAMP #:COMPUTE-FILE-STAMP #:REGISTER-FILE-STAMP #:ASDF-CACHE #:SET-ASDF-CACHE-ENTRY #:UNSET-ASDF-CACHE-ENTRY #:CONSULT-ASDF-CACHE #:DO-ASDF-CACHE #:NORMALIZE-NAMESTRING #:CALL-WITH-ASDF-SESSION #:WITH-ASDF-SESSION #:*ASDF-SESSION* #:*ASDF-SESSION-CLASS* #:SESSION #:TOPLEVEL-ASDF-SESSION #:SESSION-CACHE #:FORCING #:ASDF-UPGRADED-P #:VISITED-ACTIONS #:VISITING-ACTION-SET #:VISITING-ACTION-LIST #:TOTAL-ACTION-COUNT #:PLANNED-ACTION-COUNT #:PLANNED-OUTPUT-ACTION-COUNT #:CLEAR-CONFIGURATION-AND-RETRY #:RETRY #:OPERATE-LEVEL #:SYSTEM-DEFINITION-ERROR #:FORMATTED-SYSTEM-DEFINITION-ERROR #:FORMAT-CONTROL #:FORMAT-ARGUMENTS #:SYSDEF-ERROR #:WHOLE-998830 #:ENVIRONMENT-998831 #:G998874 #:G998875 #:WHOLE-999017 #:ENVIRONMENT-999018 #:COMPONENT #:COMPONENT-FIND-PATH #:FIND-COMPONENT #:COMPONENT-NAME #:COMPONENT-PATHNAME #:COMPONENT-RELATIVE-PATHNAME #:COMPONENT-PARENT #:COMPONENT-SYSTEM #:COMPONENT-PARENT-PATHNAME #:CHILD-COMPONENT #:PARENT-COMPONENT #:MODULE #:FILE-COMPONENT #:SOURCE-FILE #:C-SOURCE-FILE #:JAVA-SOURCE-FILE #:STATIC-FILE #:DOC-FILE #:HTML-FILE #:FILE-TYPE #:SOURCE-FILE-TYPE #:SOURCE-FILE-EXPLICIT-TYPE #:COMPONENT-IN-ORDER-TO #:COMPONENT-SIDEWAY-DEPENDENCIES #:COMPONENT-IF-FEATURE #:AROUND-COMPILE-HOOK #:COMPONENT-DESCRIPTION #:COMPONENT-LONG-DESCRIPTION #:COMPONENT-VERSION #:VERSION-SATISFIES #:COMPONENT-INLINE-METHODS #:COMPONENT-OPERATION-TIMES #:COMPONENT-EXTERNAL-FORMAT #:COMPONENT-ENCODING #:COMPONENT-CHILDREN-BY-NAME #:COMPONENT-CHILDREN #:COMPUTE-CHILDREN-BY-NAME #:COMPONENT-BUILD-OPERATION #:MODULE-DEFAULT-COMPONENT-CLASS #:MODULE-COMPONENTS #:SUB-COMPONENTS #:DUPLICATE-NAMES #:NAME #:VERSION #:DESCRIPTION #:LONG-DESCRIPTION #:AUTHOR #:MAINTAINER #:LICENCE #:COMPONENTS-BY-NAME #:COMPONENTS #:CHILDREN #:CHILDREN-BY-NAME #:DEFAULT-COMPONENT-CLASS #:SOURCE-FILE #:DEFSYSTEM-DEPENDS-ON #:SIDEWAY-DEPENDENCIES #:IF-FEATURE #:IN-ORDER-TO #:INLINE-METHODS #:RELATIVE-PATHNAME #:ABSOLUTE-PATHNAME #:OPERATION-TIMES #:AROUND-COMPILE #:%ENCODING #:PROPERTIES #:COMPONENT-PROPERTIES #:PARENT #:OPERATION #:*OPERATIONS* #:MAKE-OPERATION #:FIND-OPERATION #:FEATURE #:SYSTEM #:PROTO-SYSTEM #:UNDEFINED-SYSTEM #:RESET-SYSTEM-CLASS #:SYSTEM-SOURCE-FILE #:SYSTEM-SOURCE-DIRECTORY #:SYSTEM-RELATIVE-PATHNAME #:SYSTEM-DESCRIPTION #:SYSTEM-LONG-DESCRIPTION #:SYSTEM-AUTHOR #:SYSTEM-MAINTAINER #:SYSTEM-LICENCE #:SYSTEM-LICENSE #:SYSTEM-VERSION #:DEFINITION-DEPENDENCY-LIST #:DEFINITION-DEPENDENCY-SET #:SYSTEM-DEFSYSTEM-DEPENDS-ON #:SYSTEM-DEPENDS-ON #:SYSTEM-WEAKLY-DEPENDS-ON #:COMPONENT-BUILD-PATHNAME #:BUILD-PATHNAME #:COMPONENT-ENTRY-POINT #:ENTRY-POINT #:HOMEPAGE #:SYSTEM-HOMEPAGE #:BUG-TRACKER #:SYSTEM-BUG-TRACKER #:MAILTO #:SYSTEM-MAILTO #:LONG-NAME #:SYSTEM-LONG-NAME #:SOURCE-CONTROL #:SYSTEM-SOURCE-CONTROL #:COERCE-NAME #:PRIMARY-SYSTEM-NAME #:PRIMARY-SYSTEM-P #:COERCE-FILENAME #:FIND-SYSTEM #:BUILTIN-SYSTEM-P #:WHOLE-1150797 #:ENVIRONMENT-1150798 #:WHOLE-1150831 #:ENVIRONMENT-1150832 #:REMOVE-ENTRY-FROM-REGISTRY #:COERCE-ENTRY-TO-DIRECTORY #:REGISTERED-SYSTEM #:REGISTER-SYSTEM #:REGISTERED-SYSTEMS* #:REGISTERED-SYSTEMS #:CLEAR-SYSTEM #:MAP-SYSTEMS #:*SYSTEM-DEFINITION-SEARCH-FUNCTIONS* #:SEARCH-FOR-SYSTEM-DEFINITION #:*CENTRAL-REGISTRY* #:PROBE-ASD #:SYSDEF-CENTRAL-REGISTRY-SEARCH #:CONTRIB-SYSDEF-SEARCH #:SYSDEF-FIND-ASDF #:SYSDEF-PRELOADED-SYSTEM-SEARCH #:REGISTER-PRELOADED-SYSTEM #:*PRELOADED-SYSTEMS* #:FIND-SYSTEM-IF-BEING-DEFINED #:MARK-COMPONENT-PRELOADED #:SYSDEF-IMMUTABLE-SYSTEM-SEARCH #:REGISTER-IMMUTABLE-SYSTEM #:*IMMUTABLE-SYSTEMS* #:*REGISTERED-SYSTEMS* #:CLEAR-REGISTERED-SYSTEMS #:SYSDEF-SOURCE-REGISTRY-SEARCH #:G1202681 #:G1202682 #:CHECK-OPERATION-CONSTRUCTOR #:%ADDITIONAL-INPUT-FILES #:ACTION #:DEFINE-CONVENIENCE-ACTION-METHODS #:ACTION-DESCRIPTION #:FORMAT-ACTION #:DOWNWARD-OPERATION #:UPWARD-OPERATION #:SIDEWAY-OPERATION #:SELFWARD-OPERATION #:NON-PROPAGATING-OPERATION #:COMPONENT-DEPENDS-ON #:INPUT-FILES #:OUTPUT-FILES #:OUTPUT-FILE #:OPERATION-DONE-P #:ACTION-OPERATION #:ACTION-COMPONENT #:MAKE-ACTION #:COMPONENT-OPERATION-TIME #:MARK-OPERATION-DONE #:COMPUTE-ACTION-STAMP #:PERFORM #:PERFORM-WITH-RESTARTS #:RETRY #:ACCEPT #:ACTION-PATH #:FIND-ACTION #:OPERATION-DEFINITION-WARNING #:OPERATION-DEFINITION-ERROR #:ACTION-VALID-P #:CIRCULAR-DEPENDENCY #:CIRCULAR-DEPENDENCY-ACTIONS #:CALL-WHILE-VISITING-ACTION #:WHILE-VISITING-ACTION #:ADDITIONAL-INPUT-FILES #:WHOLE-1251951 #:ENVIRONMENT-1251952 #:WHOLE-1252475 #:ENVIRONMENT-1252476 #:G1257580 #:G1257581 #:TRY-RECOMPILING #:CL-SOURCE-FILE #:CL-SOURCE-FILE.CL #:CL-SOURCE-FILE.LSP #:BASIC-LOAD-OP #:BASIC-COMPILE-OP #:LOAD-OP #:PREPARE-OP #:COMPILE-OP #:TEST-OP #:LOAD-SOURCE-OP #:PREPARE-SOURCE-OP #:CALL-WITH-AROUND-COMPILE-HOOK #:PERFORM-LISP-COMPILATION #:PERFORM-LISP-LOAD-FASL #:PERFORM-LISP-LOAD-SOURCE #:LISP-COMPILATION-OUTPUT-FILES #:G1310171 #:FIND-COMPONENT #:RESOLVE-DEPENDENCY-NAME #:RESOLVE-DEPENDENCY-SPEC #:RESOLVE-DEPENDENCY-COMBINATION #:MISSING-COMPONENT #:MISSING-REQUIRES #:MISSING-PARENT #:MISSING-COMPONENT-OF-VERSION #:RETRY #:MISSING-DEPENDENCY #:MISSING-DEPENDENCY-OF-VERSION #:MISSING-REQUIRES #:MISSING-PARENT #:MISSING-REQUIRED-BY #:MISSING-VERSION #:G1362366 #:FORCING #:MAKE-FORCING #:FORCED #:FORCED-NOT #:PERFORMABLE-P #:NORMALIZE-FORCED-SYSTEMS #:NORMALIZE-FORCED-NOT-SYSTEMS #:ACTION-FORCED-P #:ACTION-FORCED-NOT-P #:PLAN #:PLAN-TRAVERSAL #:SEQUENTIAL-PLAN #:*PLAN-CLASS* #:ACTION-STATUS #:STATUS-STAMP #:STATUS-INDEX #:STATUS-DONE-P #:STATUS-KEEP-P #:STATUS-NEED-P #:ACTION-ALREADY-DONE-P #:+STATUS-GOOD+ #:+STATUS-TODO+ #:+STATUS-VOID+ #:SYSTEM-OUT-OF-DATE #:ACTION-UP-TO-DATE-P #:CIRCULAR-DEPENDENCY #:CIRCULAR-DEPENDENCY-ACTIONS #:NEEDED-IN-IMAGE-P #:MAP-DIRECT-DEPENDENCIES #:REDUCE-DIRECT-DEPENDENCIES #:DIRECT-DEPENDENCIES #:COMPUTE-ACTION-STAMP #:TRAVERSE-ACTION #:RECORD-DEPENDENCY #:MAKE-PLAN #:PLAN-ACTIONS #:PLAN-ACTIONS-R #:PERFORM-PLAN #:MARK-AS-DONE #:REQUIRED-COMPONENTS #:FILTERED-SEQUENTIAL-PLAN #:PLAN-COMPONENT-TYPE #:PLAN-KEEP-OPERATION #:PLAN-KEEP-COMPONENT #:G1469853 #:REST1470466 #:REST1470884 #:OPERATE #:OOS #:BUILD-OP #:MAKE #:LOAD-SYSTEM #:LOAD-SYSTEMS #:LOAD-SYSTEMS* #:COMPILE-SYSTEM #:TEST-SYSTEM #:REQUIRE-SYSTEM #:MODULE-PROVIDE-ASDF #:COMPONENT-LOADED-P #:ALREADY-LOADED-SYSTEMS #:RECURSIVE-OPERATE #:REST1525190 #:ASDF/COMPONENT #:%ADDITIONAL-INPUT-FILES #:FIND-SYSTEM #:LOCATE-SYSTEM #:LOAD-ASD #:DEFINE-OP #:LOAD-SYSTEM-DEFINITION-ERROR #:ERROR-NAME #:ERROR-PATHNAME #:ERROR-CONDITION #:G1581860 #:G1581982 #:DEPENDS-ON #:WEAKLY-DEPENDS-ON #:MAKE-OPERATION #:%ADDITIONAL-INPUT-FILES #:DEFINE-OP #:DEFSYSTEM #:REGISTER-SYSTEM-DEFINITION #:*DEFAULT-COMPONENT-CLASS* #:DETERMINE-SYSTEM-DIRECTORY #:PARSE-COMPONENT-FORM #:NON-TOPLEVEL-SYSTEM #:NON-SYSTEM-SYSTEM #:BAD-SYSTEM-NAME #:*KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES* #:KNOWN-SYSTEM-WITH-BAD-SECONDARY-SYSTEM-NAMES-P #:SYSDEF-ERROR-COMPONENT #:CHECK-COMPONENT-INPUT #:EXPLAIN #:COMPUTE-COMPONENT-CHILDREN #:CLASS-FOR-TYPE #:WHOLE-1636897 #:ENVIRONMENT-1636898 #:BUNDLE-OP #:BUNDLE-TYPE #:PROGRAM-SYSTEM #:BUNDLE-SYSTEM #:BUNDLE-PATHNAME-TYPE #:DIRECT-DEPENDENCY-FILES #:MONOLITHIC-OP #:MONOLITHIC-BUNDLE-OP #:OPERATION-MONOLITHIC-P #:BASIC-COMPILE-BUNDLE-OP #:PREPARE-BUNDLE-OP #:COMPILE-BUNDLE-OP #:LOAD-BUNDLE-OP #:MONOLITHIC-COMPILE-BUNDLE-OP #:MONOLITHIC-LOAD-BUNDLE-OP #:LIB-OP #:MONOLITHIC-LIB-OP #:DLL-OP #:MONOLITHIC-DLL-OP #:DELIVER-ASD-OP #:MONOLITHIC-DELIVER-ASD-OP #:PROGRAM-OP #:IMAGE-OP #:COMPILED-FILE #:PRECOMPILED-SYSTEM #:PREBUILT-SYSTEM #:USER-SYSTEM-P #:USER-SYSTEM #:TRIVIAL-SYSTEM-P #:PROLOGUE-CODE #:EPILOGUE-CODE #:STATIC-LIBRARY #:CONCATENATE-SOURCE-OP #:LOAD-CONCATENATED-SOURCE-OP #:COMPILE-CONCATENATED-SOURCE-OP #:LOAD-COMPILED-CONCATENATED-SOURCE-OP #:MONOLITHIC-CONCATENATE-SOURCE-OP #:MONOLITHIC-LOAD-CONCATENATED-SOURCE-OP #:MONOLITHIC-COMPILE-CONCATENATED-SOURCE-OP #:MONOLITHIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP #:PACKAGE-INFERRED-SYSTEM #:SYSDEF-PACKAGE-INFERRED-SYSTEM-SEARCH #:PACKAGE-SYSTEM #:REGISTER-SYSTEM-PACKAGES #:*DEFPACKAGE-FORMS* #:*PACKAGE-INFERRED-SYSTEMS* #:PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR #:*OUTPUT-TRANSLATIONS* #:*OUTPUT-TRANSLATIONS-PARAMETER* #:INVALID-OUTPUT-TRANSLATION #:OUTPUT-TRANSLATIONS #:OUTPUT-TRANSLATIONS-INITIALIZED-P #:INITIALIZE-OUTPUT-TRANSLATIONS #:CLEAR-OUTPUT-TRANSLATIONS #:DISABLE-OUTPUT-TRANSLATIONS #:ENSURE-OUTPUT-TRANSLATIONS #:APPLY-OUTPUT-TRANSLATIONS #:VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE #:VALIDATE-OUTPUT-TRANSLATIONS-FORM #:VALIDATE-OUTPUT-TRANSLATIONS-FILE #:VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY #:PARSE-OUTPUT-TRANSLATIONS-STRING #:WRAPPING-OUTPUT-TRANSLATIONS #:USER-OUTPUT-TRANSLATIONS-PATHNAME #:SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME #:USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME #:SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME #:ENVIRONMENT-OUTPUT-TRANSLATIONS #:PROCESS-OUTPUT-TRANSLATIONS #:COMPUTE-OUTPUT-TRANSLATIONS #:TRANSLATE-JAR-PATHNAME #:*SOURCE-REGISTRY-PARAMETER* #:*DEFAULT-SOURCE-REGISTRIES* #:INVALID-SOURCE-REGISTRY #:SOURCE-REGISTRY-INITIALIZED-P #:INITIALIZE-SOURCE-REGISTRY #:CLEAR-SOURCE-REGISTRY #:*SOURCE-REGISTRY* #:ENSURE-SOURCE-REGISTRY #:*SOURCE-REGISTRY-PARAMETER* #:*DEFAULT-SOURCE-REGISTRY-EXCLUSIONS* #:*SOURCE-REGISTRY-EXCLUSIONS* #:*WILD-ASD* #:DIRECTORY-ASD-FILES #:REGISTER-ASD-DIRECTORY #:*RECURSE-BEYOND-ASDS* #:COLLECT-ASDS-IN-DIRECTORY #:COLLECT-SUB*DIRECTORIES-ASD-FILES #:VALIDATE-SOURCE-REGISTRY-DIRECTIVE #:VALIDATE-SOURCE-REGISTRY-FORM #:VALIDATE-SOURCE-REGISTRY-FILE #:VALIDATE-SOURCE-REGISTRY-DIRECTORY #:PARSE-SOURCE-REGISTRY-STRING #:WRAPPING-SOURCE-REGISTRY #:DEFAULT-USER-SOURCE-REGISTRY #:DEFAULT-SYSTEM-SOURCE-REGISTRY #:USER-SOURCE-REGISTRY #:SYSTEM-SOURCE-REGISTRY #:USER-SOURCE-REGISTRY-DIRECTORY #:SYSTEM-SOURCE-REGISTRY-DIRECTORY #:ENVIRONMENT-SOURCE-REGISTRY #:PROCESS-SOURCE-REGISTRY #:INHERIT-SOURCE-REGISTRY #:COMPUTE-SOURCE-REGISTRY #:FLATTEN-SOURCE-REGISTRY #:SYSDEF-SOURCE-REGISTRY-SEARCH #:G1895678 #:LOAD-SYSDEF #:G1941729 #:G1941730 #:*ASDF-VERBOSE* #:OPERATION-ERROR #:COMPILE-ERROR #:COMPILE-FAILED #:COMPILE-WARNED #:ERROR-COMPONENT #:ERROR-OPERATION #:TRAVERSE #:COMPONENT-LOAD-DEPENDENCIES #:ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY #:OPERATION-ON-FAILURE #:OPERATION-ON-WARNINGS #:ON-FAILURE #:ON-WARNINGS #:COMPONENT-PROPERTY #:RUN-SHELL-COMMAND #:SYSTEM-DEFINITION-PATHNAME #:SYSTEM-REGISTERED-P #:REQUIRE-SYSTEM #:EXPLAIN #:G1997976 #:G1997977 #:G1998471 #:G1998472 #:REST1998556 #:G1998796 #:G1998797 #:G1998928 #:G1998929 #:OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION #:G1999153 #:G1999154 #:G1999208 #:G1999306 #:G1999307 #:G1999461 #:G1999462 #:G1999909 #:G1999910 #:G2000105 #:G2000106 #:G2000184 #:G2000185 #:DEFSYSTEM #:FIND-SYSTEM #:LOAD-ASD #:LOCATE-SYSTEM #:COERCE-NAME #:PRIMARY-SYSTEM-NAME #:PRIMARY-SYSTEM-P #:OOS #:OPERATE #:MAKE-PLAN #:PERFORM-PLAN #:SEQUENTIAL-PLAN #:SYSTEM-DEFINITION-PATHNAME #:SEARCH-FOR-SYSTEM-DEFINITION #:FIND-COMPONENT #:COMPONENT-FIND-PATH #:COMPILE-SYSTEM #:LOAD-SYSTEM #:LOAD-SYSTEMS #:LOAD-SYSTEMS* #:REQUIRE-SYSTEM #:TEST-SYSTEM #:CLEAR-SYSTEM #:OPERATION #:MAKE-OPERATION #:FIND-OPERATION #:UPWARD-OPERATION #:DOWNWARD-OPERATION #:SIDEWAY-OPERATION #:SELFWARD-OPERATION #:NON-PROPAGATING-OPERATION #:BUILD-OP #:MAKE #:LOAD-OP #:PREPARE-OP #:COMPILE-OP #:PREPARE-SOURCE-OP #:LOAD-SOURCE-OP #:TEST-OP #:DEFINE-OP #:FEATURE #:VERSION #:VERSION-SATISFIES #:UPGRADE-ASDF #:IMPLEMENTATION-IDENTIFIER #:IMPLEMENTATION-TYPE #:HOSTNAME #:COMPONENT-DEPENDS-ON #:INPUT-FILES #:ADDITIONAL-INPUT-FILES #:OUTPUT-FILES #:OUTPUT-FILE #:PERFORM #:PERFORM-WITH-RESTARTS #:OPERATION-DONE-P #:EXPLAIN #:ACTION-DESCRIPTION #:COMPONENT-SIDEWAY-DEPENDENCIES #:NEEDED-IN-IMAGE-P #:BUNDLE-OP #:MONOLITHIC-BUNDLE-OP #:PRECOMPILED-SYSTEM #:COMPILED-FILE #:BUNDLE-SYSTEM #:PROGRAM-SYSTEM #:BASIC-COMPILE-BUNDLE-OP #:PREPARE-BUNDLE-OP #:COMPILE-BUNDLE-OP #:LOAD-BUNDLE-OP #:MONOLITHIC-COMPILE-BUNDLE-OP #:MONOLITHIC-LOAD-BUNDLE-OP #:LIB-OP #:DLL-OP #:DELIVER-ASD-OP #:PROGRAM-OP #:IMAGE-OP #:MONOLITHIC-LIB-OP #:MONOLITHIC-DLL-OP #:MONOLITHIC-DELIVER-ASD-OP #:CONCATENATE-SOURCE-OP #:LOAD-CONCATENATED-SOURCE-OP #:COMPILE-CONCATENATED-SOURCE-OP #:LOAD-COMPILED-CONCATENATED-SOURCE-OP #:MONOLITHIC-CONCATENATE-SOURCE-OP #:MONOLITHIC-LOAD-CONCATENATED-SOURCE-OP #:MONOLITHIC-COMPILE-CONCATENATED-SOURCE-OP #:MONOLITHIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP #:OPERATION-MONOLITHIC-P #:REQUIRED-COMPONENTS #:COMPONENT-LOADED-P #:COMPONENT #:PARENT-COMPONENT #:CHILD-COMPONENT #:SYSTEM #:MODULE #:FILE-COMPONENT #:SOURCE-FILE #:C-SOURCE-FILE #:JAVA-SOURCE-FILE #:CL-SOURCE-FILE #:CL-SOURCE-FILE.CL #:CL-SOURCE-FILE.LSP #:STATIC-FILE #:DOC-FILE #:HTML-FILE #:FILE-TYPE #:SOURCE-FILE-TYPE #:REGISTER-PRELOADED-SYSTEM #:SYSDEF-PRELOADED-SYSTEM-SEARCH #:REGISTER-IMMUTABLE-SYSTEM #:SYSDEF-IMMUTABLE-SYSTEM-SEARCH #:PACKAGE-INFERRED-SYSTEM #:REGISTER-SYSTEM-PACKAGES #:COMPONENT-CHILDREN #:COMPONENT-CHILDREN-BY-NAME #:COMPONENT-PATHNAME #:COMPONENT-RELATIVE-PATHNAME #:COMPONENT-NAME #:COMPONENT-VERSION #:COMPONENT-PARENT #:COMPONENT-SYSTEM #:COMPONENT-ENCODING #:COMPONENT-EXTERNAL-FORMAT #:SYSTEM-DESCRIPTION #:SYSTEM-LONG-DESCRIPTION #:SYSTEM-AUTHOR #:SYSTEM-MAINTAINER #:SYSTEM-LICENSE #:SYSTEM-LICENCE #:SYSTEM-VERSION #:SYSTEM-SOURCE-FILE #:SYSTEM-SOURCE-DIRECTORY #:SYSTEM-RELATIVE-PATHNAME #:SYSTEM-HOMEPAGE #:SYSTEM-MAILTO #:SYSTEM-BUG-TRACKER #:SYSTEM-LONG-NAME #:SYSTEM-SOURCE-CONTROL #:MAP-SYSTEMS #:SYSTEM-DEFSYSTEM-DEPENDS-ON #:SYSTEM-DEPENDS-ON #:SYSTEM-WEAKLY-DEPENDS-ON #:*SYSTEM-DEFINITION-SEARCH-FUNCTIONS* #:*CENTRAL-REGISTRY* #:*COMPILE-FILE-WARNINGS-BEHAVIOUR* #:*COMPILE-FILE-FAILURE-BEHAVIOUR* #:*RESOLVE-SYMLINKS* #:*VERBOSE-OUT* #:ASDF-VERSION #:COMPILE-CONDITION #:COMPILE-FILE-ERROR #:COMPILE-WARNED-ERROR #:COMPILE-FAILED-ERROR #:COMPILE-WARNED-WARNING #:COMPILE-FAILED-WARNING #:ERROR-NAME #:ERROR-PATHNAME #:LOAD-SYSTEM-DEFINITION-ERROR #:ERROR-COMPONENT #:ERROR-OPERATION #:SYSTEM-DEFINITION-ERROR #:MISSING-COMPONENT #:MISSING-COMPONENT-OF-VERSION #:MISSING-DEPENDENCY #:MISSING-DEPENDENCY-OF-VERSION #:CIRCULAR-DEPENDENCY #:DUPLICATE-NAMES #:NON-TOPLEVEL-SYSTEM #:NON-SYSTEM-SYSTEM #:BAD-SYSTEM-NAME #:SYSTEM-OUT-OF-DATE #:PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR #:OPERATION-DEFINITION-WARNING #:OPERATION-DEFINITION-ERROR #:TRY-RECOMPILING #:RETRY #:ACCEPT #:COERCE-ENTRY-TO-DIRECTORY #:REMOVE-ENTRY-FROM-REGISTRY #:CLEAR-CONFIGURATION-AND-RETRY #:*ENCODING-DETECTION-HOOK* #:*ENCODING-EXTERNAL-FORMAT-HOOK* #:*DEFAULT-ENCODING* #:*UTF-8-EXTERNAL-FORMAT* #:CLEAR-CONFIGURATION #:*OUTPUT-TRANSLATIONS-PARAMETER* #:INITIALIZE-OUTPUT-TRANSLATIONS #:DISABLE-OUTPUT-TRANSLATIONS #:CLEAR-OUTPUT-TRANSLATIONS #:ENSURE-OUTPUT-TRANSLATIONS #:APPLY-OUTPUT-TRANSLATIONS #:COMPILE-FILE* #:COMPILE-FILE-PATHNAME* #:*WARNINGS-FILE-TYPE* #:ENABLE-DEFERRED-WARNINGS-CHECK #:DISABLE-DEFERRED-WARNINGS-CHECK #:ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY #:*DEFAULT-SOURCE-REGISTRIES* #:*SOURCE-REGISTRY-PARAMETER* #:INITIALIZE-SOURCE-REGISTRY #:COMPUTE-SOURCE-REGISTRY #:CLEAR-SOURCE-REGISTRY #:ENSURE-SOURCE-REGISTRY #:PROCESS-SOURCE-REGISTRY #:REGISTERED-SYSTEM #:REGISTERED-SYSTEMS #:ALREADY-LOADED-SYSTEMS #:RESOLVE-LOCATION #:ASDF-MESSAGE #:*USER-CACHE* #:USER-OUTPUT-TRANSLATIONS-PATHNAME #:SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME #:USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME #:SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME #:USER-SOURCE-REGISTRY #:SYSTEM-SOURCE-REGISTRY #:USER-SOURCE-REGISTRY-DIRECTORY #:SYSTEM-SOURCE-REGISTRY-DIRECTORY #:*ASDF-VERBOSE* #:RUN-SHELL-COMMAND #:COMPONENT-LOAD-DEPENDENCIES #:SYSTEM-REGISTERED-P #:PACKAGE-SYSTEM #:OPERATION-ON-WARNINGS #:OPERATION-ON-FAILURE #:OPERATION-ERROR #:COMPILE-FAILED #:COMPILE-WARNED #:COMPILE-ERROR #:MODULE-COMPONENTS #:COMPONENT-PROPERTY #:TRAVERSE #:LOADED-SYSTEMS #:OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION #:*MODULE-PROVIDER-FUNCTIONS*))
(COMMON-LISP:SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.asdf"))
(COMMON-LISP:IN-PACKAGE "COMMON-LISP-USER")
(COMMON-LISP:LET ((#0? (SYSTEM::%DEFPACKAGE "UIOP/PACKAGE" 'COMMON-LISP:NIL 'COMMON-LISP:NIL 
'COMMON-LISP:NIL (SYSTEM::ENSURE-AVAILABLE-SYMBOLS 'COMMON-LISP:NIL) '("COMMON-LISP") 
(SYSTEM::ENSURE-AVAILABLE-SYMBOLS 'COMMON-LISP:NIL) 'COMMON-LISP:NIL '("FIND-PACKAGE*" 
"FIND-SYMBOL*" "SYMBOL-CALL" "INTERN*" "EXPORT*" "IMPORT*" "SHADOWING-IMPORT*" "SHADOW*" 
"MAKE-SYMBOL*" "UNINTERN*" "SYMBOL-SHADOWING-P" "HOME-PACKAGE-P" "SYMBOL-PACKAGE-NAME" 
"STANDARD-COMMON-LISP-SYMBOL-P" "REIFY-PACKAGE" "UNREIFY-PACKAGE" "REIFY-SYMBOL" 
"UNREIFY-SYMBOL" "NUKE-SYMBOL-IN-PACKAGE" "NUKE-SYMBOL" "REHOME-SYMBOL" "ENSURE-PACKAGE-UNUSED" 
"DELETE-PACKAGE*" "PACKAGE-NAMES" "PACKAGES-FROM-NAMES" "FRESH-PACKAGE-NAME" "RENAME-PACKAGE-AWAY" 
"PACKAGE-DEFINITION-FORM" "PARSE-DEFINE-PACKAGE-FORM" "ENSURE-PACKAGE" "DEFINE-PACKAGE") 
'COMMON-LISP:NIL 'COMMON-LISP:NIL))) COMMON-LISP:NIL (SYSTEM:RECORD-SOURCE-INFORMATION-FOR-TYPE 
:UIOP/PACKAGE :PACKAGE) #0?)
(SYSTEM:PUT :UIOP/PACKAGE 'SYSTEM::SOURCE (CONS '(:PACKAGE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
0) (GET :UIOP/PACKAGE 'SYSTEM::SOURCE NIL)))
(SYSTEM:%IN-PACKAGE "UIOP/PACKAGE")
(COMMON-LISP:LET ((#1? (SYSTEM::%DEFPACKAGE "UIOP/PACKAGE-LOCAL-NICKNAMES" 'COMMON-LISP:NIL 
'COMMON-LISP:NIL 'COMMON-LISP:NIL (SYSTEM::ENSURE-AVAILABLE-SYMBOLS 'COMMON-LISP:NIL) 
'("CL") (SYSTEM::ENSURE-AVAILABLE-SYMBOLS '(("EXT" "REMOVE-PACKAGE-LOCAL-NICKNAME" 
"PACKAGE-LOCAL-NICKNAMES" "ADD-PACKAGE-LOCAL-NICKNAME"))) 'COMMON-LISP:NIL '("ADD-PACKAGE-LOCAL-NICKNAME" 
"REMOVE-PACKAGE-LOCAL-NICKNAME" "PACKAGE-LOCAL-NICKNAMES") 'COMMON-LISP:NIL 'COMMON-LISP:NIL))) 
COMMON-LISP:NIL (SYSTEM:RECORD-SOURCE-INFORMATION-FOR-TYPE :UIOP/PACKAGE-LOCAL-NICKNAMES 
:PACKAGE) #1?)
(SYSTEM:PUT :UIOP/PACKAGE-LOCAL-NICKNAMES 'SYSTEM::SOURCE (CONS '(:PACKAGE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
6539) (GET :UIOP/PACKAGE-LOCAL-NICKNAMES 'SYSTEM::SOURCE NIL)))
(PROGN (SYSTEM:PUT 'PACKAGE-DESIGNATOR 'SYSTEM::SOURCE (CONS '(PACKAGE-DESIGNATOR 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'PACKAGE-DESIGNATOR 'SYSTEM::SOURCE NIL))) (DEFTYPE PACKAGE-DESIGNATOR NIL '(AND 
(OR PACKAGE CHARACTER STRING SYMBOL) (SATISFIES FIND-PACKAGE))))
(SYSTEM:PUT 'NO-SUCH-PACKAGE-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'NO-SUCH-PACKAGE-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'NO-SUCH-PACKAGE-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'NO-SUCH-PACKAGE-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 0))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (NO-SUCH-PACKAGE-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NO-SUCH-PACKAGE-ERROR 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(SYSTEM:PUT 'PACKAGE-DESIGNATOR 'SYSTEM::SOURCE (CONS '((:METHOD PACKAGE-DESIGNATOR 
NIL (NO-SUCH-PACKAGE-ERROR)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'PACKAGE-DESIGNATOR 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PACKAGE-DESIGNATOR :LAMBDA-LIST '(C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'NO-SUCH-PACKAGE-ERROR)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 7) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
10))
(PROGN (SYSTEM:PUT 'FIND-PACKAGE* 'SYSTEM::SOURCE (CONS '((:FUNCTION FIND-PACKAGE*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'FIND-PACKAGE* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIND-PACKAGE* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 13) 7310 '(PACKAGE-DESIGNATOR &OPTIONAL (ERRORP T)) "Like CL:FIND-PACKAGE, but by default raises a UIOP:NO-SUCH-PACKAGE-ERROR if the
  package is not found."))
(PROGN (SYSTEM:PUT 'FIND-SYMBOL* 'SYSTEM::SOURCE (CONS '((:FUNCTION FIND-SYMBOL*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'FIND-SYMBOL* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIND-SYMBOL* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 14) 7310 '(NAME PACKAGE-DESIGNATOR &OPTIONAL (ERROR T)) "Find a symbol in a package of given string'ified NAME;
unlike CL:FIND-SYMBOL, work well with 'modern' case sensitive syntax
by letting you supply a symbol or keyword for the name;
also works well when the package is not present.
If optional ERROR argument is NIL, return NIL instead of an error
when the symbol is not found."))
(PROGN (SYSTEM:PUT 'SYMBOL-CALL 'SYSTEM::SOURCE (CONS '((:FUNCTION SYMBOL-CALL) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'SYMBOL-CALL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYMBOL-CALL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 15) 7310 '(PACKAGE NAME &REST ARGS) "Call a function associated with symbol of given name in given package,
with given ARGS. Useful when the call is read before the package is loaded,
or when loading the package is optional."))
(PROGN (SYSTEM:PUT 'INTERN* 'SYSTEM::SOURCE (CONS '((:FUNCTION INTERN*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'INTERN* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'INTERN* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 16) 7310 '(NAME PACKAGE-DESIGNATOR &OPTIONAL (ERROR T)) NIL))
(PROGN (SYSTEM:PUT 'EXPORT* 'SYSTEM::SOURCE (CONS '((:FUNCTION EXPORT*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'EXPORT* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EXPORT* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 17) 7310 '(NAME PACKAGE-DESIGNATOR) NIL))
(PROGN (SYSTEM:PUT 'IMPORT* 'SYSTEM::SOURCE (CONS '((:FUNCTION IMPORT*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'IMPORT* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'IMPORT* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 18) 7310 '(SYMBOL PACKAGE-DESIGNATOR) NIL))
(PROGN (SYSTEM:PUT 'SHADOWING-IMPORT* 'SYSTEM::SOURCE (CONS '((:FUNCTION SHADOWING-IMPORT*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'SHADOWING-IMPORT* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SHADOWING-IMPORT* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 19) 7310 '(SYMBOL PACKAGE-DESIGNATOR) NIL))
(PROGN (SYSTEM:PUT 'SHADOW* 'SYSTEM::SOURCE (CONS '((:FUNCTION SHADOW*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'SHADOW* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SHADOW* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 20) 7310 '(NAME PACKAGE-DESIGNATOR) NIL))
(PROGN (SYSTEM:PUT 'MAKE-SYMBOL* 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-SYMBOL*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'MAKE-SYMBOL* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-SYMBOL* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 21) 7310 '(NAME) NIL))
(PROGN (SYSTEM:PUT 'UNINTERN* 'SYSTEM::SOURCE (CONS '((:FUNCTION UNINTERN*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
7310) (GET 'UNINTERN* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNINTERN* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 22) 7310 '(NAME PACKAGE-DESIGNATOR &OPTIONAL (ERROR T)) NIL))
(PROGN (SYSTEM:PUT 'SYMBOL-SHADOWING-P 'SYSTEM::SOURCE (CONS '((:FUNCTION SYMBOL-SHADOWING-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'SYMBOL-SHADOWING-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYMBOL-SHADOWING-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 23) 7310 '(SYMBOL PACKAGE) NIL))
(PROGN (SYSTEM:PUT 'HOME-PACKAGE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION HOME-PACKAGE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 7310) (GET 
'HOME-PACKAGE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'HOME-PACKAGE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 24) 7310 '(SYMBOL PACKAGE) NIL))
(PROGN (SYSTEM:PUT 'SYMBOL-PACKAGE-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION SYMBOL-PACKAGE-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 10981) (GET 
'SYMBOL-PACKAGE-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYMBOL-PACKAGE-NAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 25) 10981 '(SYMBOL) NIL))
(PROGN (SYSTEM:PUT 'STANDARD-COMMON-LISP-SYMBOL-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
STANDARD-COMMON-LISP-SYMBOL-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
10981) (GET 'STANDARD-COMMON-LISP-SYMBOL-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STANDARD-COMMON-LISP-SYMBOL-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 26) 10981 '(SYMBOL) NIL))
(PROGN (SYSTEM:PUT 'REIFY-PACKAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION REIFY-PACKAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 10981) (GET 
'REIFY-PACKAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REIFY-PACKAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 27) 10981 '(PACKAGE &OPTIONAL PACKAGE-CONTEXT) NIL))
(PROGN (SYSTEM:PUT 'UNREIFY-PACKAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION UNREIFY-PACKAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 10981) (GET 
'UNREIFY-PACKAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNREIFY-PACKAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 28) 10981 '(PACKAGE &OPTIONAL PACKAGE-CONTEXT) NIL))
(PROGN (SYSTEM:PUT 'REIFY-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION REIFY-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 10981) (GET 
'REIFY-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REIFY-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 29) 10981 '(SYMBOL &OPTIONAL PACKAGE-CONTEXT) NIL))
(PROGN (SYSTEM:PUT 'UNREIFY-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION UNREIFY-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 10981) (GET 
'UNREIFY-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNREIFY-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 30) 10981 '(SYMBOL &OPTIONAL PACKAGE-CONTEXT) NIL))
(PROGN (SYSTEM:PUT '*ALL-PACKAGE-HAPPINESS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12421) (GET 
'*ALL-PACKAGE-HAPPINESS* 'SYSTEM::SOURCE NIL))) (DEFVAR *ALL-PACKAGE-HAPPINESS* 'NIL))
(PROGN (SYSTEM:PUT '*ALL-PACKAGE-FISHINESS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12421) (GET 
'*ALL-PACKAGE-FISHINESS* 'SYSTEM::SOURCE NIL))) (DEFVAR *ALL-PACKAGE-FISHINESS* (LIST 
T)))
(PROGN (SYSTEM:PUT 'RECORD-FISHY 'SYSTEM::SOURCE (CONS '((:FUNCTION RECORD-FISHY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12421) (GET 
'RECORD-FISHY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RECORD-FISHY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 31) 12421 '(INFO) NIL))
(PROGN (SYSTEM:PUT 'WHEN-PACKAGE-FISHINESS 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
12421) (GET 'WHEN-PACKAGE-FISHINESS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WHEN-PACKAGE-FISHINESS 
(SYSTEM:MAKE-MACRO 'WHEN-PACKAGE-FISHINESS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
32)) 12421 '(&BODY BODY) NIL))
(PROGN (SYSTEM:PUT 'NOTE-PACKAGE-FISHINESS 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
12421) (GET 'NOTE-PACKAGE-FISHINESS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NOTE-PACKAGE-FISHINESS 
(SYSTEM:MAKE-MACRO 'NOTE-PACKAGE-FISHINESS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
33)) 12421 '(&REST INFO) NIL))
(PROGN (SYSTEM:PUT 'SET-DUMMY-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION SET-DUMMY-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'SET-DUMMY-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SET-DUMMY-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 34) 12869 '(SYMBOL REASON OTHER-SYMBOL) NIL))
(PROGN (SYSTEM:PUT 'MAKE-DUMMY-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-DUMMY-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'MAKE-DUMMY-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-DUMMY-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 35) 12869 '(SYMBOL) NIL))
(PROGN (SYSTEM:PUT 'DUMMY-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION DUMMY-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'DUMMY-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DUMMY-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 36) 12869 '(SYMBOL) NIL))
(PROGN (SYSTEM:PUT 'GET-DUMMY-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION GET-DUMMY-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'GET-DUMMY-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GET-DUMMY-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 37) 12869 '(SYMBOL) NIL))
(PROGN (SYSTEM:PUT 'NUKE-SYMBOL-IN-PACKAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION NUKE-SYMBOL-IN-PACKAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'NUKE-SYMBOL-IN-PACKAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NUKE-SYMBOL-IN-PACKAGE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 38) 12869 '(SYMBOL PACKAGE-DESIGNATOR) 
NIL))
(PROGN (SYSTEM:PUT 'NUKE-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION NUKE-SYMBOL) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
12869) (GET 'NUKE-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NUKE-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 39) 12869 '(SYMBOL &OPTIONAL (PACKAGES (LIST-ALL-PACKAGES))) 
NIL))
(PROGN (SYSTEM:PUT 'REHOME-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION REHOME-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'REHOME-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REHOME-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 40) 12869 '(SYMBOL PACKAGE-DESIGNATOR) "Changes the home package of a symbol, also leaving it present in its old home if any"))
(PROGN (SYSTEM:PUT 'ENSURE-PACKAGE-UNUSED 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-PACKAGE-UNUSED) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'ENSURE-PACKAGE-UNUSED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-PACKAGE-UNUSED 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 41) 12869 '(PACKAGE) NIL))
(PROGN (SYSTEM:PUT 'DELETE-PACKAGE* 'SYSTEM::SOURCE (CONS '((:FUNCTION DELETE-PACKAGE*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'DELETE-PACKAGE* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DELETE-PACKAGE* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 42) 12869 '(PACKAGE &KEY NUKE) NIL))
(PROGN (SYSTEM:PUT 'PACKAGE-NAMES 'SYSTEM::SOURCE (CONS '((:FUNCTION PACKAGE-NAMES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'PACKAGE-NAMES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PACKAGE-NAMES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 43) 12869 '(PACKAGE) NIL))
(PROGN (SYSTEM:PUT 'PACKAGES-FROM-NAMES 'SYSTEM::SOURCE (CONS '((:FUNCTION PACKAGES-FROM-NAMES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'PACKAGES-FROM-NAMES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PACKAGES-FROM-NAMES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 44) 12869 '(NAMES) NIL))
(PROGN (SYSTEM:PUT 'FRESH-PACKAGE-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION FRESH-PACKAGE-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'FRESH-PACKAGE-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FRESH-PACKAGE-NAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 45) 12869 '(&KEY (PREFIX :%TO-BE-DELETED) SEPARATOR (INDEX (RANDOM 
MOST-POSITIVE-FIXNUM))) NIL))
(PROGN (SYSTEM:PUT 'RENAME-PACKAGE-AWAY 'SYSTEM::SOURCE (CONS '((:FUNCTION RENAME-PACKAGE-AWAY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 12869) (GET 
'RENAME-PACKAGE-AWAY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RENAME-PACKAGE-AWAY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 47) 12869 '(P &REST KEYS &KEY PREFIX &ALLOW-OTHER-KEYS) NIL))
(PROGN (SYSTEM:PUT 'PACKAGE-DEFINITION-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION PACKAGE-DEFINITION-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 19847) (GET 
'PACKAGE-DEFINITION-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PACKAGE-DEFINITION-FORM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49) 19847 '(PACKAGE-DESIGNATOR &KEY 
(NICKNAMESP T) (USEP T) (SHADOWP T) (SHADOWING-IMPORT-P T) (EXPORTP T) (IMPORTP T) 
INTERNP (ERROR T)) NIL))
(SYSTEM:PUT 'DEFINE-PACKAGE-STYLE-WARNING 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
22890) (GET 'DEFINE-PACKAGE-STYLE-WARNING 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DEFINE-PACKAGE-STYLE-WARNING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
22890) (GET 'DEFINE-PACKAGE-STYLE-WARNING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54))
(PROGN (SYSTEM:PUT 'ENSURE-SHADOWING-IMPORT 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-SHADOWING-IMPORT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-SHADOWING-IMPORT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-SHADOWING-IMPORT 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 55) 22890 '(NAME TO-PACKAGE FROM-PACKAGE 
SHADOWED IMPORTED) NIL))
(PROGN (SYSTEM:PUT 'ENSURE-IMPORTED 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-IMPORTED) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-IMPORTED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-IMPORTED (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 56) 22890 '(IMPORT-ME INTO-PACKAGE &OPTIONAL FROM-PACKAGE) NIL))
(PROGN (SYSTEM:PUT 'ENSURE-IMPORT 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-IMPORT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-IMPORT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-IMPORT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 57) 22890 '(NAME TO-PACKAGE FROM-PACKAGE SHADOWED IMPORTED) 
NIL))
(PROGN (SYSTEM:PUT 'ENSURE-INHERITED 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-INHERITED) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-INHERITED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-INHERITED (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 58) 22890 '(NAME SYMBOL TO-PACKAGE FROM-PACKAGE MIXP SHADOWED 
IMPORTED INHERITED) NIL))
(PROGN (SYSTEM:PUT 'ENSURE-MIX 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-MIX) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
22890) (GET 'ENSURE-MIX 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-MIX (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 59) 22890 '(NAME SYMBOL TO-PACKAGE FROM-PACKAGE SHADOWED IMPORTED 
INHERITED) NIL))
(PROGN (SYSTEM:PUT 'RECYCLE-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION RECYCLE-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'RECYCLE-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RECYCLE-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 60) 22890 '(NAME RECYCLE EXPORTED) NIL))
(PROGN (SYSTEM:PUT 'SYMBOL-RECYCLED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION SYMBOL-RECYCLED-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'SYMBOL-RECYCLED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYMBOL-RECYCLED-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 61) 22890 '(SYM RECYCLE) NIL))
(PROGN (SYSTEM:PUT 'ENSURE-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-SYMBOL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 62) 22890 '(NAME PACKAGE INTERN RECYCLE SHADOWED IMPORTED INHERITED 
EXPORTED) NIL))
(PROCLAIM '(FTYPE (FUNCTION (T T T &OPTIONAL T) T) ENSURE-EXPORTED))
(PROGN (SYSTEM:PUT 'ENSURE-EXPORTED-TO-USER 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-EXPORTED-TO-USER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-EXPORTED-TO-USER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-EXPORTED-TO-USER 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 63) 22890 '(NAME SYMBOL TO-PACKAGE 
&OPTIONAL RECYCLE) NIL))
(PROGN (SYSTEM:PUT 'ENSURE-EXPORTED 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-EXPORTED) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-EXPORTED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-EXPORTED (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 64) 22890 '(NAME SYMBOL FROM-PACKAGE &OPTIONAL RECYCLE) NIL))
(PROGN (SYSTEM:PUT 'ENSURE-EXPORT 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-EXPORT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-EXPORT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-EXPORT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 65) 22890 '(NAME FROM-PACKAGE &OPTIONAL RECYCLE) NIL))
(PROGN (SYSTEM:PUT 'INSTALL-PACKAGE-LOCAL-NICKNAMES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
INSTALL-PACKAGE-LOCAL-NICKNAMES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
22890) (GET 'INSTALL-PACKAGE-LOCAL-NICKNAMES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'INSTALL-PACKAGE-LOCAL-NICKNAMES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
66) 22890 '(DESTINATION-PACKAGE NEW-NICKNAMES) NIL))
(PROGN (SYSTEM:PUT 'ENSURE-PACKAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-PACKAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 22890) (GET 
'ENSURE-PACKAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-PACKAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 67) 22890 '(NAME &KEY NICKNAMES DOCUMENTATION USE SHADOW SHADOWING-IMPORT-FROM 
IMPORT-FROM EXPORT INTERN RECYCLE MIX REEXPORT UNINTERN LOCAL-NICKNAMES) NIL))
(PROGN (SYSTEM:PUT 'PARSE-DEFINE-PACKAGE-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PARSE-DEFINE-PACKAGE-FORM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
42387) (GET 'PARSE-DEFINE-PACKAGE-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-DEFINE-PACKAGE-FORM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 70) 42387 '(PACKAGE CLAUSES) NIL))
(PROGN (SYSTEM:PUT 'DEFINE-PACKAGE 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
44906) (GET 'DEFINE-PACKAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFINE-PACKAGE (SYSTEM:MAKE-MACRO 
'DEFINE-PACKAGE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 71)) 44906 '(PACKAGE 
&REST CLAUSES) "DEFINE-PACKAGE takes a PACKAGE and a number of CLAUSES, of the form
(KEYWORD . ARGS).
DEFINE-PACKAGE supports the following keywords:
USE, SHADOW, SHADOWING-IMPORT-FROM, IMPORT-FROM, EXPORT, INTERN, NICKNAMES,
DOCUMENTATION -- as per CL:DEFPACKAGE.
RECYCLE -- Recycle the package's exported symbols from the specified packages,
in order.  For every symbol scheduled to be exported by the DEFINE-PACKAGE,
either through an :EXPORT option or a :REEXPORT option, if the symbol exists in
one of the :RECYCLE packages, the first such symbol is re-homed to the package
being defined.
For the sake of idempotence, it is important that the package being defined
should appear in first position if it already exists, and even if it doesn't,
ahead of any package that is not going to be deleted afterwards and never
created again. In short, except for special cases, always make it the first
package on the list if the list is not empty.
MIX -- Takes a list of package designators.  MIX behaves like
(:USE PKG1 PKG2 ... PKGn) but additionally uses :SHADOWING-IMPORT-FROM to
resolve conflicts in favor of the first found symbol.  It may still yield
an error if there is a conflict with an explicitly :IMPORT-FROM symbol.
REEXPORT -- Takes a list of package designators.  For each package, p, in the list,
export symbols with the same name as those exported from p.  Note that in the case
of shadowing, etc. the symbols with the same name may not be the same symbols.
UNINTERN -- Remove symbols here from PACKAGE.
LOCAL-NICKNAMES -- If the host implementation supports package local nicknames
(check for the :PACKAGE-LOCAL-NICKNAMES feature), then this should be a list of
nickname and package name pairs.  Using this option will cause an error if the
host CL implementation does not support it.
USE-REEXPORT, MIX-REEXPORT -- Use or mix the specified packages as per the USE or
MIX directives, and reexport their contents as per the REEXPORT directive."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 72))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 73))
(SYSTEM:%IN-PACKAGE "UIOP/COMMON-LISP")
(PROGN (SYSTEM:PUT 'FROB-SUBSTRINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION FROB-SUBSTRINGS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 55104) (GET 
'FROB-SUBSTRINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FROB-SUBSTRINGS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 74) 55104 '(STRING SUBSTRINGS &OPTIONAL FROB) "for each substring in SUBSTRINGS, find occurrences of it within STRING
that don't use parts of matched occurrences of previous strings, and
FROB them, that is to say, remove them if FROB is NIL,
replace by FROB if FROB is a STRING, or if FROB is a FUNCTION,
call FROB with the match and a function that emits a string in the output.
Return a string made of the parts not omitted or emitted by FROB."))
(PROGN (SYSTEM:PUT 'COMPATFMT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
55104) (GET 'COMPATFMT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPATFMT (SYSTEM:MAKE-MACRO 
'COMPATFMT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 78)) 55104 '(FORMAT) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 79))
(SYSTEM:%IN-PACKAGE "UIOP/UTILITY")
(PROGN (SYSTEM:PUT 'ENSURE-FUNCTION-NOTINLINE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENSURE-FUNCTION-NOTINLINE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
59892) (GET 'ENSURE-FUNCTION-NOTINLINE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-FUNCTION-NOTINLINE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 80) 59892 '(DEFINITION &AUX (NAME 
(SECOND DEFINITION))) NIL))
(PROGN (SYSTEM:PUT 'WITH-UPGRADABILITY 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
59892) (GET 'WITH-UPGRADABILITY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-UPGRADABILITY 
(SYSTEM:MAKE-MACRO 'WITH-UPGRADABILITY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
81)) 59892 '((&OPTIONAL) &BODY BODY) "Evaluate BODY at compile- load- and run- times, with DEFUN and DEFGENERIC modified
to also declare the functions NOTINLINE and to accept a wrapping the function name
specification into a list with keyword argument SUPERSEDE (which defaults to T if the name
is not wrapped, and NIL if it is wrapped). If SUPERSEDE is true, call UNDEFINE-FUNCTION
to supersede any previous definition."))
(PROGN (SYSTEM:PUT '*UIOP-DEBUG-UTILITY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
62876) (GET '*UIOP-DEBUG-UTILITY* 'SYSTEM::SOURCE NIL))) (DEFVAR *UIOP-DEBUG-UTILITY* 
'(SYMBOL-CALL :UIOP :SUBPATHNAME (SYMBOL-CALL :UIOP :UIOP-DIRECTORY) "contrib/debug.lisp") 
"form that evaluates to the pathname to your favorite debugging utilities"))
(PROGN (SYSTEM:PUT 'UIOP-DEBUG 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
62876) (GET 'UIOP-DEBUG 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UIOP-DEBUG (SYSTEM:MAKE-MACRO 
'UIOP-DEBUG (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 82)) 62876 '(&REST KEYS) 
"Load the UIOP debug utility at compile-time as well as runtime"))
(PROCLAIM '(NOTINLINE LOAD-UIOP-DEBUG-UTILITY))
(PROGN (SYSTEM:PUT 'LOAD-UIOP-DEBUG-UTILITY 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-UIOP-DEBUG-UTILITY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 62876) (GET 
'LOAD-UIOP-DEBUG-UTILITY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-UIOP-DEBUG-UTILITY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 83) 62876 '(&KEY PACKAGE UTILITY-FILE) 
"Load the UIOP debug utility in given PACKAGE (default *PACKAGE*).
Beware: The utility is located by EVAL'uating the UTILITY-FILE form (default *UIOP-DEBUG-UTILITY*)."))
(PROGN (SYSTEM:PUT 'NEST 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
64079) (GET 'NEST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NEST (SYSTEM:MAKE-MACRO 'NEST 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 86)) 64079 '(&REST THINGS) "Macro to keep code nesting and indentation under control."))
(PROGN (SYSTEM:PUT 'IF-LET 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
64079) (GET 'IF-LET 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'IF-LET (SYSTEM:MAKE-MACRO 
'IF-LET (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 88)) 64079 '(BINDINGS &BODY 
(THEN-FORM &OPTIONAL ELSE-FORM)) NIL))
(PROCLAIM '(NOTINLINE PARSE-BODY))
(PROGN (SYSTEM:PUT 'PARSE-BODY 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-BODY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
64795) (GET 'PARSE-BODY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-BODY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 89) 64795 '(BODY &KEY DOCUMENTATION WHOLE) "Parses BODY into (values remaining-forms declarations doc-string).
Documentation strings are recognized only if DOCUMENTATION is true.
Syntax errors in body are signalled and WHOLE is used in the signal
arguments when given."))
(PROGN (SYSTEM:PUT 'WHILE-COLLECTING 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
65697) (GET 'WHILE-COLLECTING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WHILE-COLLECTING 
(SYSTEM:MAKE-MACRO 'WHILE-COLLECTING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
90)) 65697 '((&REST COLLECTORS) &BODY BODY) "COLLECTORS should be a list of names for collections.  A collector
defines a function that, when applied to an argument inside BODY, will
add its argument to the corresponding collection.  Returns multiple values,
a list for each collection, in order.
   E.g.,
(while-collecting (foo bar)
           (dolist (x '((a 1) (b 2) (c 3)))
             (foo (first x))
             (bar (second x))))
Returns two values: (A B C) and (1 2 3)."))
(PROGN (SYSTEM:PUT 'APPENDF 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
65697) (GET 'APPENDF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'APPENDF (SYSTEM:MAKE-MACRO 
'APPENDF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 94)) 65697 '(#102? &REST 
ARGS &ENVIRONMENT #103?) "Append onto list"))
(PROCLAIM '(NOTINLINE LENGTH=N-P))
(PROGN (SYSTEM:PUT 'LENGTH=N-P 'SYSTEM::SOURCE (CONS '((:FUNCTION LENGTH=N-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
65697) (GET 'LENGTH=N-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LENGTH=N-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 95) 65697 '(X N) NIL))
(PROCLAIM '(NOTINLINE ENSURE-LIST))
(PROGN (SYSTEM:PUT 'ENSURE-LIST 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-LIST) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
65697) (GET 'ENSURE-LIST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-LIST (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 96) 65697 '(X) NIL))
(PROCLAIM '(NOTINLINE REMOVE-PLIST-KEY))
(PROGN (SYSTEM:PUT 'REMOVE-PLIST-KEY 'SYSTEM::SOURCE (CONS '((:FUNCTION REMOVE-PLIST-KEY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 67069) (GET 
'REMOVE-PLIST-KEY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REMOVE-PLIST-KEY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 97) 67069 '(KEY PLIST) "Remove a single key from a plist"))
(PROCLAIM '(NOTINLINE REMOVE-PLIST-KEYS))
(PROGN (SYSTEM:PUT 'REMOVE-PLIST-KEYS 'SYSTEM::SOURCE (CONS '((:FUNCTION REMOVE-PLIST-KEYS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 67069) (GET 
'REMOVE-PLIST-KEYS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REMOVE-PLIST-KEYS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 98) 67069 '(KEYS PLIST) "Remove a list of keys from a plist"))
(PROCLAIM '(NOTINLINE EMPTYP))
(PROGN (SYSTEM:PUT 'EMPTYP 'SYSTEM::SOURCE (CONS '((:FUNCTION EMPTYP) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
67532) (GET 'EMPTYP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EMPTYP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 99) 67532 '(X) "Predicate that is true for an empty sequence"))
(PROGN (SYSTEM:PUT '+CHARACTER-TYPES+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
67699) (GET '+CHARACTER-TYPES+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +CHARACTER-TYPES+ 
#(CHARACTER)))
(PROGN (SYSTEM:PUT '+MAX-CHARACTER-TYPE-INDEX+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 67699) (GET 
'+MAX-CHARACTER-TYPE-INDEX+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +MAX-CHARACTER-TYPE-INDEX+ 
(1- (LENGTH +CHARACTER-TYPES+))))
(PROGN (SYSTEM:PUT '+NON-BASE-CHARS-EXIST-P+ 'SYSTEM::SOURCE (CONS '(+NON-BASE-CHARS-EXIST-P+ 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 67699) (GET 
'+NON-BASE-CHARS-EXIST-P+ 'SYSTEM::SOURCE NIL))) (DEFCONSTANT +NON-BASE-CHARS-EXIST-P+ 
(PLUSP +MAX-CHARACTER-TYPE-INDEX+)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 100))
(PROCLAIM '(NOTINLINE CHARACTER-TYPE-INDEX))
(PROGN (SYSTEM:PUT 'CHARACTER-TYPE-INDEX 'SYSTEM::SOURCE (CONS '((:FUNCTION CHARACTER-TYPE-INDEX) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 68828) (GET 
'CHARACTER-TYPE-INDEX 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHARACTER-TYPE-INDEX (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 101) 68828 '(X) NIL))
(PROCLAIM '(NOTINLINE BASE-STRING-P))
(PROGN (SYSTEM:PUT 'BASE-STRING-P 'SYSTEM::SOURCE (CONS '((:FUNCTION BASE-STRING-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 69412) (GET 
'BASE-STRING-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'BASE-STRING-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 102) 69412 '(STRING) "Does the STRING only contain BASE-CHARs?"))
(PROCLAIM '(NOTINLINE STRINGS-COMMON-ELEMENT-TYPE))
(PROGN (SYSTEM:PUT 'STRINGS-COMMON-ELEMENT-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
STRINGS-COMMON-ELEMENT-TYPE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET 'STRINGS-COMMON-ELEMENT-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STRINGS-COMMON-ELEMENT-TYPE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 103) 69412 '(STRINGS) "What least subtype of CHARACTER can contain all the elements of all the STRINGS?"))
(PROCLAIM '(NOTINLINE REDUCE/STRCAT))
(PROGN (SYSTEM:PUT 'REDUCE/STRCAT 'SYSTEM::SOURCE (CONS '((:FUNCTION REDUCE/STRCAT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 69412) (GET 
'REDUCE/STRCAT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REDUCE/STRCAT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 104) 69412 '(STRINGS &KEY KEY START END) "Reduce a list as if by STRCAT, accepting KEY START and END keywords like REDUCE.
NIL is interpreted as an empty string. A character is interpreted as a string of length one."))
(PROCLAIM '(NOTINLINE STRCAT))
(PROGN (SYSTEM:PUT 'STRCAT 'SYSTEM::SOURCE (CONS '((:FUNCTION STRCAT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET 'STRCAT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STRCAT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 105) 69412 '(&REST STRINGS) "Concatenate strings.
NIL is interpreted as an empty string, a character as a string of length one."))
(PROCLAIM '(NOTINLINE FIRST-CHAR))
(PROGN (SYSTEM:PUT 'FIRST-CHAR 'SYSTEM::SOURCE (CONS '((:FUNCTION FIRST-CHAR) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET 'FIRST-CHAR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIRST-CHAR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 106) 69412 '(S) "Return the first character of a non-empty string S, or NIL"))
(PROCLAIM '(NOTINLINE LAST-CHAR))
(PROGN (SYSTEM:PUT 'LAST-CHAR 'SYSTEM::SOURCE (CONS '((:FUNCTION LAST-CHAR) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET 'LAST-CHAR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LAST-CHAR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 107) 69412 '(S) "Return the last character of a non-empty string S, or NIL"))
(PROCLAIM '(NOTINLINE SPLIT-STRING))
(PROGN (SYSTEM:PUT 'SPLIT-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION SPLIT-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 69412) (GET 
'SPLIT-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SPLIT-STRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 108) 69412 '(STRING &KEY MAX (SEPARATOR '(#\  #\Tab))) "Split STRING into a list of components separated by
any of the characters in the sequence SEPARATOR.
If MAX is specified, then no more than max(1,MAX) components will be returned,
starting the separation from the end, e.g. when called with arguments
 \"a.b.c.d.e\" :max 3 :separator \".\" it will return (\"a.b.c\" \"d\" \"e\")."))
(PROCLAIM '(NOTINLINE STRING-PREFIX-P))
(PROGN (SYSTEM:PUT 'STRING-PREFIX-P 'SYSTEM::SOURCE (CONS '((:FUNCTION STRING-PREFIX-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 69412) (GET 
'STRING-PREFIX-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STRING-PREFIX-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 111) 69412 '(PREFIX STRING) "Does STRING begin with PREFIX?"))
(PROCLAIM '(NOTINLINE STRING-SUFFIX-P))
(PROGN (SYSTEM:PUT 'STRING-SUFFIX-P 'SYSTEM::SOURCE (CONS '((:FUNCTION STRING-SUFFIX-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 69412) (GET 
'STRING-SUFFIX-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STRING-SUFFIX-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 112) 69412 '(STRING SUFFIX) "Does STRING end with SUFFIX?"))
(PROCLAIM '(NOTINLINE STRING-ENCLOSED-P))
(PROGN (SYSTEM:PUT 'STRING-ENCLOSED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION STRING-ENCLOSED-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 69412) (GET 
'STRING-ENCLOSED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STRING-ENCLOSED-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 113) 69412 '(PREFIX STRING SUFFIX) "Does STRING begin with PREFIX and end with SUFFIX?"))
(PROGN (SYSTEM:PUT '+CR+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET '+CR+ 'SYSTEM::SOURCE NIL))) (DEFVAR +CR+ (COERCE #(#\Return) 'STRING)))
(PROGN (SYSTEM:PUT '+LF+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET '+LF+ 'SYSTEM::SOURCE NIL))) (DEFVAR +LF+ (COERCE #(#\Newline) 'STRING)))
(PROGN (SYSTEM:PUT '+CRLF+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET '+CRLF+ 'SYSTEM::SOURCE NIL))) (DEFVAR +CRLF+ (COERCE #(#\Return #\Newline) 
'STRING)))
(PROCLAIM '(NOTINLINE STRIPLN))
(PROGN (SYSTEM:PUT 'STRIPLN 'SYSTEM::SOURCE (CONS '((:FUNCTION STRIPLN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET 'STRIPLN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STRIPLN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 114) 69412 '(X) "Strip a string X from any ending CR, LF or CRLF.
Return two values, the stripped string and the ending that was stripped,
or the original value and NIL if no stripping took place.
Since our STRCAT accepts NIL as empty string designator,
the two results passed to STRCAT always reconstitute the original string"))
(PROCLAIM '(NOTINLINE STANDARD-CASE-SYMBOL-NAME))
(PROGN (SYSTEM:PUT 'STANDARD-CASE-SYMBOL-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
STANDARD-CASE-SYMBOL-NAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET 'STANDARD-CASE-SYMBOL-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STANDARD-CASE-SYMBOL-NAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 116) 69412 '(NAME-DESIGNATOR) "Given a NAME-DESIGNATOR for a symbol, if it is a symbol, convert it to a string using STRING;
if it is a string, use STRING-UPCASE on an ANSI CL platform, or STRING on a so-called \"modern\"
platform such as Allegro with modern syntax."))
(PROCLAIM '(NOTINLINE FIND-STANDARD-CASE-SYMBOL))
(PROGN (SYSTEM:PUT 'FIND-STANDARD-CASE-SYMBOL 'SYSTEM::SOURCE (CONS '((:FUNCTION 
FIND-STANDARD-CASE-SYMBOL) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
69412) (GET 'FIND-STANDARD-CASE-SYMBOL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIND-STANDARD-CASE-SYMBOL 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 117) 69412 '(NAME-DESIGNATOR PACKAGE-DESIGNATOR 
&OPTIONAL (ERROR T)) "Find a symbol designated by NAME-DESIGNATOR in a package designated by PACKAGE-DESIGNATOR,
where STANDARD-CASE-SYMBOL-NAME is used to transform them if these designators are strings.
If optional ERROR argument is NIL, return NIL instead of an error when the symbol is not found."))
(PROGN (SYSTEM:PUT 'TIMESTAMP 'SYSTEM::SOURCE (CONS '(TIMESTAMP "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
76032) (GET 'TIMESTAMP 'SYSTEM::SOURCE NIL))) (DEFTYPE TIMESTAMP NIL '(OR REAL BOOLEAN)))
(PROCLAIM '(NOTINLINE TIMESTAMP<))
(PROGN (SYSTEM:PUT 'TIMESTAMP< 'SYSTEM::SOURCE (CONS '((:FUNCTION TIMESTAMP<) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
76214) (GET 'TIMESTAMP< 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TIMESTAMP< (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 118) 76214 '(X Y) NIL))
(PROCLAIM '(NOTINLINE TIMESTAMPS<))
(PROGN (SYSTEM:PUT 'TIMESTAMPS< 'SYSTEM::SOURCE (CONS '((:FUNCTION TIMESTAMPS<) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
76214) (GET 'TIMESTAMPS< 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TIMESTAMPS< (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 119) 76214 '(LIST) NIL))
(PROCLAIM '(NOTINLINE TIMESTAMP*<))
(PROGN (SYSTEM:PUT 'TIMESTAMP*< 'SYSTEM::SOURCE (CONS '((:FUNCTION TIMESTAMP*<) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
76214) (GET 'TIMESTAMP*< 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TIMESTAMP*< (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 120) 76214 '(&REST LIST) NIL))
(PROCLAIM '(NOTINLINE TIMESTAMP<=))
(PROGN (SYSTEM:PUT 'TIMESTAMP<= 'SYSTEM::SOURCE (CONS '((:FUNCTION TIMESTAMP<=) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
76214) (GET 'TIMESTAMP<= 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TIMESTAMP<= (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 121) 76214 '(X Y) NIL))
(PROCLAIM '(NOTINLINE EARLIER-TIMESTAMP))
(PROGN (SYSTEM:PUT 'EARLIER-TIMESTAMP 'SYSTEM::SOURCE (CONS '((:FUNCTION EARLIER-TIMESTAMP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 76214) (GET 
'EARLIER-TIMESTAMP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EARLIER-TIMESTAMP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 122) 76214 '(X Y) NIL))
(PROCLAIM '(NOTINLINE TIMESTAMPS-EARLIEST))
(PROGN (SYSTEM:PUT 'TIMESTAMPS-EARLIEST 'SYSTEM::SOURCE (CONS '((:FUNCTION TIMESTAMPS-EARLIEST) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 76214) (GET 
'TIMESTAMPS-EARLIEST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TIMESTAMPS-EARLIEST (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 123) 76214 '(LIST) NIL))
(PROCLAIM '(NOTINLINE EARLIEST-TIMESTAMP))
(PROGN (SYSTEM:PUT 'EARLIEST-TIMESTAMP 'SYSTEM::SOURCE (CONS '((:FUNCTION EARLIEST-TIMESTAMP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 76214) (GET 
'EARLIEST-TIMESTAMP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EARLIEST-TIMESTAMP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 124) 76214 '(&REST LIST) NIL))
(PROCLAIM '(NOTINLINE LATER-TIMESTAMP))
(PROGN (SYSTEM:PUT 'LATER-TIMESTAMP 'SYSTEM::SOURCE (CONS '((:FUNCTION LATER-TIMESTAMP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 76214) (GET 
'LATER-TIMESTAMP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LATER-TIMESTAMP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 125) 76214 '(X Y) NIL))
(PROCLAIM '(NOTINLINE TIMESTAMPS-LATEST))
(PROGN (SYSTEM:PUT 'TIMESTAMPS-LATEST 'SYSTEM::SOURCE (CONS '((:FUNCTION TIMESTAMPS-LATEST) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 76214) (GET 
'TIMESTAMPS-LATEST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TIMESTAMPS-LATEST (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 126) 76214 '(LIST) NIL))
(PROCLAIM '(NOTINLINE LATEST-TIMESTAMP))
(PROGN (SYSTEM:PUT 'LATEST-TIMESTAMP 'SYSTEM::SOURCE (CONS '((:FUNCTION LATEST-TIMESTAMP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 76214) (GET 
'LATEST-TIMESTAMP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LATEST-TIMESTAMP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 127) 76214 '(&REST LIST) NIL))
(PROGN (SYSTEM:PUT 'LATEST-TIMESTAMP-F 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
76214) (GET 'LATEST-TIMESTAMP-F 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LATEST-TIMESTAMP-F 
(SYSTEM:MAKE-MACRO 'LATEST-TIMESTAMP-F (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
128)) 76214 '(#106? &REST TIMESTAMPS &ENVIRONMENT #107?) NIL))
(PROCLAIM '(NOTINLINE ENSURE-FUNCTION))
(PROGN (SYSTEM:PUT 'ENSURE-FUNCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-FUNCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 77145) (GET 
'ENSURE-FUNCTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 129) 77145 '(FUN &KEY (PACKAGE :CL)) "Coerce the object FUN into a function.

If FUN is a FUNCTION, return it.
If the FUN is a non-sequence literal constant, return constantly that,
i.e. for a boolean keyword character number or pathname.
Otherwise if FUN is a non-literally constant symbol, return its FDEFINITION.
If FUN is a CONS, return the function that applies its CAR
to the appended list of the rest of its CDR and the arguments,
unless the CAR is LAMBDA, in which case the expression is evaluated.
If FUN is a string, READ a form from it in the specified PACKAGE (default: CL)
and EVAL that in a (FUNCTION ...) context."))
(PROCLAIM '(NOTINLINE ACCESS-AT))
(PROGN (SYSTEM:PUT 'ACCESS-AT 'SYSTEM::SOURCE (CONS '((:FUNCTION ACCESS-AT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
77145) (GET 'ACCESS-AT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACCESS-AT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 133) 77145 '(OBJECT AT) "Given an OBJECT and an AT specifier, list of successive accessors,
call each accessor on the result of the previous calls.
An accessor may be an integer, meaning a call to ELT,
a keyword, meaning a call to GETF,
NIL, meaning identity,
a function or other symbol, meaning itself,
or a list of a function designator and arguments, interpreted as per ENSURE-FUNCTION.
As a degenerate case, the AT specifier may be an atom of a single such accessor
instead of a list."))
(PROCLAIM '(NOTINLINE ACCESS-AT-COUNT))
(PROGN (SYSTEM:PUT 'ACCESS-AT-COUNT 'SYSTEM::SOURCE (CONS '((:FUNCTION ACCESS-AT-COUNT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 77145) (GET 
'ACCESS-AT-COUNT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACCESS-AT-COUNT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 135) 77145 '(AT) "From an AT specification, extract a COUNT of maximum number
of sub-objects to read as per ACCESS-AT"))
(PROCLAIM '(NOTINLINE CALL-FUNCTION))
(PROGN (SYSTEM:PUT 'CALL-FUNCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-FUNCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 77145) (GET 
'CALL-FUNCTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 136) 77145 '(FUNCTION-SPEC &REST ARGUMENTS) "Call the function designated by FUNCTION-SPEC as per ENSURE-FUNCTION,
with the given ARGUMENTS"))
(PROCLAIM '(NOTINLINE CALL-FUNCTIONS))
(PROGN (SYSTEM:PUT 'CALL-FUNCTIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-FUNCTIONS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 77145) (GET 
'CALL-FUNCTIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-FUNCTIONS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 137) 77145 '(FUNCTION-SPECS) "For each function in the list FUNCTION-SPECS, in order, call the function as per CALL-FUNCTION"))
(PROCLAIM '(NOTINLINE REGISTER-HOOK-FUNCTION))
(PROGN (SYSTEM:PUT 'REGISTER-HOOK-FUNCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTER-HOOK-FUNCTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 77145) (GET 
'REGISTER-HOOK-FUNCTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-HOOK-FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 138) 77145 '(VARIABLE HOOK &OPTIONAL 
CALL-NOW-P) "Push the HOOK function (a designator as per ENSURE-FUNCTION) onto the hook VARIABLE.
When CALL-NOW-P is true, also call the function immediately."))
(PROCLAIM '(NOTINLINE COERCE-CLASS))
(PROGN (SYSTEM:PUT 'COERCE-CLASS 'SYSTEM::SOURCE (CONS '((:FUNCTION COERCE-CLASS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 80375) (GET 
'COERCE-CLASS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COERCE-CLASS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 139) 80375 '(CLASS &KEY (PACKAGE :CL) (SUPER T) (ERROR 'ERROR)) 
"Coerce CLASS to a class that is subclass of SUPER if specified,
or invoke ERROR handler as per CALL-FUNCTION.

A keyword designates the name a symbol, which when found in either PACKAGE, designates a class.
-- for backward compatibility, *PACKAGE* is also accepted for now, but this may go in the future.
A string is read as a symbol while in PACKAGE, the symbol designates a class.

A class object designates itself.
NIL designates itself (no class).
A symbol otherwise designates a class by name."))
(PROCLAIM '(NOTINLINE ENSURE-GETHASH))
(PROGN (SYSTEM:PUT 'ENSURE-GETHASH 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-GETHASH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 81996) (GET 
'ENSURE-GETHASH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-GETHASH (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 140) 81996 '(KEY TABLE DEFAULT) "Lookup the TABLE for a KEY as by GETHASH, but if not present,
call the (possibly constant) function designated by DEFAULT as per CALL-FUNCTION,
set the corresponding entry to the result in the table.
Return two values: the entry after its optional computation, and whether it was found"))
(PROCLAIM '(NOTINLINE LIST-TO-HASH-SET))
(PROGN (SYSTEM:PUT 'LIST-TO-HASH-SET 'SYSTEM::SOURCE (CONS '((:FUNCTION LIST-TO-HASH-SET) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 81996) (GET 
'LIST-TO-HASH-SET 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LIST-TO-HASH-SET (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 141) 81996 '(LIST &AUX (H (MAKE-HASH-TABLE :TEST 'EQUAL))) "Convert a LIST into hash-table that has the same elements when viewed as a set,
up to the given equality TEST"))
(PROCLAIM '(NOTINLINE LEXICOGRAPHIC<))
(PROGN (SYSTEM:PUT 'LEXICOGRAPHIC< 'SYSTEM::SOURCE (CONS '((:FUNCTION LEXICOGRAPHIC<) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 82801) (GET 
'LEXICOGRAPHIC< 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LEXICOGRAPHIC< (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 142) 82801 '(ELEMENT< X Y) "Lexicographically compare two lists of using the function element< to compare elements.
element< is a strict total order; the resulting order on X and Y will also be strict."))
(PROCLAIM '(NOTINLINE LEXICOGRAPHIC<=))
(PROGN (SYSTEM:PUT 'LEXICOGRAPHIC<= 'SYSTEM::SOURCE (CONS '((:FUNCTION LEXICOGRAPHIC<=) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 82801) (GET 
'LEXICOGRAPHIC<= 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LEXICOGRAPHIC<= (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 143) 82801 '(ELEMENT< X Y) "Lexicographically compare two lists of using the function element< to compare elements.
element< is a strict total order; the resulting order on X and Y will be a non-strict total order."))
(SYSTEM:PUT 'SIMPLE-STYLE-WARNING 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
83576) (GET 'SIMPLE-STYLE-WARNING 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'SIMPLE-STYLE-WARNING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
83576) (GET 'SIMPLE-STYLE-WARNING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 144))
(PROCLAIM '(NOTINLINE STYLE-WARN))
(PROGN (SYSTEM:PUT 'STYLE-WARN 'SYSTEM::SOURCE (CONS '((:FUNCTION STYLE-WARN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
83576) (GET 'STYLE-WARN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STYLE-WARN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 145) 83576 '(DATUM &REST ARGUMENTS) NIL))
(PROGN (SYSTEM:PUT '+SIMPLE-CONDITION-FORMAT-CONTROL-SLOT+ 'SYSTEM::SOURCE (CONS 
(LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
84077) (GET '+SIMPLE-CONDITION-FORMAT-CONTROL-SLOT+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER 
+SIMPLE-CONDITION-FORMAT-CONTROL-SLOT+ 'SYSTEM::FORMAT-CONTROL "Name of the slot for FORMAT-CONTROL in simple-condition"))
(PROCLAIM '(NOTINLINE MATCH-CONDITION-P))
(PROGN (SYSTEM:PUT 'MATCH-CONDITION-P 'SYSTEM::SOURCE (CONS '((:FUNCTION MATCH-CONDITION-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 84077) (GET 
'MATCH-CONDITION-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MATCH-CONDITION-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 146) 84077 '(X CONDITION) "Compare received CONDITION to some pattern X:
a symbol naming a condition class,
a simple vector of length 2, arguments to find-symbol* with result as above,
or a string describing the format-control of a simple-condition."))
(PROCLAIM '(NOTINLINE MATCH-ANY-CONDITION-P))
(PROGN (SYSTEM:PUT 'MATCH-ANY-CONDITION-P 'SYSTEM::SOURCE (CONS '((:FUNCTION MATCH-ANY-CONDITION-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 84077) (GET 
'MATCH-ANY-CONDITION-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MATCH-ANY-CONDITION-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 149) 84077 '(CONDITION CONDITIONS) 
"match CONDITION against any of the patterns of CONDITIONS supplied"))
(PROCLAIM '(NOTINLINE CALL-WITH-MUFFLED-CONDITIONS))
(PROGN (SYSTEM:PUT 'CALL-WITH-MUFFLED-CONDITIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-MUFFLED-CONDITIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
84077) (GET 'CALL-WITH-MUFFLED-CONDITIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-MUFFLED-CONDITIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 150) 84077 '(THUNK CONDITIONS) "calls the THUNK in a context where the CONDITIONS are muffled"))
(PROGN (SYSTEM:PUT 'WITH-MUFFLED-CONDITIONS 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
84077) (GET 'WITH-MUFFLED-CONDITIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-MUFFLED-CONDITIONS 
(SYSTEM:MAKE-MACRO 'WITH-MUFFLED-CONDITIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
152)) 84077 '((CONDITIONS) &BODY BODY) "Shorthand syntax for CALL-WITH-MUFFLED-CONDITIONS"))
(SYSTEM:PUT 'NOT-IMPLEMENTED-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
86183) (GET 'NOT-IMPLEMENTED-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'NOT-IMPLEMENTED-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
86183) (GET 'NOT-IMPLEMENTED-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 153))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (NOT-IMPLEMENTED-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 86183) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NOT-IMPLEMENTED-ERROR 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 154))
(PROCLAIM '(NOTINLINE NOT-IMPLEMENTED-ERROR))
(PROGN (SYSTEM:PUT 'NOT-IMPLEMENTED-ERROR 'SYSTEM::SOURCE (CONS '((:FUNCTION NOT-IMPLEMENTED-ERROR) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 86183) (GET 
'NOT-IMPLEMENTED-ERROR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NOT-IMPLEMENTED-ERROR 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 160) 86183 '(FUNCTIONALITY &OPTIONAL 
FORMAT-CONTROL &REST FORMAT-ARGUMENTS) "Signal an error because some FUNCTIONALITY is not implemented in the current version
of the software on the current platform; it may or may not be implemented in different combinations
of version of the software and of the underlying platform. Optionally, report a formatted error
message."))
(SYSTEM:PUT 'PARAMETER-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
86183) (GET 'PARAMETER-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'PARAMETER-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
86183) (GET 'PARAMETER-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 161))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (PARAMETER-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 86183) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PARAMETER-ERROR 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 162))
(PROCLAIM '(NOTINLINE PARAMETER-ERROR))
(PROGN (SYSTEM:PUT 'PARAMETER-ERROR 'SYSTEM::SOURCE (CONS '((:FUNCTION PARAMETER-ERROR) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 86183) (GET 
'PARAMETER-ERROR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARAMETER-ERROR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 166) 86183 '(FORMAT-CONTROL FUNCTIONALITY &REST FORMAT-ARGUMENTS) 
"Signal an error because some FUNCTIONALITY or its specific implementation on a given underlying
platform does not accept a given parameter or combination of parameters. Report a formatted error
message, that takes the functionality as its first argument (that can be skipped with ~*)."))
(PROCLAIM '(NOTINLINE BOOLEAN-TO-FEATURE-EXPRESSION))
(PROGN (SYSTEM:PUT 'BOOLEAN-TO-FEATURE-EXPRESSION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
BOOLEAN-TO-FEATURE-EXPRESSION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
88583) (GET 'BOOLEAN-TO-FEATURE-EXPRESSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'BOOLEAN-TO-FEATURE-EXPRESSION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 167) 88583 '(VALUE) "Converts a boolean VALUE to a form suitable for testing with #+."))
(PROCLAIM '(NOTINLINE SYMBOL-TEST-TO-FEATURE-EXPRESSION))
(PROGN (SYSTEM:PUT 'SYMBOL-TEST-TO-FEATURE-EXPRESSION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYMBOL-TEST-TO-FEATURE-EXPRESSION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
88583) (GET 'SYMBOL-TEST-TO-FEATURE-EXPRESSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYMBOL-TEST-TO-FEATURE-EXPRESSION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
168) 88583 '(NAME PACKAGE) "Check if a symbol with a given NAME exists in PACKAGE and returns a
form suitable for testing with #+."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 169))
(SYSTEM:%IN-PACKAGE "UIOP/VERSION")
(PROGN (SYSTEM:PUT '*UIOP-VERSION* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
89622) (GET '*UIOP-VERSION* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *UIOP-VERSION* (MAKE-ARRAY 
'(7) :ELEMENT-TYPE 'CHARACTER :INITIAL-CONTENTS '(#\3 #\. #\3 #\. #\5 #\. #\7))))
(PROCLAIM '(NOTINLINE UNPARSE-VERSION))
(PROGN (SYSTEM:PUT 'UNPARSE-VERSION 'SYSTEM::SOURCE (CONS '((:FUNCTION UNPARSE-VERSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 89622) (GET 
'UNPARSE-VERSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNPARSE-VERSION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 170) 89622 '(VERSION-LIST) "From a parsed version (a list of natural numbers), compute the version string"))
(PROCLAIM '(NOTINLINE PARSE-VERSION))
(PROGN (SYSTEM:PUT 'PARSE-VERSION 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-VERSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 89622) (GET 
'PARSE-VERSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-VERSION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 172) 89622 '(VERSION-STRING &OPTIONAL ON-ERROR) "Parse a VERSION-STRING as a series of natural numbers separated by dots.
Return a (non-null) list of integers if the string is valid;
otherwise return NIL.

When invalid, ON-ERROR is called as per CALL-FUNCTION before to return NIL,
with format arguments explaining why the version is invalid.
ON-ERROR is also called if the version is not canonical
in that it doesn't print back to itself, but the list is returned anyway."))
(PROCLAIM '(NOTINLINE NEXT-VERSION))
(PROGN (SYSTEM:PUT 'NEXT-VERSION 'SYSTEM::SOURCE (CONS '((:FUNCTION NEXT-VERSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 89622) (GET 
'NEXT-VERSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NEXT-VERSION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 173) 89622 '(VERSION) "When VERSION is not nil, it is a string, then parse it as a version, compute the next version
and return it as a string."))
(PROCLAIM '(NOTINLINE VERSION<))
(PROGN (SYSTEM:PUT 'VERSION< 'SYSTEM::SOURCE (CONS '((:FUNCTION VERSION<) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
89622) (GET 'VERSION< 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VERSION< (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 174) 89622 '(VERSION1 VERSION2) "Given two version strings, return T if the second is strictly newer"))
(PROCLAIM '(NOTINLINE VERSION<=))
(PROGN (SYSTEM:PUT 'VERSION<= 'SYSTEM::SOURCE (CONS '((:FUNCTION VERSION<=) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
89622) (GET 'VERSION<= 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VERSION<= (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 175) 89622 '(VERSION1 VERSION2) "Given two version strings, return T if the second is newer or the same"))
(PROGN (SYSTEM:PUT 'VERSION= 'SYSTEM::SOURCE (CONS '((:FUNCTION VERSION=) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
91998) (GET 'VERSION= 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VERSION= (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 176) 91998 '(VERSION1 VERSION2) "Given two version strings, return T if the first is newer or the same and
the second is also newer or the same."))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-CONDITION 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-CONDITION 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-CONDITION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-CONDITION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 177))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-STYLE-WARNING 'SYSTEM::SOURCE (CONS '(:CONDITION 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 92235) (GET 
'DEPRECATED-FUNCTION-STYLE-WARNING 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-STYLE-WARNING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-STYLE-WARNING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 178))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-WARNING 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-WARNING 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-WARNING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-WARNING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 179))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 180))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-SHOULD-BE-DELETED 'SYSTEM::SOURCE (CONS '(:CONDITION 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 92235) (GET 
'DEPRECATED-FUNCTION-SHOULD-BE-DELETED 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DEPRECATED-FUNCTION-SHOULD-BE-DELETED 'SYSTEM::SOURCE (CONS '(:CLASS 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 92235) (GET 
'DEPRECATED-FUNCTION-SHOULD-BE-DELETED 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 181))
(PROCLAIM '(NOTINLINE DEPRECATED-FUNCTION-CONDITION-KIND))
(PROGN (SYSTEM:PUT 'DEPRECATED-FUNCTION-CONDITION-KIND 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DEPRECATED-FUNCTION-CONDITION-KIND) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'DEPRECATED-FUNCTION-CONDITION-KIND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'DEPRECATED-FUNCTION-CONDITION-KIND (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
182) 92235 '(TYPE) NIL))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (DEPRECATED-FUNCTION-CONDITION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 92235) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DEPRECATED-FUNCTION-CONDITION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 183) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 188))
(PROCLAIM '(NOTINLINE NOTIFY-DEPRECATED-FUNCTION))
(PROGN (SYSTEM:PUT 'NOTIFY-DEPRECATED-FUNCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
NOTIFY-DEPRECATED-FUNCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'NOTIFY-DEPRECATED-FUNCTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NOTIFY-DEPRECATED-FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 193) 92235 '(STATUS NAME) NIL))
(PROCLAIM '(NOTINLINE VERSION-DEPRECATION))
(PROGN (SYSTEM:PUT 'VERSION-DEPRECATION 'SYSTEM::SOURCE (CONS '((:FUNCTION VERSION-DEPRECATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 92235) (GET 
'VERSION-DEPRECATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VERSION-DEPRECATION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 194) 92235 '(VERSION &KEY (STYLE-WARNING NIL) (WARNING (NEXT-VERSION 
STYLE-WARNING)) (ERROR (NEXT-VERSION WARNING)) (DELETE (NEXT-VERSION ERROR))) "Given a VERSION string, and the starting versions for notifying the programmer of
various levels of deprecation, return the current level of deprecation as per WITH-DEPRECATION
that is the highest level that has a declared version older than the specified version.
Each start version for a level of deprecation can be specified by a keyword argument, or
if left unspecified, will be the NEXT-VERSION of the immediate lower level of deprecation."))
(PROGN (SYSTEM:PUT 'WITH-DEPRECATION 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
92235) (GET 'WITH-DEPRECATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-DEPRECATION 
(SYSTEM:MAKE-MACRO 'WITH-DEPRECATION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
195)) 92235 '((LEVEL) &BODY DEFINITIONS) "Given a deprecation LEVEL (a form to be EVAL'ed at macro-expansion time), instrument the
DEFUN and DEFMETHOD forms in DEFINITIONS to notify the programmer of the deprecation of the function
when it is compiled or called.

Increasing levels (as result from evaluating LEVEL) are: NIL (not deprecated yet),
:STYLE-WARNING (a style warning is issued when used), :WARNING (a full warning is issued when used),
:ERROR (a continuable error instead), and :DELETE (it's an error if the code is still there while
at that level).

Forms other than DEFUN and DEFMETHOD are not instrumented, and you can protect a DEFUN or DEFMETHOD
from instrumentation by enclosing it in a PROGN."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 199))
(SYSTEM:%IN-PACKAGE "UIOP/OS")
(PROCLAIM '(NOTINLINE FEATUREP))
(PROGN (SYSTEM:PUT 'FEATUREP 'SYSTEM::SOURCE (CONS '((:FUNCTION FEATUREP) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'FEATUREP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FEATUREP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 200) 99386 '(X &OPTIONAL (*FEATURES* *FEATURES*)) "Checks whether a feature expression X is true with respect to the *FEATURES* set,
as per the CLHS standard for #+ and #-. Beware that just like the CLHS,
we assume symbols from the KEYWORD package are used, but that unless you're using #+/#-
your reader will not have magically used the KEYWORD package, so you need specify
keywords explicitly."))
(PROCLAIM '(NOTINLINE OS-MACOSX-P))
(PROGN (SYSTEM:PUT 'OS-MACOSX-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OS-MACOSX-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'OS-MACOSX-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-MACOSX-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 201) 99386 'NIL "Is the underlying operating system MacOS X?"))
(PROCLAIM '(NOTINLINE OS-UNIX-P))
(PROGN (SYSTEM:PUT 'OS-UNIX-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OS-UNIX-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'OS-UNIX-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-UNIX-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 202) 99386 'NIL "Is the underlying operating system some Unix variant?"))
(PROCLAIM '(NOTINLINE OS-WINDOWS-P))
(PROGN (SYSTEM:PUT 'OS-WINDOWS-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OS-WINDOWS-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 99386) (GET 
'OS-WINDOWS-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-WINDOWS-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 203) 99386 'NIL "Is the underlying operating system Microsoft Windows?"))
(PROCLAIM '(NOTINLINE OS-GENERA-P))
(PROGN (SYSTEM:PUT 'OS-GENERA-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OS-GENERA-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'OS-GENERA-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-GENERA-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 204) 99386 'NIL "Is the underlying operating system Genera (running on a Symbolics Lisp Machine)?"))
(PROCLAIM '(NOTINLINE OS-OLDMAC-P))
(PROGN (SYSTEM:PUT 'OS-OLDMAC-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OS-OLDMAC-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'OS-OLDMAC-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-OLDMAC-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 205) 99386 'NIL "Is the underlying operating system an (emulated?) MacOS 9 or earlier?"))
(PROCLAIM '(NOTINLINE OS-HAIKU-P))
(PROGN (SYSTEM:PUT 'OS-HAIKU-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OS-HAIKU-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'OS-HAIKU-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-HAIKU-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 206) 99386 'NIL "Is the underlying operating system Haiku?"))
(PROCLAIM '(NOTINLINE OS-MEZZANO-P))
(PROGN (SYSTEM:PUT 'OS-MEZZANO-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OS-MEZZANO-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 99386) (GET 
'OS-MEZZANO-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-MEZZANO-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 207) 99386 'NIL "Is the underlying operating system Mezzano?"))
(PROCLAIM '(NOTINLINE DETECT-OS))
(PROGN (SYSTEM:PUT 'DETECT-OS 'SYSTEM::SOURCE (CONS '((:FUNCTION DETECT-OS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'DETECT-OS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DETECT-OS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 208) 99386 'NIL "Detects the current operating system. Only needs be run at compile-time,
except on ABCL where it might change between FASL compilation and runtime."))
(PROGN (SYSTEM:PUT 'OS-COND 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
99386) (GET 'OS-COND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OS-COND (SYSTEM:MAKE-MACRO 
'OS-COND (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 209)) 99386 '(&REST CLAUSES) 
NIL))
(DETECT-OS)
(PROCLAIM '(NOTINLINE GETENV))
(PROGN (SYSTEM:PUT 'GETENV 'SYSTEM::SOURCE (CONS '((:FUNCTION GETENV) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
102525) (GET 'GETENV 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GETENV (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 210) 102525 '(X) "Query the environment, as in C getenv.
Beware: may return empty string if a variable is present but empty;
use getenvp to return NIL in such a case."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 211))
(PROCLAIM '(NOTINLINE GETENVP))
(PROGN (SYSTEM:PUT 'GETENVP 'SYSTEM::SOURCE (CONS '((:FUNCTION GETENVP) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
102525) (GET 'GETENVP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GETENVP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 214) 102525 '(X) "Predicate that is true if the named variable is present in the libc environment,
then returning the non-empty string value of the variable"))
(PROCLAIM '(NOTINLINE FIRST-FEATURE))
(PROGN (SYSTEM:PUT 'FIRST-FEATURE 'SYSTEM::SOURCE (CONS '((:FUNCTION FIRST-FEATURE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 104851) (GET 
'FIRST-FEATURE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIRST-FEATURE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 215) 104851 '(FEATURE-SETS) "A helper for various feature detection functions"))
(PROCLAIM '(NOTINLINE IMPLEMENTATION-TYPE))
(PROGN (SYSTEM:PUT 'IMPLEMENTATION-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION IMPLEMENTATION-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 104851) (GET 
'IMPLEMENTATION-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'IMPLEMENTATION-TYPE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 216) 104851 'NIL "The type of Lisp implementation used, as a short UIOP-standardized keyword"))
(PROGN (SYSTEM:PUT '*IMPLEMENTATION-TYPE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
104851) (GET '*IMPLEMENTATION-TYPE* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMPLEMENTATION-TYPE* 
(IMPLEMENTATION-TYPE) "The type of Lisp implementation used, as a short UIOP-standardized keyword"))
(PROCLAIM '(NOTINLINE OPERATING-SYSTEM))
(PROGN (SYSTEM:PUT 'OPERATING-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION OPERATING-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 104851) (GET 
'OPERATING-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OPERATING-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 217) 104851 'NIL "The operating system of the current host"))
(PROCLAIM '(NOTINLINE ARCHITECTURE))
(PROGN (SYSTEM:PUT 'ARCHITECTURE 'SYSTEM::SOURCE (CONS '((:FUNCTION ARCHITECTURE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 104851) (GET 
'ARCHITECTURE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ARCHITECTURE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 218) 104851 'NIL "The CPU architecture of the current host"))
(PROCLAIM '(NOTINLINE LISP-VERSION-STRING))
(PROGN (SYSTEM:PUT 'LISP-VERSION-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION LISP-VERSION-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 104851) (GET 
'LISP-VERSION-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LISP-VERSION-STRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 219) 104851 'NIL "return a string that identifies the current Lisp implementation version"))
(PROCLAIM '(NOTINLINE IMPLEMENTATION-IDENTIFIER))
(PROGN (SYSTEM:PUT 'IMPLEMENTATION-IDENTIFIER 'SYSTEM::SOURCE (CONS '((:FUNCTION 
IMPLEMENTATION-IDENTIFIER) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
104851) (GET 'IMPLEMENTATION-IDENTIFIER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'IMPLEMENTATION-IDENTIFIER 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 221) 104851 'NIL "Return a string that identifies the ABI of the current implementation,
suitable for use as a directory name to segregate Lisp FASLs, C dynamic libraries, etc."))
(PROCLAIM '(NOTINLINE HOSTNAME))
(PROGN (SYSTEM:PUT 'HOSTNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION HOSTNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
110422) (GET 'HOSTNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'HOSTNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 224) 110422 'NIL "return the hostname of the current host"))
(PROCLAIM '(NOTINLINE GETCWD))
(PROGN (SYSTEM:PUT 'GETCWD 'SYSTEM::SOURCE (CONS '((:FUNCTION GETCWD) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
110875) (GET 'GETCWD 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GETCWD (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 225) 110875 'NIL "Get the current working directory as per POSIX getcwd(3), as a pathname object"))
(PROCLAIM '(NOTINLINE CHDIR))
(PROGN (SYSTEM:PUT 'CHDIR 'SYSTEM::SOURCE (CONS '((:FUNCTION CHDIR) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
110875) (GET 'CHDIR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHDIR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 226) 110875 '(X) "Change current directory, as per POSIX chdir(2), to a given pathname object"))
(PROGN (SYSTEM:PUT '*LINK-INITIAL-DWORD* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
113259) (GET '*LINK-INITIAL-DWORD* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *LINK-INITIAL-DWORD* 
76))
(PROGN (SYSTEM:PUT '*LINK-GUID* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
113259) (GET '*LINK-GUID* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *LINK-GUID* #(1 20
 2 0 0 0 0 0 192 0 0 0 0 0 0 70)))
(PROCLAIM '(NOTINLINE READ-NULL-TERMINATED-STRING))
(PROGN (SYSTEM:PUT 'READ-NULL-TERMINATED-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION 
READ-NULL-TERMINATED-STRING) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
113259) (GET 'READ-NULL-TERMINATED-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'READ-NULL-TERMINATED-STRING 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 227) 113259 '(S) "Read a null-terminated string from an octet stream S"))
(PROCLAIM '(NOTINLINE READ-LITTLE-ENDIAN))
(PROGN (SYSTEM:PUT 'READ-LITTLE-ENDIAN 'SYSTEM::SOURCE (CONS '((:FUNCTION READ-LITTLE-ENDIAN) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 113259) (GET 
'READ-LITTLE-ENDIAN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'READ-LITTLE-ENDIAN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 228) 113259 '(S &OPTIONAL (BYTES 4)) "Read a number in little-endian format from an byte (octet) stream S,
the number having BYTES octets (defaulting to 4)."))
(PROCLAIM '(NOTINLINE PARSE-FILE-LOCATION-INFO))
(PROGN (SYSTEM:PUT 'PARSE-FILE-LOCATION-INFO 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-FILE-LOCATION-INFO) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 113259) (GET 
'PARSE-FILE-LOCATION-INFO 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-FILE-LOCATION-INFO 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 229) 113259 '(S) "helper to parse-windows-shortcut"))
(PROCLAIM '(NOTINLINE PARSE-WINDOWS-SHORTCUT))
(PROGN (SYSTEM:PUT 'PARSE-WINDOWS-SHORTCUT 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-WINDOWS-SHORTCUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 113259) (GET 
'PARSE-WINDOWS-SHORTCUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-WINDOWS-SHORTCUT 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 230) 113259 '(PATHNAME) "From a .lnk windows shortcut, extract the pathname linked to"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 232))
(SYSTEM:%IN-PACKAGE "UIOP/PATHNAME")
(PROCLAIM '(NOTINLINE NORMALIZE-PATHNAME-DIRECTORY-COMPONENT))
(PROGN (SYSTEM:PUT 'NORMALIZE-PATHNAME-DIRECTORY-COMPONENT 'SYSTEM::SOURCE (CONS 
'((:FUNCTION NORMALIZE-PATHNAME-DIRECTORY-COMPONENT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
118903) (GET 'NORMALIZE-PATHNAME-DIRECTORY-COMPONENT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'NORMALIZE-PATHNAME-DIRECTORY-COMPONENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
233) 118903 '(DIRECTORY) "Convert the DIRECTORY component from a format usable by the underlying
implementation's MAKE-PATHNAME and other primitives to a CLHS-standard format
that is a list and not a string."))
(PROCLAIM '(NOTINLINE DENORMALIZE-PATHNAME-DIRECTORY-COMPONENT))
(PROGN (SYSTEM:PUT 'DENORMALIZE-PATHNAME-DIRECTORY-COMPONENT 'SYSTEM::SOURCE (CONS 
'((:FUNCTION DENORMALIZE-PATHNAME-DIRECTORY-COMPONENT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
118903) (GET 'DENORMALIZE-PATHNAME-DIRECTORY-COMPONENT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'DENORMALIZE-PATHNAME-DIRECTORY-COMPONENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
234) 118903 '(DIRECTORY-COMPONENT) "Convert the DIRECTORY-COMPONENT from a CLHS-standard format to a format usable
by the underlying implementation's MAKE-PATHNAME and other primitives"))
(PROCLAIM '(NOTINLINE MERGE-PATHNAME-DIRECTORY-COMPONENTS))
(PROGN (SYSTEM:PUT 'MERGE-PATHNAME-DIRECTORY-COMPONENTS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
MERGE-PATHNAME-DIRECTORY-COMPONENTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
118903) (GET 'MERGE-PATHNAME-DIRECTORY-COMPONENTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'MERGE-PATHNAME-DIRECTORY-COMPONENTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
235) 118903 '(SPECIFIED DEFAULTS) "Helper for MERGE-PATHNAMES* that handles directory components"))
(PROGN (SYSTEM:PUT '*UNSPECIFIC-PATHNAME-TYPE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'*UNSPECIFIC-PATHNAME-TYPE* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *UNSPECIFIC-PATHNAME-TYPE* 
:UNSPECIFIC "Unspecific type component to use with the underlying implementation's MAKE-PATHNAME"))
(PROCLAIM '(NOTINLINE MAKE-PATHNAME*))
(PROGN (SYSTEM:PUT 'MAKE-PATHNAME* 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-PATHNAME*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'MAKE-PATHNAME* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-PATHNAME* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 236) 118903 '(&REST KEYS &KEY DIRECTORY HOST DEVICE NAME TYPE 
VERSION DEFAULTS) "Takes arguments like CL:MAKE-PATHNAME in the CLHS, and
   tries hard to make a pathname that will actually behave as documented,
   despite the peculiarities of each implementation. DEPRECATED: just use MAKE-PATHNAME."))
(PROCLAIM '(NOTINLINE MAKE-PATHNAME-COMPONENT-LOGICAL))
(PROGN (SYSTEM:PUT 'MAKE-PATHNAME-COMPONENT-LOGICAL 'SYSTEM::SOURCE (CONS '((:FUNCTION 
MAKE-PATHNAME-COMPONENT-LOGICAL) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
118903) (GET 'MAKE-PATHNAME-COMPONENT-LOGICAL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'MAKE-PATHNAME-COMPONENT-LOGICAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
237) 118903 '(X) "Make a pathname component suitable for use in a logical-pathname"))
(PROCLAIM '(NOTINLINE MAKE-PATHNAME-LOGICAL))
(PROGN (SYSTEM:PUT 'MAKE-PATHNAME-LOGICAL 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-PATHNAME-LOGICAL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'MAKE-PATHNAME-LOGICAL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-PATHNAME-LOGICAL 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 238) 118903 '(PATHNAME HOST) "Take a PATHNAME's directory, name, type and version components,
and make a new pathname with corresponding components and specified logical HOST"))
(PROCLAIM '(NOTINLINE MERGE-PATHNAMES*))
(PROGN (SYSTEM:PUT 'MERGE-PATHNAMES* 'SYSTEM::SOURCE (CONS '((:FUNCTION MERGE-PATHNAMES*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'MERGE-PATHNAMES* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MERGE-PATHNAMES* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 239) 118903 '(SPECIFIED &OPTIONAL (DEFAULTS *DEFAULT-PATHNAME-DEFAULTS*)) 
"MERGE-PATHNAMES* is like MERGE-PATHNAMES except that
if the SPECIFIED pathname does not have an absolute directory,
then the HOST and DEVICE both come from the DEFAULTS, whereas
if the SPECIFIED pathname does have an absolute directory,
then the HOST and DEVICE both come from the SPECIFIED pathname.
This is what users want on a modern Unix or Windows operating system,
unlike the MERGE-PATHNAMES behavior.
Also, if either argument is NIL, then the other argument is returned unmodified;
this is unlike MERGE-PATHNAMES which always merges with a pathname,
by default *DEFAULT-PATHNAME-DEFAULTS*, which cannot be NIL."))
(PROCLAIM '(NOTINLINE LOGICAL-PATHNAME-P))
(PROGN (SYSTEM:PUT 'LOGICAL-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION LOGICAL-PATHNAME-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'LOGICAL-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOGICAL-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 241) 118903 '(X) "is X a logical-pathname?"))
(PROCLAIM '(NOTINLINE PHYSICAL-PATHNAME-P))
(PROGN (SYSTEM:PUT 'PHYSICAL-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION PHYSICAL-PATHNAME-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'PHYSICAL-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PHYSICAL-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 242) 118903 '(X) "is X a pathname that is not a logical-pathname?"))
(PROCLAIM '(NOTINLINE PHYSICALIZE-PATHNAME))
(PROGN (SYSTEM:PUT 'PHYSICALIZE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION PHYSICALIZE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'PHYSICALIZE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PHYSICALIZE-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 243) 118903 '(X) "if X is a logical pathname, use translate-logical-pathname on it."))
(PROCLAIM '(NOTINLINE NIL-PATHNAME))
(PROGN (SYSTEM:PUT 'NIL-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION NIL-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 118903) (GET 
'NIL-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NIL-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 244) 118903 '(&OPTIONAL (DEFAULTS *DEFAULT-PATHNAME-DEFAULTS*)) 
"A pathname that is as neutral as possible for use as defaults
when merging, making or parsing pathnames"))
(PROGN (SYSTEM:PUT '*NIL-PATHNAME* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
118903) (GET '*NIL-PATHNAME* 'SYSTEM::SOURCE NIL))) (DEFVAR *NIL-PATHNAME* (NIL-PATHNAME 
(PHYSICALIZE-PATHNAME (USER-HOMEDIR-PATHNAME))) "A pathname that is as neutral as possible for use as defaults
when merging, making or parsing pathnames"))
(PROGN (SYSTEM:PUT 'WITH-PATHNAME-DEFAULTS 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
118903) (GET 'WITH-PATHNAME-DEFAULTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-PATHNAME-DEFAULTS 
(SYSTEM:MAKE-MACRO 'WITH-PATHNAME-DEFAULTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
245)) 118903 '((&OPTIONAL DEFAULTS) &BODY BODY) "Execute BODY in a context where the *DEFAULT-PATHNAME-DEFAULTS* is as specified,
where leaving the defaults NIL or unspecified means a (NIL-PATHNAME), except
on ABCL, Genera and XCL, where it remains unchanged for it doubles as current-directory."))
(PROCLAIM '(NOTINLINE PATHNAME-EQUAL))
(PROGN (SYSTEM:PUT 'PATHNAME-EQUAL 'SYSTEM::SOURCE (CONS '((:FUNCTION PATHNAME-EQUAL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 127544) (GET 
'PATHNAME-EQUAL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PATHNAME-EQUAL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 246) 127544 '(P1 P2) "Are the two pathnames P1 and P2 reasonably equal in the paths they denote?"))
(PROCLAIM '(NOTINLINE ABSOLUTE-PATHNAME-P))
(PROGN (SYSTEM:PUT 'ABSOLUTE-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION ABSOLUTE-PATHNAME-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 127544) (GET 
'ABSOLUTE-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ABSOLUTE-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 248) 127544 '(PATHSPEC) "If PATHSPEC is a pathname or namestring object that parses as a pathname
possessing an :ABSOLUTE directory component, return the (parsed) pathname.
Otherwise return NIL"))
(PROCLAIM '(NOTINLINE RELATIVE-PATHNAME-P))
(PROGN (SYSTEM:PUT 'RELATIVE-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION RELATIVE-PATHNAME-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 127544) (GET 
'RELATIVE-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RELATIVE-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 249) 127544 '(PATHSPEC) "If PATHSPEC is a pathname or namestring object that parses as a pathname
possessing a :RELATIVE or NIL directory component, return the (parsed) pathname.
Otherwise return NIL"))
(PROCLAIM '(NOTINLINE HIDDEN-PATHNAME-P))
(PROGN (SYSTEM:PUT 'HIDDEN-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION HIDDEN-PATHNAME-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 127544) (GET 
'HIDDEN-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'HIDDEN-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 250) 127544 '(PATHNAME) "Return a boolean that is true if the pathname is hidden as per Unix style,
i.e. its name starts with a dot."))
(PROCLAIM '(NOTINLINE FILE-PATHNAME-P))
(PROGN (SYSTEM:PUT 'FILE-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION FILE-PATHNAME-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 127544) (GET 
'FILE-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FILE-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 251) 127544 '(PATHNAME) "Does PATHNAME represent a file, i.e. has a non-null NAME component?

Accepts NIL, a string (converted through PARSE-NAMESTRING) or a PATHNAME.

Note that this does _not_ check to see that PATHNAME points to an
actually-existing file.

Returns the (parsed) PATHNAME when true"))
(PROCLAIM '(NOTINLINE PATHNAME-DIRECTORY-PATHNAME))
(PROGN (SYSTEM:PUT 'PATHNAME-DIRECTORY-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PATHNAME-DIRECTORY-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
130521) (GET 'PATHNAME-DIRECTORY-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PATHNAME-DIRECTORY-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 252) 130521 '(PATHNAME) "Returns a new pathname with same HOST, DEVICE, DIRECTORY as PATHNAME,
and NIL NAME, TYPE and VERSION components"))
(PROCLAIM '(NOTINLINE PATHNAME-PARENT-DIRECTORY-PATHNAME))
(PROGN (SYSTEM:PUT 'PATHNAME-PARENT-DIRECTORY-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PATHNAME-PARENT-DIRECTORY-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
130521) (GET 'PATHNAME-PARENT-DIRECTORY-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'PATHNAME-PARENT-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
253) 130521 '(PATHNAME) "Returns a new pathname that corresponds to the parent of the current pathname's directory,
i.e. removing one level of depth in the DIRECTORY component. e.g. if pathname is
Unix pathname /foo/bar/baz/file.type then return /foo/bar/"))
(PROCLAIM '(NOTINLINE DIRECTORY-PATHNAME-P))
(PROGN (SYSTEM:PUT 'DIRECTORY-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION DIRECTORY-PATHNAME-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 130521) (GET 
'DIRECTORY-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECTORY-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 254) 130521 '(PATHNAME) "Does PATHNAME represent a directory?

A directory-pathname is a pathname _without_ a filename. The three
ways that the filename components can be missing are for it to be NIL,
:UNSPECIFIC or the empty string.

Note that this does _not_ check to see that PATHNAME points to an
actually-existing directory."))
(PROCLAIM '(NOTINLINE ENSURE-DIRECTORY-PATHNAME))
(PROGN (SYSTEM:PUT 'ENSURE-DIRECTORY-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENSURE-DIRECTORY-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
130521) (GET 'ENSURE-DIRECTORY-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-DIRECTORY-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 256) 130521 '(PATHSPEC &OPTIONAL 
(ON-ERROR 'ERROR)) "Converts the non-wild pathname designator PATHSPEC to directory form."))
(PROCLAIM '(FTYPE FUNCTION ENSURE-PATHNAME))
(PROCLAIM '(NOTINLINE SPLIT-UNIX-NAMESTRING-DIRECTORY-COMPONENTS))
(PROGN (SYSTEM:PUT 'SPLIT-UNIX-NAMESTRING-DIRECTORY-COMPONENTS 'SYSTEM::SOURCE (CONS 
'((:FUNCTION SPLIT-UNIX-NAMESTRING-DIRECTORY-COMPONENTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
134031) (GET 'SPLIT-UNIX-NAMESTRING-DIRECTORY-COMPONENTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SPLIT-UNIX-NAMESTRING-DIRECTORY-COMPONENTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
258) 134031 '(UNIX-NAMESTRING &KEY ENSURE-DIRECTORY DOT-DOT) "Splits the path string UNIX-NAMESTRING, returning four values:
A flag that is either :absolute or :relative, indicating
   how the rest of the values are to be interpreted.
A directory path --- a list of strings and keywords, suitable for
   use with MAKE-PATHNAME when prepended with the flag value.
   Directory components with an empty name or the name . are removed.
   Any directory named .. is read as DOT-DOT, or :BACK if it's NIL (not :UP).
A last-component, either a file-namestring including type extension,
   or NIL in the case of a directory pathname.
A flag that is true iff the unix-style-pathname was just
   a file-namestring without / path specification.
ENSURE-DIRECTORY forces the namestring to be interpreted as a directory pathname:
the third return value will be NIL, and final component of the namestring
will be treated as part of the directory path.

An empty string is thus read as meaning a pathname object with all fields nil.

Note that colon characters #: will NOT be interpreted as host specification.
Absolute pathnames are only appropriate on Unix-style systems.

The intention of this function is to support structured component names,
e.g., (:file \"foo/bar\"), which will be unpacked to relative pathnames."))
(PROCLAIM '(NOTINLINE SPLIT-NAME-TYPE))
(PROGN (SYSTEM:PUT 'SPLIT-NAME-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION SPLIT-NAME-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 134031) (GET 
'SPLIT-NAME-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SPLIT-NAME-TYPE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 260) 134031 '(FILENAME) "Split a filename into two values NAME and TYPE that are returned.
We assume filename has no directory component.
The last . if any separates name and type from from type,
except that if there is only one . and it is in first position,
the whole filename is the NAME with an empty type.
NAME is always a string.
For an empty type, *UNSPECIFIC-PATHNAME-TYPE* is returned."))
(PROCLAIM '(NOTINLINE PARSE-UNIX-NAMESTRING))
(PROGN (SYSTEM:PUT 'PARSE-UNIX-NAMESTRING 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-UNIX-NAMESTRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 134031) (GET 
'PARSE-UNIX-NAMESTRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-UNIX-NAMESTRING 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 261) 134031 '(NAME &REST KEYS &KEY 
TYPE DEFAULTS DOT-DOT ENSURE-DIRECTORY &ALLOW-OTHER-KEYS) "Coerce NAME into a PATHNAME using standard Unix syntax.

Unix syntax is used whether or not the underlying system is Unix;
on such non-Unix systems it is reliably usable only for relative pathnames.
This function is especially useful to manipulate relative pathnames portably,
where it is crucial to possess a portable pathname syntax independent of the underlying OS.
This is what PARSE-UNIX-NAMESTRING provides, and why we use it in ASDF.

When given a PATHNAME object, just return it untouched.
When given NIL, just return NIL.
When given a non-null SYMBOL, first downcase its name and treat it as a string.
When given a STRING, portably decompose it into a pathname as below.

#\\/ separates directory components.

The last #\\/-separated substring is interpreted as follows:
1- If TYPE is :DIRECTORY or ENSURE-DIRECTORY is true,
 the string is made the last directory component, and NAME and TYPE are NIL.
 if the string is empty, it's the empty pathname with all slots NIL.
2- If TYPE is NIL, the substring is a file-namestring, and its NAME and TYPE
 are separated by SPLIT-NAME-TYPE.
3- If TYPE is a string, it is the given TYPE, and the whole string is the NAME.

Directory components with an empty name or the name \".\" are removed.
Any directory named \"..\" is read as DOT-DOT,
which must be one of :BACK or :UP and defaults to :BACK.

HOST, DEVICE and VERSION components are taken from DEFAULTS,
which itself defaults to *NIL-PATHNAME*, also used if DEFAULTS is NIL.
No host or device can be specified in the string itself,
which makes it unsuitable for absolute pathnames outside Unix.

For relative pathnames, these components (and hence the defaults) won't matter
if you use MERGE-PATHNAMES* but will matter if you use MERGE-PATHNAMES,
which is an important reason to always use MERGE-PATHNAMES*.

Arbitrary keys are accepted, and the parse result is passed to ENSURE-PATHNAME
with those keys, removing TYPE DEFAULTS and DOT-DOT.
When you're manipulating pathnames that are supposed to make sense portably
even though the OS may not be Unixish, we recommend you use :WANT-RELATIVE T
to throw an error if the pathname is absolute"))
(PROCLAIM '(NOTINLINE UNIX-NAMESTRING))
(PROGN (SYSTEM:PUT 'UNIX-NAMESTRING 'SYSTEM::SOURCE (CONS '((:FUNCTION UNIX-NAMESTRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 134031) (GET 
'UNIX-NAMESTRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNIX-NAMESTRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 262) 134031 '(PATHNAME) "Given a non-wild PATHNAME, return a Unix-style namestring for it.
If the PATHNAME is NIL or a STRING, return it unchanged.

This only considers the DIRECTORY, NAME and TYPE components of the pathname.
This is a portable solution for representing relative pathnames,
But unless you are running on a Unix system, it is not a general solution
to representing native pathnames.

An error is signaled if the argument is not NULL, a STRING or a PATHNAME,
or if it is a PATHNAME but some of its components are not recognized."))
(PROCLAIM '(NOTINLINE SUBPATHNAME))
(PROGN (SYSTEM:PUT 'SUBPATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION SUBPATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
143674) (GET 'SUBPATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SUBPATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 266) 143674 '(PATHNAME SUBPATH &KEY TYPE) "This function takes a PATHNAME and a SUBPATH and a TYPE.
If SUBPATH is already a PATHNAME object (not namestring),
and is an absolute pathname at that, it is returned unchanged;
otherwise, SUBPATH is turned into a relative pathname with given TYPE
as per PARSE-UNIX-NAMESTRING with :WANT-RELATIVE T :TYPE TYPE,
then it is merged with the PATHNAME-DIRECTORY-PATHNAME of PATHNAME."))
(PROCLAIM '(NOTINLINE SUBPATHNAME*))
(PROGN (SYSTEM:PUT 'SUBPATHNAME* 'SYSTEM::SOURCE (CONS '((:FUNCTION SUBPATHNAME*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 143674) (GET 
'SUBPATHNAME* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SUBPATHNAME* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 267) 143674 '(PATHNAME SUBPATH &KEY TYPE) "returns NIL if the base pathname is NIL, otherwise like SUBPATHNAME."))
(PROCLAIM '(NOTINLINE PATHNAME-ROOT))
(PROGN (SYSTEM:PUT 'PATHNAME-ROOT 'SYSTEM::SOURCE (CONS '((:FUNCTION PATHNAME-ROOT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 143674) (GET 
'PATHNAME-ROOT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PATHNAME-ROOT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 268) 143674 '(PATHNAME) "return the root directory for the host and device of given PATHNAME"))
(PROCLAIM '(NOTINLINE PATHNAME-HOST-PATHNAME))
(PROGN (SYSTEM:PUT 'PATHNAME-HOST-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION PATHNAME-HOST-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 143674) (GET 
'PATHNAME-HOST-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PATHNAME-HOST-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 269) 143674 '(PATHNAME) "return a pathname with the same host as given PATHNAME, and all other fields NIL"))
(PROCLAIM '(NOTINLINE ENSURE-ABSOLUTE-PATHNAME))
(PROGN (SYSTEM:PUT 'ENSURE-ABSOLUTE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-ABSOLUTE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 143674) (GET 
'ENSURE-ABSOLUTE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-ABSOLUTE-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 270) 143674 '(PATH &OPTIONAL DEFAULTS 
(ON-ERROR 'ERROR)) "Given a pathname designator PATH, return an absolute pathname as specified by PATH
considering the DEFAULTS, or, if not possible, use CALL-FUNCTION on the specified ON-ERROR behavior,
with a format control-string and other arguments as arguments"))
(PROCLAIM '(NOTINLINE SUBPATHP))
(PROGN (SYSTEM:PUT 'SUBPATHP 'SYSTEM::SOURCE (CONS '((:FUNCTION SUBPATHP) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
143674) (GET 'SUBPATHP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SUBPATHP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 271) 143674 '(MAYBE-SUBPATH BASE-PATHNAME) "if MAYBE-SUBPATH is a pathname that is under BASE-PATHNAME, return a pathname object that
when used with MERGE-PATHNAMES* with defaults BASE-PATHNAME, returns MAYBE-SUBPATH."))
(PROCLAIM '(NOTINLINE ENOUGH-PATHNAME))
(PROGN (SYSTEM:PUT 'ENOUGH-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION ENOUGH-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 143674) (GET 
'ENOUGH-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENOUGH-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 272) 143674 '(MAYBE-SUBPATH BASE-PATHNAME) "if MAYBE-SUBPATH is a pathname that is under BASE-PATHNAME, return a pathname object that
when used with MERGE-PATHNAMES* with defaults BASE-PATHNAME, returns MAYBE-SUBPATH."))
(PROCLAIM '(NOTINLINE CALL-WITH-ENOUGH-PATHNAME))
(PROGN (SYSTEM:PUT 'CALL-WITH-ENOUGH-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-ENOUGH-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
143674) (GET 'CALL-WITH-ENOUGH-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-ENOUGH-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 273) 143674 '(MAYBE-SUBPATH DEFAULTS-PATHNAME 
THUNK) "In a context where *DEFAULT-PATHNAME-DEFAULTS* is bound to DEFAULTS-PATHNAME (if not null,
or else to its current value), call THUNK with ENOUGH-PATHNAME for MAYBE-SUBPATH
given DEFAULTS-PATHNAME as a base pathname."))
(PROGN (SYSTEM:PUT 'WITH-ENOUGH-PATHNAME 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
143674) (GET 'WITH-ENOUGH-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-ENOUGH-PATHNAME 
(SYSTEM:MAKE-MACRO 'WITH-ENOUGH-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
274)) 143674 '((PATHNAME-VAR &KEY (PATHNAME PATHNAME-VAR) (DEFAULTS *DEFAULT-PATHNAME-DEFAULTS*)) 
&BODY BODY) "Shorthand syntax for CALL-WITH-ENOUGH-PATHNAME"))
(PROGN (SYSTEM:PUT '*WILD* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
148780) (GET '*WILD* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD* (OR :WILD) "Wild component for use with MAKE-PATHNAME"))
(PROGN (SYSTEM:PUT '*WILD-DIRECTORY-COMPONENT* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 148780) (GET 
'*WILD-DIRECTORY-COMPONENT* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-DIRECTORY-COMPONENT* 
(OR :WILD) "Wild directory component for use with MAKE-PATHNAME"))
(PROGN (SYSTEM:PUT '*WILD-INFERIORS-COMPONENT* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 148780) (GET 
'*WILD-INFERIORS-COMPONENT* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-INFERIORS-COMPONENT* 
(OR :WILD-INFERIORS) "Wild-inferiors directory component for use with MAKE-PATHNAME"))
(PROGN (SYSTEM:PUT '*WILD-FILE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
148780) (GET '*WILD-FILE* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-FILE* (MAKE-PATHNAME 
:DIRECTORY NIL :NAME *WILD* :TYPE *WILD* :VERSION (OR)) "A pathname object with wildcards for matching any file with TRANSLATE-PATHNAME"))
(PROGN (SYSTEM:PUT '*WILD-FILE-FOR-DIRECTORY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 148780) (GET 
'*WILD-FILE-FOR-DIRECTORY* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-FILE-FOR-DIRECTORY* 
(MAKE-PATHNAME :DIRECTORY NIL :NAME *WILD* :TYPE (OR *WILD*) :VERSION (OR)) "A pathname object with wildcards for matching any file with DIRECTORY"))
(PROGN (SYSTEM:PUT '*WILD-DIRECTORY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
148780) (GET '*WILD-DIRECTORY* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-DIRECTORY* 
(MAKE-PATHNAME :DIRECTORY (SYSTEM::BACKQ-LIST ':RELATIVE *WILD-DIRECTORY-COMPONENT*) 
:NAME NIL :TYPE NIL :VERSION NIL) "A pathname object with wildcards for matching any subdirectory"))
(PROGN (SYSTEM:PUT '*WILD-INFERIORS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
148780) (GET '*WILD-INFERIORS* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-INFERIORS* 
(MAKE-PATHNAME :DIRECTORY (SYSTEM::BACKQ-LIST ':RELATIVE *WILD-INFERIORS-COMPONENT*) 
:NAME NIL :TYPE NIL :VERSION NIL) "A pathname object with wildcards for matching any recursive subdirectory"))
(PROGN (SYSTEM:PUT '*WILD-PATH* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
148780) (GET '*WILD-PATH* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-PATH* (MERGE-PATHNAMES* 
*WILD-FILE* *WILD-INFERIORS*) "A pathname object with wildcards for matching any file in any recursive subdirectory"))
(PROCLAIM '(NOTINLINE WILDEN))
(PROGN (SYSTEM:PUT 'WILDEN 'SYSTEM::SOURCE (CONS '((:FUNCTION WILDEN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
148780) (GET 'WILDEN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WILDEN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 275) 148780 '(PATH) "From a pathname, return a wildcard pathname matching any file in any subdirectory of given pathname's directory"))
(PROCLAIM '(NOTINLINE RELATIVIZE-DIRECTORY-COMPONENT))
(PROGN (SYSTEM:PUT 'RELATIVIZE-DIRECTORY-COMPONENT 'SYSTEM::SOURCE (CONS '((:FUNCTION 
RELATIVIZE-DIRECTORY-COMPONENT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
150509) (GET 'RELATIVIZE-DIRECTORY-COMPONENT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'RELATIVIZE-DIRECTORY-COMPONENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 276) 
150509 '(DIRECTORY-COMPONENT) "Given the DIRECTORY-COMPONENT of a pathname, return an otherwise similar relative directory component"))
(PROCLAIM '(NOTINLINE RELATIVIZE-PATHNAME-DIRECTORY))
(PROGN (SYSTEM:PUT 'RELATIVIZE-PATHNAME-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
RELATIVIZE-PATHNAME-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
150509) (GET 'RELATIVIZE-PATHNAME-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RELATIVIZE-PATHNAME-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 277) 150509 '(PATHSPEC) "Given a PATHNAME, return a relative pathname with otherwise the same components"))
(PROCLAIM '(NOTINLINE DIRECTORY-SEPARATOR-FOR-HOST))
(PROGN (SYSTEM:PUT 'DIRECTORY-SEPARATOR-FOR-HOST 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DIRECTORY-SEPARATOR-FOR-HOST) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
150509) (GET 'DIRECTORY-SEPARATOR-FOR-HOST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECTORY-SEPARATOR-FOR-HOST 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 278) 150509 '(&OPTIONAL (PATHNAME 
*DEFAULT-PATHNAME-DEFAULTS*)) "Given a PATHNAME, return the character used to delimit directory names on this host and device."))
(PROCLAIM '(NOTINLINE DIRECTORIZE-PATHNAME-HOST-DEVICE))
(PROGN (SYSTEM:PUT 'DIRECTORIZE-PATHNAME-HOST-DEVICE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DIRECTORIZE-PATHNAME-HOST-DEVICE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
150509) (GET 'DIRECTORIZE-PATHNAME-HOST-DEVICE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'DIRECTORIZE-PATHNAME-HOST-DEVICE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
279) 150509 '(PATHNAME) "Given a PATHNAME, return a pathname that has representations of its HOST and DEVICE components
added to its DIRECTORY component. This is useful for output translations."))
(PROCLAIM '(NOTINLINE TRANSLATE-PATHNAME*))
(PROGN (SYSTEM:PUT 'TRANSLATE-PATHNAME* 'SYSTEM::SOURCE (CONS '((:FUNCTION TRANSLATE-PATHNAME*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 150509) (GET 
'TRANSLATE-PATHNAME* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TRANSLATE-PATHNAME* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 281) 150509 '(PATH ABSOLUTE-SOURCE DESTINATION &OPTIONAL ROOT 
SOURCE) "A wrapper around TRANSLATE-PATHNAME to be used by the ASDF output-translations facility.
PATH is the pathname to be translated.
ABSOLUTE-SOURCE is an absolute pathname to use as source for translate-pathname,
DESTINATION is either a function, to be called with PATH and ABSOLUTE-SOURCE,
or a relative pathname, to be merged with ROOT and used as destination for translate-pathname
or an absolute pathname, to be used as destination for translate-pathname.
In that last case, if ROOT is non-NIL, PATH is first transformated by DIRECTORIZE-PATHNAME-HOST-DEVICE."))
(PROGN (SYSTEM:PUT '*OUTPUT-TRANSLATION-FUNCTION* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 150509) (GET 
'*OUTPUT-TRANSLATION-FUNCTION* 'SYSTEM::SOURCE NIL))) (DEFVAR *OUTPUT-TRANSLATION-FUNCTION* 
'IDENTITY "Hook for output translations.

This function needs to be idempotent, so that actions can work
whether their inputs were translated or not,
which they will be if we are composing operations. e.g. if some
create-lisp-op creates a lisp file from some higher-level input,
you need to still be able to use compile-op on that lisp file."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 282))
(SYSTEM:%IN-PACKAGE "UIOP/FILESYSTEM")
(PROCLAIM '(NOTINLINE NATIVE-NAMESTRING))
(PROGN (SYSTEM:PUT 'NATIVE-NAMESTRING 'SYSTEM::SOURCE (CONS '((:FUNCTION NATIVE-NAMESTRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 156766) (GET 
'NATIVE-NAMESTRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NATIVE-NAMESTRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 283) 156766 '(X) "From a non-wildcard CL pathname, a return namestring suitable for passing to the operating system"))
(PROCLAIM '(NOTINLINE PARSE-NATIVE-NAMESTRING))
(PROGN (SYSTEM:PUT 'PARSE-NATIVE-NAMESTRING 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-NATIVE-NAMESTRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 156766) (GET 
'PARSE-NATIVE-NAMESTRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-NATIVE-NAMESTRING 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 284) 156766 '(STRING &REST CONSTRAINTS 
&KEY ENSURE-DIRECTORY &ALLOW-OTHER-KEYS) "From a native namestring suitable for use by the operating system, return
a CL pathname satisfying all the specified constraints as per ENSURE-PATHNAME"))
(PROCLAIM '(NOTINLINE TRUENAME*))
(PROGN (SYSTEM:PUT 'TRUENAME* 'SYSTEM::SOURCE (CONS '((:FUNCTION TRUENAME*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
158443) (GET 'TRUENAME* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TRUENAME* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 285) 158443 '(P) "Nicer variant of TRUENAME that plays well with NIL, avoids logical pathname contexts, and tries both files and directories"))
(PROCLAIM '(NOTINLINE SAFE-FILE-WRITE-DATE))
(PROGN (SYSTEM:PUT 'SAFE-FILE-WRITE-DATE 'SYSTEM::SOURCE (CONS '((:FUNCTION SAFE-FILE-WRITE-DATE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 158443) (GET 
'SAFE-FILE-WRITE-DATE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SAFE-FILE-WRITE-DATE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 287) 158443 '(PATHNAME) "Safe variant of FILE-WRITE-DATE that may return NIL rather than raise an error."))
(PROCLAIM '(NOTINLINE PROBE-FILE*))
(PROGN (SYSTEM:PUT 'PROBE-FILE* 'SYSTEM::SOURCE (CONS '((:FUNCTION PROBE-FILE*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
158443) (GET 'PROBE-FILE* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROBE-FILE* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 289) 158443 '(P &KEY TRUENAME) "when given a pathname P (designated by a string as per PARSE-NAMESTRING),
probes the filesystem for a file or directory with given pathname.
If it exists, return its truename if TRUENAME is true,
or the original (parsed) pathname if it is false (the default)."))
(PROCLAIM '(NOTINLINE DIRECTORY-EXISTS-P))
(PROGN (SYSTEM:PUT 'DIRECTORY-EXISTS-P 'SYSTEM::SOURCE (CONS '((:FUNCTION DIRECTORY-EXISTS-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 158443) (GET 
'DIRECTORY-EXISTS-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECTORY-EXISTS-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 291) 158443 '(X) "Is X the name of a directory that exists on the filesystem?"))
(PROCLAIM '(NOTINLINE FILE-EXISTS-P))
(PROGN (SYSTEM:PUT 'FILE-EXISTS-P 'SYSTEM::SOURCE (CONS '((:FUNCTION FILE-EXISTS-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 158443) (GET 
'FILE-EXISTS-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FILE-EXISTS-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 292) 158443 '(X) "Is X the name of a file that exists on the filesystem?"))
(PROCLAIM '(NOTINLINE DIRECTORY*))
(PROGN (SYSTEM:PUT 'DIRECTORY* 'SYSTEM::SOURCE (CONS '((:FUNCTION DIRECTORY*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
158443) (GET 'DIRECTORY* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECTORY* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 293) 158443 '(PATHNAME-SPEC &REST KEYS &KEY &ALLOW-OTHER-KEYS) 
"Return a list of the entries in a directory by calling DIRECTORY.
Try to override the defaults to not resolving symlinks, if implementation allows."))
(PROCLAIM '(NOTINLINE FILTER-LOGICAL-DIRECTORY-RESULTS))
(PROGN (SYSTEM:PUT 'FILTER-LOGICAL-DIRECTORY-RESULTS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
FILTER-LOGICAL-DIRECTORY-RESULTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
158443) (GET 'FILTER-LOGICAL-DIRECTORY-RESULTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'FILTER-LOGICAL-DIRECTORY-RESULTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
294) 158443 '(DIRECTORY ENTRIES MERGER) "If DIRECTORY isn't a logical pathname, return ENTRIES. If it is,
given ENTRIES in the DIRECTORY, remove the entries which are physical yet
when transformed by MERGER have a different TRUENAME.
Also remove duplicates as may appear with some translation rules.
This function is used as a helper to DIRECTORY-FILES to avoid invalid entries
when using logical-pathnames."))
(PROCLAIM '(NOTINLINE DIRECTORY-FILES))
(PROGN (SYSTEM:PUT 'DIRECTORY-FILES 'SYSTEM::SOURCE (CONS '((:FUNCTION DIRECTORY-FILES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 158443) (GET 
'DIRECTORY-FILES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECTORY-FILES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 296) 158443 '(DIRECTORY &OPTIONAL (PATTERN *WILD-FILE-FOR-DIRECTORY*)) 
"Return a list of the files in a directory according to the PATTERN.
Subdirectories should NOT be returned.
  PATTERN defaults to a pattern carefully chosen based on the implementation;
override the default at your own risk.
  DIRECTORY-FILES tries NOT to resolve symlinks if the implementation permits this,
but the behavior in presence of symlinks is not portable. Use IOlib to handle such situations."))
(PROCLAIM '(NOTINLINE SUBDIRECTORIES))
(PROGN (SYSTEM:PUT 'SUBDIRECTORIES 'SYSTEM::SOURCE (CONS '((:FUNCTION SUBDIRECTORIES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 158443) (GET 
'SUBDIRECTORIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SUBDIRECTORIES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 299) 158443 '(DIRECTORY) "Given a DIRECTORY pathname designator, return a list of the subdirectories under it.
The behavior in presence of symlinks is not portable. Use IOlib to handle such situations."))
(PROCLAIM '(NOTINLINE COLLECT-SUB*DIRECTORIES))
(PROGN (SYSTEM:PUT 'COLLECT-SUB*DIRECTORIES 'SYSTEM::SOURCE (CONS '((:FUNCTION COLLECT-SUB*DIRECTORIES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 158443) (GET 
'COLLECT-SUB*DIRECTORIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COLLECT-SUB*DIRECTORIES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 301) 158443 '(DIRECTORY COLLECTP 
RECURSEP COLLECTOR) "Given a DIRECTORY, when COLLECTP returns true when CALL-FUNCTION'ed with the directory,
call-function the COLLECTOR function designator on the directory,
and recurse each of its subdirectories on which the RECURSEP returns true when CALL-FUNCTION'ed with them.
This function will thus let you traverse a filesystem hierarchy,
superseding the functionality of CL-FAD:WALK-DIRECTORY.
The behavior in presence of symlinks is not portable. Use IOlib to handle such situations."))
(PROCLAIM '(NOTINLINE TRUENAMIZE))
(PROGN (SYSTEM:PUT 'TRUENAMIZE 'SYSTEM::SOURCE (CONS '((:FUNCTION TRUENAMIZE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
170518) (GET 'TRUENAMIZE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TRUENAMIZE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 302) 170518 '(PATHNAME) "Resolve as much of a pathname as possible"))
(PROCLAIM '(NOTINLINE RESOLVE-SYMLINKS))
(PROGN (SYSTEM:PUT 'RESOLVE-SYMLINKS 'SYSTEM::SOURCE (CONS '((:FUNCTION RESOLVE-SYMLINKS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 170518) (GET 
'RESOLVE-SYMLINKS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESOLVE-SYMLINKS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 305) 170518 '(PATH) "Do a best effort at resolving symlinks in PATH, returning a partially or totally resolved PATH."))
(PROGN (SYSTEM:PUT '*RESOLVE-SYMLINKS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
170518) (GET '*RESOLVE-SYMLINKS* 'SYSTEM::SOURCE NIL))) (DEFVAR *RESOLVE-SYMLINKS* 
T "Determine whether or not ASDF resolves symlinks when defining systems.
Defaults to T."))
(PROCLAIM '(NOTINLINE RESOLVE-SYMLINKS*))
(PROGN (SYSTEM:PUT 'RESOLVE-SYMLINKS* 'SYSTEM::SOURCE (CONS '((:FUNCTION RESOLVE-SYMLINKS*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 170518) (GET 
'RESOLVE-SYMLINKS* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESOLVE-SYMLINKS* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 306) 170518 '(PATH) "RESOLVE-SYMLINKS in PATH iff *RESOLVE-SYMLINKS* is T (the default)."))
(PROCLAIM '(NOTINLINE ENSURE-PATHNAME))
(PROGN (SYSTEM:PUT 'ENSURE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 172699) (GET 
'ENSURE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 307) 172699 '(PATHNAME &KEY ON-ERROR DEFAULTS TYPE DOT-DOT NAMESTRING 
EMPTY-IS-NIL WANT-PATHNAME WANT-LOGICAL WANT-PHYSICAL ENSURE-PHYSICAL WANT-RELATIVE 
WANT-ABSOLUTE ENSURE-ABSOLUTE ENSURE-SUBPATH WANT-NON-WILD WANT-WILD WILDEN WANT-FILE 
WANT-DIRECTORY ENSURE-DIRECTORY WANT-EXISTING ENSURE-DIRECTORIES-EXIST TRUENAME RESOLVE-SYMLINKS 
TRUENAMIZE &AUX (P PATHNAME)) "Coerces its argument into a PATHNAME,
optionally doing some transformations and checking specified constraints.

If the argument is NIL, then NIL is returned unless the WANT-PATHNAME constraint is specified.

If the argument is a STRING, it is first converted to a pathname via
PARSE-UNIX-NAMESTRING, PARSE-NAMESTRING or PARSE-NATIVE-NAMESTRING respectively
depending on the NAMESTRING argument being :UNIX, :LISP or :NATIVE respectively,
or else by using CALL-FUNCTION on the NAMESTRING argument;
if :UNIX is specified (or NIL, the default, which specifies the same thing),
then PARSE-UNIX-NAMESTRING it is called with the keywords
DEFAULTS TYPE DOT-DOT ENSURE-DIRECTORY WANT-RELATIVE, and
the result is optionally merged into the DEFAULTS if ENSURE-ABSOLUTE is true.

The pathname passed or resulting from parsing the string
is then subjected to all the checks and transformations below are run.

Each non-nil constraint argument can be one of the symbols T, ERROR, CERROR or IGNORE.
The boolean T is an alias for ERROR.
ERROR means that an error will be raised if the constraint is not satisfied.
CERROR means that an continuable error will be raised if the constraint is not satisfied.
IGNORE means just return NIL instead of the pathname.

The ON-ERROR argument, if not NIL, is a function designator (as per CALL-FUNCTION)
that will be called with the the following arguments:
a generic format string for ensure pathname, the pathname,
the keyword argument corresponding to the failed check or transformation,
a format string for the reason ENSURE-PATHNAME failed,
and a list with arguments to that format string.
If ON-ERROR is NIL, ERROR is used instead, which does the right thing.
You could also pass (CERROR \"CONTINUE DESPITE FAILED CHECK\").

The transformations and constraint checks are done in this order,
which is also the order in the lambda-list:

EMPTY-IS-NIL returns NIL if the argument is an empty string.
WANT-PATHNAME checks that pathname (after parsing if needed) is not null.
Otherwise, if the pathname is NIL, ensure-pathname returns NIL.
WANT-LOGICAL checks that pathname is a LOGICAL-PATHNAME
WANT-PHYSICAL checks that pathname is not a LOGICAL-PATHNAME
ENSURE-PHYSICAL ensures that pathname is physical via TRANSLATE-LOGICAL-PATHNAME
WANT-RELATIVE checks that pathname has a relative directory component
WANT-ABSOLUTE checks that pathname does have an absolute directory component
ENSURE-ABSOLUTE merges with the DEFAULTS, then checks again
that the result absolute is an absolute pathname indeed.
ENSURE-SUBPATH checks that the pathname is a subpath of the DEFAULTS.
WANT-FILE checks that pathname has a non-nil FILE component
WANT-DIRECTORY checks that pathname has nil FILE and TYPE components
ENSURE-DIRECTORY uses ENSURE-DIRECTORY-PATHNAME to interpret
any file and type components as being actually a last directory component.
WANT-NON-WILD checks that pathname is not a wild pathname
WANT-WILD checks that pathname is a wild pathname
WILDEN merges the pathname with **/*.*.* if it is not wild
WANT-EXISTING checks that a file (or directory) exists with that pathname.
ENSURE-DIRECTORIES-EXIST creates any parent directory with ENSURE-DIRECTORIES-EXIST.
TRUENAME replaces the pathname by its truename, or errors if not possible.
RESOLVE-SYMLINKS replaces the pathname by a variant with symlinks resolved by RESOLVE-SYMLINKS.
TRUENAMIZE uses TRUENAMIZE to resolve as many symlinks as possible."))
(PROCLAIM '(NOTINLINE GET-PATHNAME-DEFAULTS))
(PROGN (SYSTEM:PUT 'GET-PATHNAME-DEFAULTS 'SYSTEM::SOURCE (CONS '((:FUNCTION GET-PATHNAME-DEFAULTS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 180740) (GET 
'GET-PATHNAME-DEFAULTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GET-PATHNAME-DEFAULTS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 309) 180740 '(&OPTIONAL (DEFAULTS 
*DEFAULT-PATHNAME-DEFAULTS*)) "Find the actual DEFAULTS to use for pathnames, including
resolving them with respect to GETCWD if the DEFAULTS were relative"))
(PROCLAIM '(NOTINLINE CALL-WITH-CURRENT-DIRECTORY))
(PROGN (SYSTEM:PUT 'CALL-WITH-CURRENT-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-CURRENT-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
180740) (GET 'CALL-WITH-CURRENT-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-CURRENT-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 310) 180740 '(DIR THUNK) "call the THUNK in a context where the current directory was changed to DIR, if not NIL.
Note that this operation is usually NOT thread-safe."))
(PROGN (SYSTEM:PUT 'WITH-CURRENT-DIRECTORY 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
180740) (GET 'WITH-CURRENT-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-CURRENT-DIRECTORY 
(SYSTEM:MAKE-MACRO 'WITH-CURRENT-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
311)) 180740 '((&OPTIONAL DIR) &BODY BODY) "Call BODY while the POSIX current working directory is set to DIR"))
(PROCLAIM '(NOTINLINE INTER-DIRECTORY-SEPARATOR))
(PROGN (SYSTEM:PUT 'INTER-DIRECTORY-SEPARATOR 'SYSTEM::SOURCE (CONS '((:FUNCTION 
INTER-DIRECTORY-SEPARATOR) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
181869) (GET 'INTER-DIRECTORY-SEPARATOR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'INTER-DIRECTORY-SEPARATOR 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 312) 181869 'NIL "What character does the current OS conventionally uses to separate directories?"))
(PROCLAIM '(NOTINLINE SPLIT-NATIVE-PATHNAMES-STRING))
(PROGN (SYSTEM:PUT 'SPLIT-NATIVE-PATHNAMES-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SPLIT-NATIVE-PATHNAMES-STRING) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
181869) (GET 'SPLIT-NATIVE-PATHNAMES-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SPLIT-NATIVE-PATHNAMES-STRING 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 313) 181869 '(STRING &REST CONSTRAINTS 
&KEY &ALLOW-OTHER-KEYS) "Given a string of pathnames specified in native OS syntax, separate them in a list,
check constraints and normalize each one as per ENSURE-PATHNAME,
where an empty string denotes NIL."))
(PROCLAIM '(NOTINLINE GETENV-PATHNAME))
(PROGN (SYSTEM:PUT 'GETENV-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION GETENV-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 181869) (GET 
'GETENV-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GETENV-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 314) 181869 '(X &REST CONSTRAINTS &KEY ENSURE-DIRECTORY WANT-DIRECTORY 
ON-ERROR &ALLOW-OTHER-KEYS) "Extract a pathname from a user-configured environment variable, as per native OS,
check constraints and normalize as per ENSURE-PATHNAME."))
(PROCLAIM '(NOTINLINE GETENV-PATHNAMES))
(PROGN (SYSTEM:PUT 'GETENV-PATHNAMES 'SYSTEM::SOURCE (CONS '((:FUNCTION GETENV-PATHNAMES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 181869) (GET 
'GETENV-PATHNAMES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GETENV-PATHNAMES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 315) 181869 '(X &REST CONSTRAINTS &KEY ON-ERROR &ALLOW-OTHER-KEYS) 
"Extract a list of pathname from a user-configured environment variable, as per native OS,
check constraints and normalize each one as per ENSURE-PATHNAME.
       Any empty entries in the environment variable X will be returned as NILs."))
(PROCLAIM '(NOTINLINE GETENV-ABSOLUTE-DIRECTORY))
(PROGN (SYSTEM:PUT 'GETENV-ABSOLUTE-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
GETENV-ABSOLUTE-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
181869) (GET 'GETENV-ABSOLUTE-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GETENV-ABSOLUTE-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 316) 181869 '(X) "Extract an absolute directory pathname from a user-configured environment variable,
as per native OS"))
(PROCLAIM '(NOTINLINE GETENV-ABSOLUTE-DIRECTORIES))
(PROGN (SYSTEM:PUT 'GETENV-ABSOLUTE-DIRECTORIES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
GETENV-ABSOLUTE-DIRECTORIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
181869) (GET 'GETENV-ABSOLUTE-DIRECTORIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GETENV-ABSOLUTE-DIRECTORIES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 317) 181869 '(X) "Extract a list of absolute directories from a user-configured environment variable,
as per native OS.  Any empty entries in the environment variable X will be returned as
NILs."))
(PROCLAIM '(NOTINLINE LISP-IMPLEMENTATION-DIRECTORY))
(PROGN (SYSTEM:PUT 'LISP-IMPLEMENTATION-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
LISP-IMPLEMENTATION-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
181869) (GET 'LISP-IMPLEMENTATION-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LISP-IMPLEMENTATION-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 318) 181869 '(&KEY TRUENAME) "Where are the system files of the current installation of the CL implementation?"))
(PROCLAIM '(NOTINLINE LISP-IMPLEMENTATION-PATHNAME-P))
(PROGN (SYSTEM:PUT 'LISP-IMPLEMENTATION-PATHNAME-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
LISP-IMPLEMENTATION-PATHNAME-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
181869) (GET 'LISP-IMPLEMENTATION-PATHNAME-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'LISP-IMPLEMENTATION-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 319) 
181869 '(PATHNAME) "Is the PATHNAME under the current installation of the CL implementation?"))
(PROCLAIM '(NOTINLINE ENSURE-ALL-DIRECTORIES-EXIST))
(PROGN (SYSTEM:PUT 'ENSURE-ALL-DIRECTORIES-EXIST 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENSURE-ALL-DIRECTORIES-EXIST) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
185891) (GET 'ENSURE-ALL-DIRECTORIES-EXIST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-ALL-DIRECTORIES-EXIST 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 320) 185891 '(PATHNAMES) "Ensure that for every pathname in PATHNAMES, we ensure its directories exist"))
(PROCLAIM '(NOTINLINE DELETE-FILE-IF-EXISTS))
(PROGN (SYSTEM:PUT 'DELETE-FILE-IF-EXISTS 'SYSTEM::SOURCE (CONS '((:FUNCTION DELETE-FILE-IF-EXISTS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 185891) (GET 
'DELETE-FILE-IF-EXISTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DELETE-FILE-IF-EXISTS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 321) 185891 '(X) "Delete a file X if it already exists"))
(PROCLAIM '(NOTINLINE RENAME-FILE-OVERWRITING-TARGET))
(PROGN (SYSTEM:PUT 'RENAME-FILE-OVERWRITING-TARGET 'SYSTEM::SOURCE (CONS '((:FUNCTION 
RENAME-FILE-OVERWRITING-TARGET) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
185891) (GET 'RENAME-FILE-OVERWRITING-TARGET 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'RENAME-FILE-OVERWRITING-TARGET (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 323) 
185891 '(SOURCE TARGET) "Rename a file, overwriting any previous file with the TARGET name,
in an atomic way if the implementation allows."))
(PROCLAIM '(NOTINLINE DELETE-EMPTY-DIRECTORY))
(PROGN (SYSTEM:PUT 'DELETE-EMPTY-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION DELETE-EMPTY-DIRECTORY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 185891) (GET 
'DELETE-EMPTY-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DELETE-EMPTY-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 324) 185891 '(DIRECTORY-PATHNAME) 
"Delete an empty directory"))
(PROCLAIM '(NOTINLINE DELETE-DIRECTORY-TREE))
(PROGN (SYSTEM:PUT 'DELETE-DIRECTORY-TREE 'SYSTEM::SOURCE (CONS '((:FUNCTION DELETE-DIRECTORY-TREE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 185891) (GET 
'DELETE-DIRECTORY-TREE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DELETE-DIRECTORY-TREE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 325) 185891 '(DIRECTORY-PATHNAME 
&KEY (VALIDATE NIL VALIDATEP) (IF-DOES-NOT-EXIST :ERROR)) "Delete a directory including all its recursive contents, aka rm -rf.

To reduce the risk of infortunate mistakes, DIRECTORY-PATHNAME must be
a physical non-wildcard directory pathname (not namestring).

If the directory does not exist, the IF-DOES-NOT-EXIST argument specifies what happens:
if it is :ERROR (the default), an error is signaled, whereas if it is :IGNORE, nothing is done.

Furthermore, before any deletion is attempted, the DIRECTORY-PATHNAME must pass
the validation function designated (as per ENSURE-FUNCTION) by the VALIDATE keyword argument
which in practice is thus compulsory, and validates by returning a non-NIL result.
If you're suicidal or extremely confident, just use :VALIDATE T."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 327))
(SYSTEM:%IN-PACKAGE "UIOP/STREAM")
(PROGN (SYSTEM:PUT '*DEFAULT-STREAM-ELEMENT-TYPE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 193750) (GET 
'*DEFAULT-STREAM-ELEMENT-TYPE* 'SYSTEM::SOURCE NIL))) (DEFVAR *DEFAULT-STREAM-ELEMENT-TYPE* 
(OR 'CHARACTER :DEFAULT) "default element-type for open (depends on the current CL implementation)"))
(PROGN (SYSTEM:PUT '*STDIN* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
193750) (GET '*STDIN* 'SYSTEM::SOURCE NIL))) (DEFVAR *STDIN* *STANDARD-INPUT* "the original standard input stream at startup"))
(PROCLAIM '(NOTINLINE SETUP-STDIN))
(PROGN (SYSTEM:PUT 'SETUP-STDIN 'SYSTEM::SOURCE (CONS '((:FUNCTION SETUP-STDIN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
193750) (GET 'SETUP-STDIN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SETUP-STDIN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 328) 193750 'NIL NIL))
(PROGN (SYSTEM:PUT '*STDOUT* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
193750) (GET '*STDOUT* 'SYSTEM::SOURCE NIL))) (DEFVAR *STDOUT* *STANDARD-OUTPUT* 
"the original standard output stream at startup"))
(PROCLAIM '(NOTINLINE SETUP-STDOUT))
(PROGN (SYSTEM:PUT 'SETUP-STDOUT 'SYSTEM::SOURCE (CONS '((:FUNCTION SETUP-STDOUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 193750) (GET 
'SETUP-STDOUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SETUP-STDOUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 329) 193750 'NIL NIL))
(PROGN (SYSTEM:PUT '*STDERR* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
193750) (GET '*STDERR* 'SYSTEM::SOURCE NIL))) (DEFVAR *STDERR* *ERROR-OUTPUT* "the original error output stream at startup"))
(PROCLAIM '(NOTINLINE SETUP-STDERR))
(PROGN (SYSTEM:PUT 'SETUP-STDERR 'SYSTEM::SOURCE (CONS '((:FUNCTION SETUP-STDERR) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 193750) (GET 
'SETUP-STDERR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SETUP-STDERR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 330) 193750 'NIL NIL))
(SETUP-STDIN)
(SETUP-STDOUT)
(SETUP-STDERR)
(PROGN (SYSTEM:PUT '*DEFAULT-ENCODING* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
195267) (GET '*DEFAULT-ENCODING* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEFAULT-ENCODING* 
(OR (IF-LET (PREVIOUS (AND (BOUNDP '*DEFAULT-ENCODING*) (SYMBOL-VALUE '*DEFAULT-ENCODING*))) 
(UNLESS (EQ PREVIOUS :DEFAULT) PREVIOUS)) :UTF-8) "Default encoding for source files.
The default value :utf-8 is the portable thing.
The legacy behavior was :default.
If you (asdf:load-system :asdf-encodings) then
you will have autodetection via *encoding-detection-hook* below,
reading emacs-style -*- coding: utf-8 -*- specifications,
and falling back to utf-8 or latin1 if nothing is specified."))
(PROGN (SYSTEM:PUT '*UTF-8-EXTERNAL-FORMAT* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 195267) (GET 
'*UTF-8-EXTERNAL-FORMAT* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *UTF-8-EXTERNAL-FORMAT* 
(IF (FEATUREP :ASDF-UNICODE) (OR :UTF-8) :DEFAULT) "Default :external-format argument to pass to CL:OPEN and also
CL:LOAD or CL:COMPILE-FILE to best process a UTF-8 encoded file.
On modern implementations, this will decode UTF-8 code points as CL characters.
On legacy implementations, it may fall back on some 8-bit encoding,
with non-ASCII code points being read as several CL characters;
hopefully, if done consistently, that won't affect program behavior too much."))
(PROCLAIM '(NOTINLINE ALWAYS-DEFAULT-ENCODING))
(PROGN (SYSTEM:PUT 'ALWAYS-DEFAULT-ENCODING 'SYSTEM::SOURCE (CONS '((:FUNCTION ALWAYS-DEFAULT-ENCODING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 195267) (GET 
'ALWAYS-DEFAULT-ENCODING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ALWAYS-DEFAULT-ENCODING 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 331) 195267 '(PATHNAME) "Trivial function to use as *encoding-detection-hook*,
always 'detects' the *default-encoding*"))
(PROGN (SYSTEM:PUT '*ENCODING-DETECTION-HOOK* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 195267) (GET 
'*ENCODING-DETECTION-HOOK* 'SYSTEM::SOURCE NIL))) (DEFVAR *ENCODING-DETECTION-HOOK* 
(FUNCTION ALWAYS-DEFAULT-ENCODING) "Hook for an extension to define a function to automatically detect a file's encoding"))
(PROCLAIM '(NOTINLINE DETECT-ENCODING))
(PROGN (SYSTEM:PUT 'DETECT-ENCODING 'SYSTEM::SOURCE (CONS '((:FUNCTION DETECT-ENCODING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 195267) (GET 
'DETECT-ENCODING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DETECT-ENCODING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 332) 195267 '(PATHNAME) "Detects the encoding of a specified file, going through user-configurable hooks"))
(PROCLAIM '(NOTINLINE DEFAULT-ENCODING-EXTERNAL-FORMAT))
(PROGN (SYSTEM:PUT 'DEFAULT-ENCODING-EXTERNAL-FORMAT 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DEFAULT-ENCODING-EXTERNAL-FORMAT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
195267) (GET 'DEFAULT-ENCODING-EXTERNAL-FORMAT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'DEFAULT-ENCODING-EXTERNAL-FORMAT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
333) 195267 '(ENCODING) "Default, ignorant, function to transform a character ENCODING as a
portable keyword to an implementation-dependent EXTERNAL-FORMAT specification.
Load system ASDF-ENCODINGS to hook in a better one."))
(PROGN (SYSTEM:PUT '*ENCODING-EXTERNAL-FORMAT-HOOK* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 195267) (GET 
'*ENCODING-EXTERNAL-FORMAT-HOOK* 'SYSTEM::SOURCE NIL))) (DEFVAR *ENCODING-EXTERNAL-FORMAT-HOOK* 
(FUNCTION DEFAULT-ENCODING-EXTERNAL-FORMAT) "Hook for an extension (e.g. ASDF-ENCODINGS) to define a better mapping
from non-default encodings to and implementation-defined external-format's"))
(PROCLAIM '(NOTINLINE ENCODING-EXTERNAL-FORMAT))
(PROGN (SYSTEM:PUT 'ENCODING-EXTERNAL-FORMAT 'SYSTEM::SOURCE (CONS '((:FUNCTION ENCODING-EXTERNAL-FORMAT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 195267) (GET 
'ENCODING-EXTERNAL-FORMAT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENCODING-EXTERNAL-FORMAT 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 334) 195267 '(ENCODING) "Transform a portable ENCODING keyword to an implementation-dependent EXTERNAL-FORMAT,
going through all the proper hooks."))
(PROGN (SYSTEM:PUT '*STANDARD-READTABLE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
198358) (GET '*STANDARD-READTABLE* 'SYSTEM::SOURCE NIL))) (DEFVAR *STANDARD-READTABLE* 
(WITH-STANDARD-IO-SYNTAX *READTABLE*) "The standard readtable, implementing the syntax specified by the CLHS.
It must never be modified, though only good implementations will even enforce that."))
(PROGN (SYSTEM:PUT 'WITH-SAFE-IO-SYNTAX 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
198358) (GET 'WITH-SAFE-IO-SYNTAX 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-SAFE-IO-SYNTAX 
(SYSTEM:MAKE-MACRO 'WITH-SAFE-IO-SYNTAX (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
335)) 198358 '((&KEY (PACKAGE :CL)) &BODY BODY) "Establish safe CL reader options around the evaluation of BODY"))
(PROCLAIM '(NOTINLINE CALL-WITH-SAFE-IO-SYNTAX))
(PROGN (SYSTEM:PUT 'CALL-WITH-SAFE-IO-SYNTAX 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-SAFE-IO-SYNTAX) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 198358) (GET 
'CALL-WITH-SAFE-IO-SYNTAX 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-SAFE-IO-SYNTAX 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 336) 198358 '(THUNK &KEY (PACKAGE 
:CL)) NIL))
(PROCLAIM '(NOTINLINE SAFE-READ-FROM-STRING))
(PROGN (SYSTEM:PUT 'SAFE-READ-FROM-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION SAFE-READ-FROM-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 198358) (GET 
'SAFE-READ-FROM-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SAFE-READ-FROM-STRING 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 338) 198358 '(STRING &KEY (PACKAGE 
:CL) (EOF-ERROR-P T) EOF-VALUE (START 0) END PRESERVE-WHITESPACE) "Read from STRING using a safe syntax, as per WITH-SAFE-IO-SYNTAX"))
(PROCLAIM '(NOTINLINE CALL-WITH-OUTPUT-FILE))
(PROGN (SYSTEM:PUT 'CALL-WITH-OUTPUT-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-OUTPUT-FILE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 199506) (GET 
'CALL-WITH-OUTPUT-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-OUTPUT-FILE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 340) 199506 '(PATHNAME THUNK &KEY 
(ELEMENT-TYPE *DEFAULT-STREAM-ELEMENT-TYPE*) (EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) 
(IF-EXISTS :ERROR) (IF-DOES-NOT-EXIST :CREATE)) "Open FILE for input with given recognizes options, call THUNK with the resulting stream.
Other keys are accepted but discarded."))
(PROGN (SYSTEM:PUT 'WITH-OUTPUT-FILE 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
199506) (GET 'WITH-OUTPUT-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-OUTPUT-FILE 
(SYSTEM:MAKE-MACRO 'WITH-OUTPUT-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
341)) 199506 '((VAR PATHNAME &REST KEYS &KEY ELEMENT-TYPE EXTERNAL-FORMAT IF-EXISTS 
IF-DOES-NOT-EXIST) &BODY BODY) NIL))
(PROCLAIM '(NOTINLINE CALL-WITH-OUTPUT))
(PROGN (SYSTEM:PUT 'CALL-WITH-OUTPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-OUTPUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 199506) (GET 
'CALL-WITH-OUTPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-OUTPUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 342) 199506 '(OUTPUT FUNCTION &KEY (ELEMENT-TYPE 'CHARACTER)) 
"Calls FUNCTION with an actual stream argument,
behaving like FORMAT with respect to how stream designators are interpreted:
If OUTPUT is a STREAM, use it as the stream.
If OUTPUT is NIL, use a STRING-OUTPUT-STREAM of given ELEMENT-TYPE as the stream, and
return the resulting string.
If OUTPUT is T, use *STANDARD-OUTPUT* as the stream.
If OUTPUT is a STRING with a fill-pointer, use it as a STRING-OUTPUT-STREAM of given ELEMENT-TYPE.
If OUTPUT is a PATHNAME, open the file and write to it, passing ELEMENT-TYPE to WITH-OUTPUT-FILE
-- this latter as an extension since ASDF 3.1.
(Proper ELEMENT-TYPE treatment since ASDF 3.3.4 only.)
Otherwise, signal an error."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 343))
(PROGN (SYSTEM:PUT 'OUTPUT-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION OUTPUT-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 202551) (GET 
'OUTPUT-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OUTPUT-STRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 346) 202551 '(STRING &OPTIONAL OUTPUT) "If the desired OUTPUT is not NIL, print the string to the output; otherwise return the string"))
(PROCLAIM '(NOTINLINE CALL-WITH-INPUT-FILE))
(PROGN (SYSTEM:PUT 'CALL-WITH-INPUT-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-INPUT-FILE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 202776) (GET 
'CALL-WITH-INPUT-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-INPUT-FILE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 348) 202776 '(PATHNAME THUNK &KEY (ELEMENT-TYPE *DEFAULT-STREAM-ELEMENT-TYPE*) 
(EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) (IF-DOES-NOT-EXIST :ERROR)) "Open FILE for input with given recognizes options, call THUNK with the resulting stream.
Other keys are accepted but discarded."))
(PROGN (SYSTEM:PUT 'WITH-INPUT-FILE 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
202776) (GET 'WITH-INPUT-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-INPUT-FILE 
(SYSTEM:MAKE-MACRO 'WITH-INPUT-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
349)) 202776 '((VAR PATHNAME &REST KEYS &KEY ELEMENT-TYPE EXTERNAL-FORMAT IF-DOES-NOT-EXIST) 
&BODY BODY) NIL))
(PROCLAIM '(NOTINLINE CALL-WITH-INPUT))
(PROGN (SYSTEM:PUT 'CALL-WITH-INPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-INPUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 202776) (GET 
'CALL-WITH-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-INPUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 350) 202776 '(INPUT FUNCTION &KEY KEYS) "Calls FUNCTION with an actual stream argument, interpreting
stream designators like READ, but also coercing strings to STRING-INPUT-STREAM,
and PATHNAME to FILE-STREAM.
If INPUT is a STREAM, use it as the stream.
If INPUT is NIL, use a *STANDARD-INPUT* as the stream.
If INPUT is T, use *TERMINAL-IO* as the stream.
If INPUT is a STRING, use it as a string-input-stream.
If INPUT is a PATHNAME, open it, passing KEYS to WITH-INPUT-FILE
-- the latter is an extension since ASDF 3.1.
Otherwise, signal an error."))
(PROGN (SYSTEM:PUT 'WITH-INPUT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
202776) (GET 'WITH-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-INPUT (SYSTEM:MAKE-MACRO 
'WITH-INPUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 351)) 202776 '((INPUT-VAR 
&OPTIONAL (VALUE INPUT-VAR)) &BODY BODY) "Bind INPUT-VAR to an input stream, coercing VALUE (default: previous binding of INPUT-VAR)
as per CALL-WITH-INPUT, and evaluate BODY within the scope of this binding."))
(PROCLAIM '(NOTINLINE INPUT-STRING))
(PROGN (SYSTEM:PUT 'INPUT-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION INPUT-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 202776) (GET 
'INPUT-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'INPUT-STRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 352) 202776 '(&OPTIONAL INPUT) "If the desired INPUT is a string, return that string; otherwise slurp the INPUT into a string
and return that"))
(PROCLAIM '(NOTINLINE NULL-DEVICE-PATHNAME))
(PROGN (SYSTEM:PUT 'NULL-DEVICE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION NULL-DEVICE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 205293) (GET 
'NULL-DEVICE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NULL-DEVICE-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 354) 205293 'NIL "Pathname to a bit bucket device that discards any information written to it
and always returns EOF when read from"))
(PROCLAIM '(NOTINLINE CALL-WITH-NULL-INPUT))
(PROGN (SYSTEM:PUT 'CALL-WITH-NULL-INPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-NULL-INPUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 205293) (GET 
'CALL-WITH-NULL-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-NULL-INPUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 355) 205293 '(FUN &KEY ELEMENT-TYPE EXTERNAL-FORMAT IF-DOES-NOT-EXIST) 
"Call FUN with an input stream that always returns end of file.
The keyword arguments are allowed for backward compatibility, but are ignored."))
(PROGN (SYSTEM:PUT 'WITH-NULL-INPUT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
205293) (GET 'WITH-NULL-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-NULL-INPUT 
(SYSTEM:MAKE-MACRO 'WITH-NULL-INPUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
356)) 205293 '((VAR &REST KEYS &KEY ELEMENT-TYPE EXTERNAL-FORMAT IF-DOES-NOT-EXIST) 
&BODY BODY) "Evaluate BODY in a context when VAR is bound to an input stream that always returns end of file.
The keyword arguments are allowed for backward compatibility, but are ignored."))
(PROCLAIM '(NOTINLINE CALL-WITH-NULL-OUTPUT))
(PROGN (SYSTEM:PUT 'CALL-WITH-NULL-OUTPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-NULL-OUTPUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 205293) (GET 
'CALL-WITH-NULL-OUTPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-NULL-OUTPUT 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 357) 205293 '(FUN &KEY (ELEMENT-TYPE 
*DEFAULT-STREAM-ELEMENT-TYPE*) (EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) (IF-EXISTS 
:OVERWRITE) (IF-DOES-NOT-EXIST :ERROR)) "Call FUN with an output stream that discards all output.
The keyword arguments are allowed for backward compatibility, but are ignored."))
(PROGN (SYSTEM:PUT 'WITH-NULL-OUTPUT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
205293) (GET 'WITH-NULL-OUTPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-NULL-OUTPUT 
(SYSTEM:MAKE-MACRO 'WITH-NULL-OUTPUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
358)) 205293 '((VAR &REST KEYS &KEY ELEMENT-TYPE EXTERNAL-FORMAT IF-DOES-NOT-EXIST 
IF-EXISTS) &BODY BODY) "Evaluate BODY in a context when VAR is bound to an output stream that discards all output.
The keyword arguments are allowed for backward compatibility, but are ignored."))
(PROCLAIM '(NOTINLINE FINISH-OUTPUTS))
(PROGN (SYSTEM:PUT 'FINISH-OUTPUTS 'SYSTEM::SOURCE (CONS '((:FUNCTION FINISH-OUTPUTS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 207651) (GET 
'FINISH-OUTPUTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FINISH-OUTPUTS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 359) 207651 '(&REST STREAMS) "Finish output on the main output streams as well as any specified one.
Useful for portably flushing I/O before user input or program exit."))
(PROCLAIM '(NOTINLINE FORMAT!))
(PROGN (SYSTEM:PUT 'FORMAT! 'SYSTEM::SOURCE (CONS '((:FUNCTION FORMAT!) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
207651) (GET 'FORMAT! 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FORMAT! (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 361) 207651 '(STREAM FORMAT &REST ARGS) "Just like format, but call finish-outputs before and after the output."))
(PROCLAIM '(NOTINLINE SAFE-FORMAT!))
(PROGN (SYSTEM:PUT 'SAFE-FORMAT! 'SYSTEM::SOURCE (CONS '((:FUNCTION SAFE-FORMAT!) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 207651) (GET 
'SAFE-FORMAT! 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SAFE-FORMAT! (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 362) 207651 '(STREAM FORMAT &REST ARGS) "Variant of FORMAT that is safe against both
dangerous syntax configuration and errors while printing."))
(PROCLAIM '(NOTINLINE COPY-STREAM-TO-STREAM))
(PROGN (SYSTEM:PUT 'COPY-STREAM-TO-STREAM 'SYSTEM::SOURCE (CONS '((:FUNCTION COPY-STREAM-TO-STREAM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'COPY-STREAM-TO-STREAM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COPY-STREAM-TO-STREAM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 365) 208699 '(INPUT OUTPUT &KEY ELEMENT-TYPE 
BUFFER-SIZE LINEWISE PREFIX) "Copy the contents of the INPUT stream into the OUTPUT stream.
If LINEWISE is true, then read and copy the stream line by line, with an optional PREFIX.
Otherwise, using WRITE-SEQUENCE using a buffer of size BUFFER-SIZE."))
(PROCLAIM '(NOTINLINE CONCATENATE-FILES))
(PROGN (SYSTEM:PUT 'CONCATENATE-FILES 'SYSTEM::SOURCE (CONS '((:FUNCTION CONCATENATE-FILES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'CONCATENATE-FILES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CONCATENATE-FILES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 366) 208699 '(INPUTS OUTPUT) "create a new OUTPUT file the contents of which a the concatenate of the INPUTS files."))
(PROCLAIM '(NOTINLINE COPY-FILE))
(PROGN (SYSTEM:PUT 'COPY-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION COPY-FILE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
208699) (GET 'COPY-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COPY-FILE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 367) 208699 '(INPUT OUTPUT) "Copy contents of the INPUT file to the OUTPUT file"))
(PROCLAIM '(NOTINLINE SLURP-STREAM-STRING))
(PROGN (SYSTEM:PUT 'SLURP-STREAM-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION SLURP-STREAM-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'SLURP-STREAM-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SLURP-STREAM-STRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 368) 208699 '(INPUT &KEY (ELEMENT-TYPE 'CHARACTER) STRIPPED) 
"Read the contents of the INPUT stream as a string"))
(PROCLAIM '(NOTINLINE SLURP-STREAM-LINES))
(PROGN (SYSTEM:PUT 'SLURP-STREAM-LINES 'SYSTEM::SOURCE (CONS '((:FUNCTION SLURP-STREAM-LINES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'SLURP-STREAM-LINES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SLURP-STREAM-LINES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 369) 208699 '(INPUT &KEY COUNT) "Read the contents of the INPUT stream as a list of lines, return those lines.

Note: relies on the Lisp's READ-LINE, but additionally removes any remaining CR
from the line-ending if the file or stream had CR+LF but Lisp only removed LF.

Read no more than COUNT lines."))
(PROCLAIM '(NOTINLINE SLURP-STREAM-LINE))
(PROGN (SYSTEM:PUT 'SLURP-STREAM-LINE 'SYSTEM::SOURCE (CONS '((:FUNCTION SLURP-STREAM-LINE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'SLURP-STREAM-LINE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SLURP-STREAM-LINE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 370) 208699 '(INPUT &KEY (AT 0)) "Read the contents of the INPUT stream as a list of lines,
then return the ACCESS-AT of that list of lines using the AT specifier.
PATH defaults to 0, i.e. return the first line.
PATH is typically an integer, or a list of an integer and a function.
If PATH is NIL, it will return all the lines in the file.

The stream will not be read beyond the Nth lines,
where N is the index specified by path
if path is either an integer or a list that starts with an integer."))
(PROCLAIM '(NOTINLINE SLURP-STREAM-FORMS))
(PROGN (SYSTEM:PUT 'SLURP-STREAM-FORMS 'SYSTEM::SOURCE (CONS '((:FUNCTION SLURP-STREAM-FORMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'SLURP-STREAM-FORMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SLURP-STREAM-FORMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 371) 208699 '(INPUT &KEY COUNT) "Read the contents of the INPUT stream as a list of forms,
and return those forms.

If COUNT is null, read to the end of the stream;
if COUNT is an integer, stop after COUNT forms were read.

BEWARE: be sure to use WITH-SAFE-IO-SYNTAX, or some variant thereof"))
(PROCLAIM '(NOTINLINE SLURP-STREAM-FORM))
(PROGN (SYSTEM:PUT 'SLURP-STREAM-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION SLURP-STREAM-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'SLURP-STREAM-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SLURP-STREAM-FORM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 372) 208699 '(INPUT &KEY (AT 0)) "Read the contents of the INPUT stream as a list of forms,
then return the ACCESS-AT of these forms following the AT.
AT defaults to 0, i.e. return the first form.
AT is typically a list of integers.
If AT is NIL, it will return all the forms in the file.

The stream will not be read beyond the Nth form,
where N is the index specified by path,
if path is either an integer or a list that starts with an integer.

BEWARE: be sure to use WITH-SAFE-IO-SYNTAX, or some variant thereof"))
(PROCLAIM '(NOTINLINE READ-FILE-STRING))
(PROGN (SYSTEM:PUT 'READ-FILE-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION READ-FILE-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'READ-FILE-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'READ-FILE-STRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 373) 208699 '(FILE &REST KEYS) "Open FILE with option KEYS, read its contents as a string"))
(PROCLAIM '(NOTINLINE READ-FILE-LINES))
(PROGN (SYSTEM:PUT 'READ-FILE-LINES 'SYSTEM::SOURCE (CONS '((:FUNCTION READ-FILE-LINES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'READ-FILE-LINES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'READ-FILE-LINES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 374) 208699 '(FILE &REST KEYS) "Open FILE with option KEYS, read its contents as a list of lines
BEWARE: be sure to use WITH-SAFE-IO-SYNTAX, or some variant thereof"))
(PROCLAIM '(NOTINLINE READ-FILE-LINE))
(PROGN (SYSTEM:PUT 'READ-FILE-LINE 'SYSTEM::SOURCE (CONS '((:FUNCTION READ-FILE-LINE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'READ-FILE-LINE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'READ-FILE-LINE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 375) 208699 '(FILE &REST KEYS &KEY (AT 0) &ALLOW-OTHER-KEYS) 
"Open input FILE with option KEYS (except AT),
and read its contents as per SLURP-STREAM-LINE with given AT specifier.
BEWARE: be sure to use WITH-SAFE-IO-SYNTAX, or some variant thereof"))
(PROCLAIM '(NOTINLINE READ-FILE-FORMS))
(PROGN (SYSTEM:PUT 'READ-FILE-FORMS 'SYSTEM::SOURCE (CONS '((:FUNCTION READ-FILE-FORMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'READ-FILE-FORMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'READ-FILE-FORMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 377) 208699 '(FILE &REST KEYS &KEY COUNT &ALLOW-OTHER-KEYS) 
"Open input FILE with option KEYS (except COUNT),
and read its contents as per SLURP-STREAM-FORMS with given COUNT.
If COUNT is null, read to the end of the stream;
if COUNT is an integer, stop after COUNT forms were read.
BEWARE: be sure to use WITH-SAFE-IO-SYNTAX, or some variant thereof"))
(PROCLAIM '(NOTINLINE READ-FILE-FORM))
(PROGN (SYSTEM:PUT 'READ-FILE-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION READ-FILE-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'READ-FILE-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'READ-FILE-FORM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 379) 208699 '(FILE &REST KEYS &KEY (AT 0) &ALLOW-OTHER-KEYS) 
"Open input FILE with option KEYS (except AT),
and read its contents as per SLURP-STREAM-FORM with given AT specifier.
BEWARE: be sure to use WITH-SAFE-IO-SYNTAX, or some variant thereof"))
(PROCLAIM '(NOTINLINE SAFE-READ-FILE-LINE))
(PROGN (SYSTEM:PUT 'SAFE-READ-FILE-LINE 'SYSTEM::SOURCE (CONS '((:FUNCTION SAFE-READ-FILE-LINE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'SAFE-READ-FILE-LINE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SAFE-READ-FILE-LINE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 381) 208699 '(PATHNAME &REST KEYS &KEY (PACKAGE :CL) &ALLOW-OTHER-KEYS) 
"Reads the specified line from the top of a file using a safe standardized syntax.
Extracts the line using READ-FILE-LINE,
within an WITH-SAFE-IO-SYNTAX using the specified PACKAGE."))
(PROCLAIM '(NOTINLINE SAFE-READ-FILE-FORM))
(PROGN (SYSTEM:PUT 'SAFE-READ-FILE-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION SAFE-READ-FILE-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'SAFE-READ-FILE-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SAFE-READ-FILE-FORM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 383) 208699 '(PATHNAME &REST KEYS &KEY (PACKAGE :CL) &ALLOW-OTHER-KEYS) 
"Reads the specified form from the top of a file using a safe standardized syntax.
Extracts the form using READ-FILE-FORM,
within an WITH-SAFE-IO-SYNTAX using the specified PACKAGE."))
(PROCLAIM '(NOTINLINE EVAL-INPUT))
(PROGN (SYSTEM:PUT 'EVAL-INPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION EVAL-INPUT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
208699) (GET 'EVAL-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EVAL-INPUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 385) 208699 '(INPUT) "Portably read and evaluate forms from INPUT, return the last values."))
(PROCLAIM '(NOTINLINE EVAL-THUNK))
(PROGN (SYSTEM:PUT 'EVAL-THUNK 'SYSTEM::SOURCE (CONS '((:FUNCTION EVAL-THUNK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
208699) (GET 'EVAL-THUNK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EVAL-THUNK (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 387) 208699 '(THUNK) "Evaluate a THUNK of code:
If a function, FUNCALL it without arguments.
If a constant literal and not a sequence, return it.
If a cons or a symbol, EVAL it.
If a string, repeatedly read and evaluate from it, returning the last values."))
(PROCLAIM '(NOTINLINE STANDARD-EVAL-THUNK))
(PROGN (SYSTEM:PUT 'STANDARD-EVAL-THUNK 'SYSTEM::SOURCE (CONS '((:FUNCTION STANDARD-EVAL-THUNK) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 208699) (GET 
'STANDARD-EVAL-THUNK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STANDARD-EVAL-THUNK (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 388) 208699 '(THUNK &KEY (PACKAGE :CL)) "Like EVAL-THUNK, but in a more standardized evaluation context."))
(PROCLAIM '(NOTINLINE PRINTLN))
(PROGN (SYSTEM:PUT 'PRINTLN 'SYSTEM::SOURCE (CONS '((:FUNCTION PRINTLN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217314) (GET 'PRINTLN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PRINTLN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 390) 217314 '(X &OPTIONAL (STREAM *STANDARD-OUTPUT*)) "Variant of PRINC that also calls TERPRI afterwards"))
(PROCLAIM '(NOTINLINE WRITELN))
(PROGN (SYSTEM:PUT 'WRITELN 'SYSTEM::SOURCE (CONS '((:FUNCTION WRITELN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217314) (GET 'WRITELN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WRITELN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 391) 217314 '(X &REST KEYS &KEY (STREAM *STANDARD-OUTPUT*) &ALLOW-OTHER-KEYS) 
"Variant of WRITE that also calls TERPRI afterwards"))
(PROCLAIM '(NOTINLINE DEFAULT-TEMPORARY-DIRECTORY))
(PROGN (SYSTEM:PUT 'DEFAULT-TEMPORARY-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DEFAULT-TEMPORARY-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217739) (GET 'DEFAULT-TEMPORARY-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFAULT-TEMPORARY-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 392) 217739 'NIL "Return a default directory to use for temporary files"))
(PROGN (SYSTEM:PUT '*TEMPORARY-DIRECTORY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217739) (GET '*TEMPORARY-DIRECTORY* 'SYSTEM::SOURCE NIL))) (DEFVAR *TEMPORARY-DIRECTORY* 
NIL "User-configurable location for temporary files"))
(PROCLAIM '(NOTINLINE TEMPORARY-DIRECTORY))
(PROGN (SYSTEM:PUT 'TEMPORARY-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION TEMPORARY-DIRECTORY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 217739) (GET 
'TEMPORARY-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TEMPORARY-DIRECTORY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 393) 217739 'NIL "Return a directory to use for temporary files"))
(PROCLAIM '(NOTINLINE SETUP-TEMPORARY-DIRECTORY))
(PROGN (SYSTEM:PUT 'SETUP-TEMPORARY-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SETUP-TEMPORARY-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217739) (GET 'SETUP-TEMPORARY-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SETUP-TEMPORARY-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 394) 217739 'NIL "Configure a default temporary directory to use."))
(PROCLAIM '(NOTINLINE CALL-WITH-TEMPORARY-FILE))
(PROGN (SYSTEM:PUT 'CALL-WITH-TEMPORARY-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-TEMPORARY-FILE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 217739) (GET 
'CALL-WITH-TEMPORARY-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-TEMPORARY-FILE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 395) 217739 '(THUNK &KEY (WANT-STREAM-P 
T) (WANT-PATHNAME-P T) (DIRECTION :IO) KEEP AFTER DIRECTORY (TYPE "tmp" TYPEP) PREFIX 
(SUFFIX (WHEN TYPEP "-tmp")) (ELEMENT-TYPE *DEFAULT-STREAM-ELEMENT-TYPE*) (EXTERNAL-FORMAT 
*UTF-8-EXTERNAL-FORMAT*)) "Call a THUNK with stream and/or pathname arguments identifying a temporary file.

The temporary file's pathname will be based on concatenating
PREFIX (or \"tmp\" if it's NIL), a random alphanumeric string,
and optional SUFFIX (defaults to \"-tmp\" if a type was provided)
and TYPE (defaults to \"tmp\", using a dot as separator if not NIL),
within DIRECTORY (defaulting to the TEMPORARY-DIRECTORY) if the PREFIX isn't absolute.

The file will be open with specified DIRECTION (defaults to :IO),
ELEMENT-TYPE (defaults to *DEFAULT-STREAM-ELEMENT-TYPE*) and
EXTERNAL-FORMAT (defaults to *UTF-8-EXTERNAL-FORMAT*).
If WANT-STREAM-P is true (the defaults to T), then THUNK will then be CALL-FUNCTION'ed
with the stream and the pathname (if WANT-PATHNAME-P is true, defaults to T),
and stream will be closed after the THUNK exits (either normally or abnormally).
If WANT-STREAM-P is false, then WANT-PATHAME-P must be true, and then
THUNK is only CALL-FUNCTION'ed after the stream is closed, with the pathname as argument.
Upon exit of THUNK, the AFTER thunk if defined is CALL-FUNCTION'ed with the pathname as argument.
If AFTER is defined, its results are returned, otherwise, the results of THUNK are returned.
Finally, the file will be deleted, unless the KEEP argument when CALL-FUNCTION'ed returns true."))
(PROGN (SYSTEM:PUT 'WITH-TEMPORARY-FILE 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217739) (GET 'WITH-TEMPORARY-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-TEMPORARY-FILE 
(SYSTEM:MAKE-MACRO 'WITH-TEMPORARY-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
399)) 217739 '((&KEY (STREAM (GENSYM "STREAM") STREAMP) (PATHNAME (GENSYM "PATHNAME") 
PATHNAMEP) DIRECTORY PREFIX SUFFIX TYPE KEEP DIRECTION ELEMENT-TYPE EXTERNAL-FORMAT) 
&BODY BODY) "Evaluate BODY where the symbols specified by keyword arguments
STREAM and PATHNAME (if respectively specified) are bound corresponding
to a newly created temporary file ready for I/O, as per CALL-WITH-TEMPORARY-FILE.
At least one of STREAM or PATHNAME must be specified.
If the STREAM is not specified, it will be closed before the BODY is evaluated.
If STREAM is specified, then the :CLOSE-STREAM label if it appears in the BODY,
separates forms run before and after the stream is closed.
The values of the last form of the BODY (not counting the separating :CLOSE-STREAM) are returned.
Upon success, the KEEP form is evaluated and the file is is deleted unless it evaluates to TRUE."))
(PROCLAIM '(NOTINLINE GET-TEMPORARY-FILE))
(PROGN (SYSTEM:PUT 'GET-TEMPORARY-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION GET-TEMPORARY-FILE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 217739) (GET 
'GET-TEMPORARY-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GET-TEMPORARY-FILE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 400) 217739 '(&KEY DIRECTORY PREFIX SUFFIX TYPE (KEEP T)) NIL))
(PROCLAIM '(NOTINLINE ADD-PATHNAME-SUFFIX))
(PROGN (SYSTEM:PUT 'ADD-PATHNAME-SUFFIX 'SYSTEM::SOURCE (CONS '((:FUNCTION ADD-PATHNAME-SUFFIX) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 217739) (GET 
'ADD-PATHNAME-SUFFIX 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ADD-PATHNAME-SUFFIX (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 402) 217739 '(PATHNAME SUFFIX &REST KEYS) "Add a SUFFIX to the name of a PATHNAME, return a new pathname.
Further KEYS can be passed to MAKE-PATHNAME."))
(PROCLAIM '(NOTINLINE TMPIZE-PATHNAME))
(PROGN (SYSTEM:PUT 'TMPIZE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION TMPIZE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 217739) (GET 
'TMPIZE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TMPIZE-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 403) 217739 '(X) "Return a new pathname modified from X by adding a trivial random suffix.
A new empty file with said temporary pathname is created, to ensure there is no
clash with any concurrent process attempting the same thing."))
(PROCLAIM '(NOTINLINE CALL-WITH-STAGING-PATHNAME))
(PROGN (SYSTEM:PUT 'CALL-WITH-STAGING-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-STAGING-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217739) (GET 'CALL-WITH-STAGING-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-STAGING-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 404) 217739 '(PATHNAME FUN) "Calls FUN with a staging pathname, and atomically
renames the staging pathname to the PATHNAME in the end.
NB: this protects only against failure of the program, not against concurrent attempts.
For the latter case, we ought pick a random suffix and atomically open it."))
(PROGN (SYSTEM:PUT 'WITH-STAGING-PATHNAME 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
217739) (GET 'WITH-STAGING-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-STAGING-PATHNAME 
(SYSTEM:MAKE-MACRO 'WITH-STAGING-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
405)) 217739 '((PATHNAME-VAR &OPTIONAL (PATHNAME-VALUE PATHNAME-VAR)) &BODY BODY) 
"Trivial syntax wrapper for CALL-WITH-STAGING-PATHNAME"))
(PROCLAIM '(NOTINLINE FILE-STREAM-P))
(PROGN (SYSTEM:PUT 'FILE-STREAM-P 'SYSTEM::SOURCE (CONS '((:FUNCTION FILE-STREAM-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 228353) (GET 
'FILE-STREAM-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FILE-STREAM-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 406) 228353 '(STREAM) NIL))
(PROCLAIM '(NOTINLINE FILE-OR-SYNONYM-STREAM-P))
(PROGN (SYSTEM:PUT 'FILE-OR-SYNONYM-STREAM-P 'SYSTEM::SOURCE (CONS '((:FUNCTION FILE-OR-SYNONYM-STREAM-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 228353) (GET 
'FILE-OR-SYNONYM-STREAM-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FILE-OR-SYNONYM-STREAM-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 407) 228353 '(STREAM) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 408))
(SYSTEM:%IN-PACKAGE "UIOP/IMAGE")
(PROGN (SYSTEM:PUT '*LISP-INTERACTION* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*LISP-INTERACTION* 'SYSTEM::SOURCE NIL))) (DEFVAR *LISP-INTERACTION* 
T "Is this an interactive Lisp environment, or is it batch processing?"))
(PROGN (SYSTEM:PUT '*COMMAND-LINE-ARGUMENTS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 229674) (GET 
'*COMMAND-LINE-ARGUMENTS* 'SYSTEM::SOURCE NIL))) (DEFVAR *COMMAND-LINE-ARGUMENTS* 
NIL "Command-line arguments"))
(PROGN (SYSTEM:PUT '*IMAGE-DUMPED-P* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*IMAGE-DUMPED-P* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMAGE-DUMPED-P* NIL 
"Is this a dumped image? As a standalone executable?"))
(PROGN (SYSTEM:PUT '*IMAGE-RESTORE-HOOK* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*IMAGE-RESTORE-HOOK* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMAGE-RESTORE-HOOK* 
NIL "Functions to call (in reverse order) when the image is restored"))
(PROGN (SYSTEM:PUT '*IMAGE-RESTORED-P* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*IMAGE-RESTORED-P* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMAGE-RESTORED-P* 
NIL "Has the image been restored? A boolean, or :in-progress while restoring, :in-regress while dumping"))
(PROGN (SYSTEM:PUT '*IMAGE-PRELUDE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*IMAGE-PRELUDE* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMAGE-PRELUDE* NIL 
"a form to evaluate, or string containing forms to read and evaluate
when the image is restarted, but before the entry point is called."))
(PROGN (SYSTEM:PUT '*IMAGE-ENTRY-POINT* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*IMAGE-ENTRY-POINT* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMAGE-ENTRY-POINT* 
NIL "a function with which to restart the dumped image when execution is restored from it."))
(PROGN (SYSTEM:PUT '*IMAGE-POSTLUDE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*IMAGE-POSTLUDE* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMAGE-POSTLUDE* NIL 
"a form to evaluate, or string containing forms to read and evaluate
before the image dump hooks are called and before the image is dumped."))
(PROGN (SYSTEM:PUT '*IMAGE-DUMP-HOOK* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
229674) (GET '*IMAGE-DUMP-HOOK* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMAGE-DUMP-HOOK* 
NIL "Functions to call (in order) when before an image is dumped"))
(PROGN (SYSTEM:PUT 'FATAL-CONDITION 'SYSTEM::SOURCE (CONS '(FATAL-CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
230848) (GET 'FATAL-CONDITION 'SYSTEM::SOURCE NIL))) (DEFTYPE FATAL-CONDITION NIL 
'(AND SERIOUS-CONDITION)))
(PROCLAIM '(NOTINLINE QUIT))
(PROGN (SYSTEM:PUT 'QUIT 'SYSTEM::SOURCE (CONS '((:FUNCTION QUIT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
231011) (GET 'QUIT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'QUIT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 409) 231011 '(&OPTIONAL (CODE 0) (FINISH-OUTPUT T)) "Quits from the Lisp world, with the given exit status if provided.
This is designed to abstract away the implementation specific quit forms."))
(PROCLAIM '(NOTINLINE DIE))
(PROGN (SYSTEM:PUT 'DIE 'SYSTEM::SOURCE (CONS '((:FUNCTION DIE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
231011) (GET 'DIE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 410) 231011 '(CODE FORMAT &REST ARGUMENTS) "Die in error with some error message"))
(PROCLAIM '(NOTINLINE RAW-PRINT-BACKTRACE))
(PROGN (SYSTEM:PUT 'RAW-PRINT-BACKTRACE 'SYSTEM::SOURCE (CONS '((:FUNCTION RAW-PRINT-BACKTRACE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 231011) (GET 
'RAW-PRINT-BACKTRACE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RAW-PRINT-BACKTRACE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 413) 231011 '(&KEY (STREAM *DEBUG-IO*) COUNT CONDITION) "Print a backtrace, directly accessing the implementation"))
(PROCLAIM '(NOTINLINE PRINT-BACKTRACE))
(PROGN (SYSTEM:PUT 'PRINT-BACKTRACE 'SYSTEM::SOURCE (CONS '((:FUNCTION PRINT-BACKTRACE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 231011) (GET 
'PRINT-BACKTRACE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PRINT-BACKTRACE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 414) 231011 '(&REST KEYS &KEY STREAM COUNT CONDITION) "Print a backtrace"))
(PROCLAIM '(NOTINLINE PRINT-CONDITION-BACKTRACE))
(PROGN (SYSTEM:PUT 'PRINT-CONDITION-BACKTRACE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PRINT-CONDITION-BACKTRACE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
231011) (GET 'PRINT-CONDITION-BACKTRACE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PRINT-CONDITION-BACKTRACE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 417) 231011 '(CONDITION &KEY (STREAM 
*STDERR*) COUNT) "Print a condition after a backtrace triggered by that condition"))
(PROCLAIM '(NOTINLINE FATAL-CONDITION-P))
(PROGN (SYSTEM:PUT 'FATAL-CONDITION-P 'SYSTEM::SOURCE (CONS '((:FUNCTION FATAL-CONDITION-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 231011) (GET 
'FATAL-CONDITION-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FATAL-CONDITION-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 418) 231011 '(CONDITION) "Is the CONDITION fatal?"))
(PROCLAIM '(NOTINLINE HANDLE-FATAL-CONDITION))
(PROGN (SYSTEM:PUT 'HANDLE-FATAL-CONDITION 'SYSTEM::SOURCE (CONS '((:FUNCTION HANDLE-FATAL-CONDITION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 231011) (GET 
'HANDLE-FATAL-CONDITION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'HANDLE-FATAL-CONDITION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 419) 231011 '(CONDITION) "Handle a fatal CONDITION:
depending on whether *LISP-INTERACTION* is set, enter debugger or die"))
(PROCLAIM '(NOTINLINE CALL-WITH-FATAL-CONDITION-HANDLER))
(PROGN (SYSTEM:PUT 'CALL-WITH-FATAL-CONDITION-HANDLER 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-FATAL-CONDITION-HANDLER) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
231011) (GET 'CALL-WITH-FATAL-CONDITION-HANDLER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'CALL-WITH-FATAL-CONDITION-HANDLER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
420) 231011 '(THUNK) "Call THUNK in a context where fatal conditions are appropriately handled"))
(PROGN (SYSTEM:PUT 'WITH-FATAL-CONDITION-HANDLER 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
231011) (GET 'WITH-FATAL-CONDITION-HANDLER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-FATAL-CONDITION-HANDLER 
(SYSTEM:MAKE-MACRO 'WITH-FATAL-CONDITION-HANDLER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
421)) 231011 '((&OPTIONAL) &BODY BODY) "Execute BODY in a context where fatal conditions are appropriately handled"))
(PROCLAIM '(NOTINLINE SHELL-BOOLEAN-EXIT))
(PROGN (SYSTEM:PUT 'SHELL-BOOLEAN-EXIT 'SYSTEM::SOURCE (CONS '((:FUNCTION SHELL-BOOLEAN-EXIT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 231011) (GET 
'SHELL-BOOLEAN-EXIT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SHELL-BOOLEAN-EXIT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 422) 231011 '(X) "Quit with a return code that is 0 iff argument X is true"))
(PROCLAIM '(NOTINLINE REGISTER-IMAGE-RESTORE-HOOK))
(PROGN (SYSTEM:PUT 'REGISTER-IMAGE-RESTORE-HOOK 'SYSTEM::SOURCE (CONS '((:FUNCTION 
REGISTER-IMAGE-RESTORE-HOOK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
237233) (GET 'REGISTER-IMAGE-RESTORE-HOOK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-IMAGE-RESTORE-HOOK 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 423) 237233 '(HOOK &OPTIONAL (CALL-NOW-P 
T)) "Regiter a hook function to be run when restoring a dumped image"))
(PROCLAIM '(NOTINLINE REGISTER-IMAGE-DUMP-HOOK))
(PROGN (SYSTEM:PUT 'REGISTER-IMAGE-DUMP-HOOK 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTER-IMAGE-DUMP-HOOK) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 237233) (GET 
'REGISTER-IMAGE-DUMP-HOOK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-IMAGE-DUMP-HOOK 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 424) 237233 '(HOOK &OPTIONAL (CALL-NOW-P 
NIL)) "Register a the hook function to be run before to dump an image"))
(PROCLAIM '(NOTINLINE CALL-IMAGE-RESTORE-HOOK))
(PROGN (SYSTEM:PUT 'CALL-IMAGE-RESTORE-HOOK 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-IMAGE-RESTORE-HOOK) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 237233) (GET 
'CALL-IMAGE-RESTORE-HOOK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-IMAGE-RESTORE-HOOK 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 425) 237233 'NIL "Call the hook functions registered to be run when restoring a dumped image"))
(PROCLAIM '(NOTINLINE CALL-IMAGE-DUMP-HOOK))
(PROGN (SYSTEM:PUT 'CALL-IMAGE-DUMP-HOOK 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-IMAGE-DUMP-HOOK) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 237233) (GET 
'CALL-IMAGE-DUMP-HOOK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-IMAGE-DUMP-HOOK (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 426) 237233 'NIL "Call the hook functions registered to be run before to dump an image"))
(PROCLAIM '(NOTINLINE RAW-COMMAND-LINE-ARGUMENTS))
(PROGN (SYSTEM:PUT 'RAW-COMMAND-LINE-ARGUMENTS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
RAW-COMMAND-LINE-ARGUMENTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
238011) (GET 'RAW-COMMAND-LINE-ARGUMENTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RAW-COMMAND-LINE-ARGUMENTS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 427) 238011 'NIL "Find what the actual command line for this process was."))
(PROCLAIM '(NOTINLINE COMMAND-LINE-ARGUMENTS))
(PROGN (SYSTEM:PUT 'COMMAND-LINE-ARGUMENTS 'SYSTEM::SOURCE (CONS '((:FUNCTION COMMAND-LINE-ARGUMENTS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 238011) (GET 
'COMMAND-LINE-ARGUMENTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMMAND-LINE-ARGUMENTS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 428) 238011 '(&OPTIONAL (ARGUMENTS 
(RAW-COMMAND-LINE-ARGUMENTS))) "Extract user arguments from command-line invocation of current process.
Assume the calling conventions of a generated script that uses --
if we are not called from a directly executable image."))
(PROCLAIM '(NOTINLINE ARGV0))
(PROGN (SYSTEM:PUT 'ARGV0 'SYSTEM::SOURCE (CONS '((:FUNCTION ARGV0) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
238011) (GET 'ARGV0 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ARGV0 (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 429) 238011 'NIL "On supported implementations (most that matter), or when invoked by a proper wrapper script,
return a string that for the name with which the program was invoked, i.e. argv[0] in C.
Otherwise, return NIL."))
(PROCLAIM '(NOTINLINE SETUP-COMMAND-LINE-ARGUMENTS))
(PROGN (SYSTEM:PUT 'SETUP-COMMAND-LINE-ARGUMENTS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SETUP-COMMAND-LINE-ARGUMENTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
238011) (GET 'SETUP-COMMAND-LINE-ARGUMENTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SETUP-COMMAND-LINE-ARGUMENTS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 430) 238011 'NIL NIL))
(PROCLAIM '(NOTINLINE RESTORE-IMAGE))
(PROGN (SYSTEM:PUT 'RESTORE-IMAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION RESTORE-IMAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 238011) (GET 
'RESTORE-IMAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESTORE-IMAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 431) 238011 '(&KEY (LISP-INTERACTION *LISP-INTERACTION*) (RESTORE-HOOK 
*IMAGE-RESTORE-HOOK*) (PRELUDE *IMAGE-PRELUDE*) (ENTRY-POINT *IMAGE-ENTRY-POINT*) 
(IF-ALREADY-RESTORED '(CERROR "RUN RESTORE-IMAGE ANYWAY"))) "From a freshly restarted Lisp image, restore the saved Lisp environment
by setting appropriate variables, running various hooks, and calling any specified entry point.

If the image has already been restored or is already being restored, as per *IMAGE-RESTORED-P*,
call the IF-ALREADY-RESTORED error handler (by default, a continuable error), and do return
immediately to the surrounding restore process if allowed to continue.

Then, comes the restore process itself:
First, call each function in the RESTORE-HOOK,
in the order they were registered with REGISTER-IMAGE-RESTORE-HOOK.
Second, evaluate the prelude, which is often Lisp text that is read,
as per EVAL-INPUT.
Third, call the ENTRY-POINT function, if any is specified, with no argument.

The restore process happens in a WITH-FATAL-CONDITION-HANDLER, so that if LISP-INTERACTION is NIL,
any unhandled error leads to a backtrace and an exit with an error status.
If LISP-INTERACTION is NIL, the process also exits when no error occurs:
if neither restart nor entry function is provided, the program will exit with status 0 (success);
if a function was provided, the program will exit after the function returns (if it returns),
with status 0 if and only if the primary return value of result is generalized boolean true,
and with status 1 if this value is NIL.

If LISP-INTERACTION is true, unhandled errors will take you to the debugger, and the result
of the function will be returned rather than interpreted as a boolean designating an exit code."))
(PROCLAIM '(NOTINLINE DUMP-IMAGE))
(PROGN (SYSTEM:PUT 'DUMP-IMAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION DUMP-IMAGE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
243571) (GET 'DUMP-IMAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DUMP-IMAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 433) 243571 '(FILENAME &KEY OUTPUT-NAME EXECUTABLE (POSTLUDE 
*IMAGE-POSTLUDE*) (DUMP-HOOK *IMAGE-DUMP-HOOK*)) "Dump an image of the current Lisp environment at pathname FILENAME, with various options.

First, finalize the image, by evaluating the POSTLUDE as per EVAL-INPUT, then calling each of
 the functions in DUMP-HOOK, in reverse order of registration by REGISTER-IMAGE-DUMP-HOOK.

If EXECUTABLE is true, create an standalone executable program that calls RESTORE-IMAGE on startup.

Pass various implementation-defined options, such as PREPEND-SYMBOLS and PURITY on CCL,
or COMPRESSION on SBCL, and APPLICATION-TYPE on SBCL/Windows."))
(PROCLAIM '(NOTINLINE CREATE-IMAGE))
(PROGN (SYSTEM:PUT 'CREATE-IMAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION CREATE-IMAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 243571) (GET 
'CREATE-IMAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CREATE-IMAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 434) 243571 '(DESTINATION LISP-OBJECT-FILES &KEY KIND OUTPUT-NAME 
PROLOGUE-CODE EPILOGUE-CODE EXTRA-OBJECT-FILES (PRELUDE NIL PRELUDEP) (POSTLUDE NIL 
POSTLUDEP) (ENTRY-POINT NIL ENTRY-POINT-P) BUILD-ARGS NO-UIOP) "On ECL, create an executable at pathname DESTINATION from the specified OBJECT-FILES and options"))
(MAP NIL 'REGISTER-IMAGE-RESTORE-HOOK '(SETUP-STDIN SETUP-STDOUT SETUP-STDERR SETUP-COMMAND-LINE-ARGUMENTS 
SETUP-TEMPORARY-DIRECTORY DETECT-OS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 435))
(SYSTEM:%IN-PACKAGE "UIOP/LISP-BUILD")
(PROGN (SYSTEM:PUT '*COMPILE-FILE-WARNINGS-BEHAVIOUR* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 253904) 
(GET '*COMPILE-FILE-WARNINGS-BEHAVIOUR* 'SYSTEM::SOURCE NIL))) (DEFVAR *COMPILE-FILE-WARNINGS-BEHAVIOUR* 
(OR :WARN) "How should ASDF react if it encounters a warning when compiling a file?
Valid values are :error, :warn, and :ignore."))
(PROGN (SYSTEM:PUT '*COMPILE-FILE-FAILURE-BEHAVIOUR* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 253904) 
(GET '*COMPILE-FILE-FAILURE-BEHAVIOUR* 'SYSTEM::SOURCE NIL))) (DEFVAR *COMPILE-FILE-FAILURE-BEHAVIOUR* 
(OR :WARN) "How should ASDF react if it encounters a failure (per the ANSI spec of COMPILE-FILE)
when compiling a file, which includes any non-style-warning warning.
Valid values are :error, :warn, and :ignore.
Note that ASDF ALWAYS raises an error if it fails to create an output file when compiling."))
(PROGN (SYSTEM:PUT '*BASE-BUILD-DIRECTORY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 253904) (GET 
'*BASE-BUILD-DIRECTORY* 'SYSTEM::SOURCE NIL))) (DEFVAR *BASE-BUILD-DIRECTORY* NIL 
"When set to a non-null value, it should be an absolute directory pathname,
which will serve as the *DEFAULT-PATHNAME-DEFAULTS* around a COMPILE-FILE,
what more while the input-file is shortened if possible to ENOUGH-PATHNAME relative to it.
This can help you produce more deterministic output for FASLs."))
(PROGN (SYSTEM:PUT '*OPTIMIZATION-SETTINGS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 254873) (GET 
'*OPTIMIZATION-SETTINGS* 'SYSTEM::SOURCE NIL))) (DEFVAR *OPTIMIZATION-SETTINGS* NIL 
"Optimization settings to be used by PROCLAIM-OPTIMIZATION-SETTINGS"))
(PROGN (SYSTEM:PUT '*PREVIOUS-OPTIMIZATION-SETTINGS* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 254873) 
(GET '*PREVIOUS-OPTIMIZATION-SETTINGS* 'SYSTEM::SOURCE NIL))) (DEFVAR *PREVIOUS-OPTIMIZATION-SETTINGS* 
NIL "Optimization settings saved by PROCLAIM-OPTIMIZATION-SETTINGS"))
(PROGN (SYSTEM:PUT '+OPTIMIZATION-VARIABLES+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 254873) (GET 
'+OPTIMIZATION-VARIABLES+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +OPTIMIZATION-VARIABLES+ 
(OR '(SYSTEM:*SPEED* SYSTEM:*SPACE* SYSTEM:*SAFETY* SYSTEM:*DEBUG*))))
(PROCLAIM '(NOTINLINE GET-OPTIMIZATION-SETTINGS))
(PROGN (SYSTEM:PUT 'GET-OPTIMIZATION-SETTINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
GET-OPTIMIZATION-SETTINGS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
254873) (GET 'GET-OPTIMIZATION-SETTINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GET-OPTIMIZATION-SETTINGS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 436) 254873 'NIL "Get current compiler optimization settings, ready to PROCLAIM again"))
(PROCLAIM '(NOTINLINE PROCLAIM-OPTIMIZATION-SETTINGS))
(PROGN (SYSTEM:PUT 'PROCLAIM-OPTIMIZATION-SETTINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PROCLAIM-OPTIMIZATION-SETTINGS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
254873) (GET 'PROCLAIM-OPTIMIZATION-SETTINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'PROCLAIM-OPTIMIZATION-SETTINGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 437) 
254873 'NIL "Proclaim the optimization settings in *OPTIMIZATION-SETTINGS*"))
(PROGN (SYSTEM:PUT 'WITH-OPTIMIZATION-SETTINGS 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
254873) (GET 'WITH-OPTIMIZATION-SETTINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-OPTIMIZATION-SETTINGS 
(SYSTEM:MAKE-MACRO 'WITH-OPTIMIZATION-SETTINGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
438)) 254873 '((&OPTIONAL (SETTINGS *OPTIMIZATION-SETTINGS*)) &BODY BODY) NIL))
(PROGN (SYSTEM:PUT '*USUAL-UNINTERESTING-CONDITIONS* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 258640) 
(GET '*USUAL-UNINTERESTING-CONDITIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *USUAL-UNINTERESTING-CONDITIONS* 
(APPEND '("No generic function ~S present when encountering macroexpansion of defmethod. Assuming it will be an instance of standard-generic-function.")) 
"A suggested value to which to set or bind *uninteresting-conditions*."))
(PROGN (SYSTEM:PUT '*UNINTERESTING-CONDITIONS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 258640) (GET 
'*UNINTERESTING-CONDITIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *UNINTERESTING-CONDITIONS* 
'NIL "Conditions that may be skipped while compiling or loading Lisp code."))
(PROGN (SYSTEM:PUT '*UNINTERESTING-COMPILER-CONDITIONS* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 258640) 
(GET '*UNINTERESTING-COMPILER-CONDITIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *UNINTERESTING-COMPILER-CONDITIONS* 
'NIL "Additional conditions that may be skipped while compiling Lisp code."))
(PROGN (SYSTEM:PUT '*UNINTERESTING-LOADER-CONDITIONS* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 258640) 
(GET '*UNINTERESTING-LOADER-CONDITIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *UNINTERESTING-LOADER-CONDITIONS* 
(APPEND '("Overwriting already existing readtable ~S." #(#436? :ASDF-FINALIZERS))) 
"Additional conditions that may be skipped while loading Lisp code."))
(PROCLAIM '(NOTINLINE CALL-WITH-MUFFLED-COMPILER-CONDITIONS))
(PROGN (SYSTEM:PUT 'CALL-WITH-MUFFLED-COMPILER-CONDITIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-MUFFLED-COMPILER-CONDITIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
261132) (GET 'CALL-WITH-MUFFLED-COMPILER-CONDITIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'CALL-WITH-MUFFLED-COMPILER-CONDITIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
439) 261132 '(THUNK) "Call given THUNK in a context where uninteresting conditions and compiler conditions are muffled"))
(PROGN (SYSTEM:PUT 'WITH-MUFFLED-COMPILER-CONDITIONS 'SYSTEM::SOURCE (CONS '(:MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 261132) (GET 
'WITH-MUFFLED-COMPILER-CONDITIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-MUFFLED-COMPILER-CONDITIONS 
(SYSTEM:MAKE-MACRO 'WITH-MUFFLED-COMPILER-CONDITIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
440)) 261132 '((&OPTIONAL) &BODY BODY) "Trivial syntax for CALL-WITH-MUFFLED-COMPILER-CONDITIONS"))
(PROCLAIM '(NOTINLINE CALL-WITH-MUFFLED-LOADER-CONDITIONS))
(PROGN (SYSTEM:PUT 'CALL-WITH-MUFFLED-LOADER-CONDITIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-MUFFLED-LOADER-CONDITIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
261132) (GET 'CALL-WITH-MUFFLED-LOADER-CONDITIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'CALL-WITH-MUFFLED-LOADER-CONDITIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
441) 261132 '(THUNK) "Call given THUNK in a context where uninteresting conditions and loader conditions are muffled"))
(PROGN (SYSTEM:PUT 'WITH-MUFFLED-LOADER-CONDITIONS 'SYSTEM::SOURCE (CONS '(:MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 261132) (GET 
'WITH-MUFFLED-LOADER-CONDITIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-MUFFLED-LOADER-CONDITIONS 
(SYSTEM:MAKE-MACRO 'WITH-MUFFLED-LOADER-CONDITIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
442)) 261132 '((&OPTIONAL) &BODY BODY) "Trivial syntax for CALL-WITH-MUFFLED-LOADER-CONDITIONS"))
(SYSTEM:PUT 'COMPILE-CONDITION 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-CONDITION 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-CONDITION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-CONDITION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 443))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (COMPILE-CONDITION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 262152) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-CONDITION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 447))
(SYSTEM:PUT 'COMPILE-FILE-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-FILE-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-FILE-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-FILE-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 451))
(SYSTEM:PUT 'COMPILE-WARNED-WARNING 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-WARNED-WARNING 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-WARNED-WARNING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-WARNED-WARNING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 452))
(SYSTEM:PUT 'COMPILE-WARNED-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-WARNED-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-WARNED-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-WARNED-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 453))
(SYSTEM:PUT 'COMPILE-FAILED-WARNING 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-FAILED-WARNING 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-FAILED-WARNING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-FAILED-WARNING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 454))
(SYSTEM:PUT 'COMPILE-FAILED-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-FAILED-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-FAILED-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'COMPILE-FAILED-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 455))
(PROCLAIM '(NOTINLINE CHECK-LISP-COMPILE-WARNINGS))
(PROGN (SYSTEM:PUT 'CHECK-LISP-COMPILE-WARNINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CHECK-LISP-COMPILE-WARNINGS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'CHECK-LISP-COMPILE-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHECK-LISP-COMPILE-WARNINGS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 456) 262152 '(WARNINGS-P FAILURE-P 
&OPTIONAL CONTEXT-FORMAT CONTEXT-ARGUMENTS) "Given the warnings or failures as resulted from COMPILE-FILE or checking deferred warnings,
raise an error or warning as appropriate"))
(PROCLAIM '(NOTINLINE CHECK-LISP-COMPILE-RESULTS))
(PROGN (SYSTEM:PUT 'CHECK-LISP-COMPILE-RESULTS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CHECK-LISP-COMPILE-RESULTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
262152) (GET 'CHECK-LISP-COMPILE-RESULTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHECK-LISP-COMPILE-RESULTS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 457) 262152 '(OUTPUT WARNINGS-P FAILURE-P 
&OPTIONAL CONTEXT-FORMAT CONTEXT-ARGUMENTS) "Given the results of COMPILE-FILE, raise an error or warning as appropriate"))
(PROCLAIM '(NOTINLINE REIFY-SIMPLE-SEXP))
(PROGN (SYSTEM:PUT 'REIFY-SIMPLE-SEXP 'SYSTEM::SOURCE (CONS '((:FUNCTION REIFY-SIMPLE-SEXP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'REIFY-SIMPLE-SEXP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REIFY-SIMPLE-SEXP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 458) 265065 '(SEXP) "Given a simple SEXP, return a representation of it as a portable SEXP.
Simple means made of symbols, numbers, characters, simple-strings, pathnames, cons cells."))
(PROCLAIM '(NOTINLINE UNREIFY-SIMPLE-SEXP))
(PROGN (SYSTEM:PUT 'UNREIFY-SIMPLE-SEXP 'SYSTEM::SOURCE (CONS '((:FUNCTION UNREIFY-SIMPLE-SEXP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'UNREIFY-SIMPLE-SEXP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNREIFY-SIMPLE-SEXP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 459) 265065 '(SEXP) "Given the portable output of REIFY-SIMPLE-SEXP, return the simple SEXP it represents"))
(PROCLAIM '(NOTINLINE REIFY-DEFERRED-WARNINGS))
(PROGN (SYSTEM:PUT 'REIFY-DEFERRED-WARNINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION REIFY-DEFERRED-WARNINGS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'REIFY-DEFERRED-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REIFY-DEFERRED-WARNINGS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 460) 265065 'NIL NIL))
(PROCLAIM '(NOTINLINE UNREIFY-DEFERRED-WARNINGS))
(PROGN (SYSTEM:PUT 'UNREIFY-DEFERRED-WARNINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
UNREIFY-DEFERRED-WARNINGS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
265065) (GET 'UNREIFY-DEFERRED-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNREIFY-DEFERRED-WARNINGS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 461) 265065 '(REIFIED-DEFERRED-WARNINGS) 
"given a S-expression created by REIFY-DEFERRED-WARNINGS, reinstantiate the corresponding
deferred warnings as to be handled at the end of the current WITH-COMPILATION-UNIT.
Handle any warning that has been resolved already,
such as an undefined function that has been defined since.
One of three functions required for deferred-warnings support in ASDF."))
(PROCLAIM '(NOTINLINE RESET-DEFERRED-WARNINGS))
(PROGN (SYSTEM:PUT 'RESET-DEFERRED-WARNINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION RESET-DEFERRED-WARNINGS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'RESET-DEFERRED-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESET-DEFERRED-WARNINGS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 462) 265065 'NIL NIL))
(PROCLAIM '(NOTINLINE SAVE-DEFERRED-WARNINGS))
(PROGN (SYSTEM:PUT 'SAVE-DEFERRED-WARNINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION SAVE-DEFERRED-WARNINGS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'SAVE-DEFERRED-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SAVE-DEFERRED-WARNINGS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 463) 265065 '(WARNINGS-FILE) "Save forward reference conditions so they may be issued at a latter time,
possibly in a different process."))
(PROCLAIM '(NOTINLINE WARNINGS-FILE-TYPE))
(PROGN (SYSTEM:PUT 'WARNINGS-FILE-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION WARNINGS-FILE-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'WARNINGS-FILE-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WARNINGS-FILE-TYPE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 465) 265065 '(&OPTIONAL IMPLEMENTATION-TYPE) "The pathname type for warnings files on given IMPLEMENTATION-TYPE,
where NIL designates the current one"))
(PROGN (SYSTEM:PUT '*WARNINGS-FILE-TYPE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
265065) (GET '*WARNINGS-FILE-TYPE* 'SYSTEM::SOURCE NIL))) (DEFVAR *WARNINGS-FILE-TYPE* 
NIL "Pathname type for warnings files, or NIL if disabled"))
(PROCLAIM '(NOTINLINE ENABLE-DEFERRED-WARNINGS-CHECK))
(PROGN (SYSTEM:PUT 'ENABLE-DEFERRED-WARNINGS-CHECK 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENABLE-DEFERRED-WARNINGS-CHECK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
265065) (GET 'ENABLE-DEFERRED-WARNINGS-CHECK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'ENABLE-DEFERRED-WARNINGS-CHECK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 466) 
265065 'NIL "Enable the saving of deferred warnings"))
(PROCLAIM '(NOTINLINE DISABLE-DEFERRED-WARNINGS-CHECK))
(PROGN (SYSTEM:PUT 'DISABLE-DEFERRED-WARNINGS-CHECK 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DISABLE-DEFERRED-WARNINGS-CHECK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
265065) (GET 'DISABLE-DEFERRED-WARNINGS-CHECK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'DISABLE-DEFERRED-WARNINGS-CHECK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
467) 265065 'NIL "Disable the saving of deferred warnings"))
(PROCLAIM '(NOTINLINE WARNINGS-FILE-P))
(PROGN (SYSTEM:PUT 'WARNINGS-FILE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION WARNINGS-FILE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'WARNINGS-FILE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WARNINGS-FILE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 468) 265065 '(FILE &OPTIONAL IMPLEMENTATION-TYPE) "Is FILE a saved warnings file for the given IMPLEMENTATION-TYPE?
If that given type is NIL, use the currently configured *WARNINGS-FILE-TYPE* instead."))
(PROCLAIM '(NOTINLINE CHECK-DEFERRED-WARNINGS))
(PROGN (SYSTEM:PUT 'CHECK-DEFERRED-WARNINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION CHECK-DEFERRED-WARNINGS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 265065) (GET 
'CHECK-DEFERRED-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHECK-DEFERRED-WARNINGS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 469) 265065 '(FILES &OPTIONAL CONTEXT-FORMAT 
CONTEXT-ARGUMENTS) "Given a list of FILES containing deferred warnings saved by CALL-WITH-SAVED-DEFERRED-WARNINGS,
re-intern and raise any warnings that are still meaningful."))
(PROCLAIM '(NOTINLINE CALL-WITH-SAVED-DEFERRED-WARNINGS))
(PROGN (SYSTEM:PUT 'CALL-WITH-SAVED-DEFERRED-WARNINGS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WITH-SAVED-DEFERRED-WARNINGS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
265065) (GET 'CALL-WITH-SAVED-DEFERRED-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'CALL-WITH-SAVED-DEFERRED-WARNINGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
474) 265065 '(THUNK WARNINGS-FILE &KEY SOURCE-NAMESTRING) "If WARNINGS-FILE is not nil, record the deferred-warnings around a call to THUNK
and save those warnings to the given file for latter use,
possibly in a different process. Otherwise just call THUNK."))
(PROGN (SYSTEM:PUT 'WITH-SAVED-DEFERRED-WARNINGS 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
265065) (GET 'WITH-SAVED-DEFERRED-WARNINGS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-SAVED-DEFERRED-WARNINGS 
(SYSTEM:MAKE-MACRO 'WITH-SAVED-DEFERRED-WARNINGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
476)) 265065 '((WARNINGS-FILE &KEY SOURCE-NAMESTRING) &BODY BODY) "Trivial syntax for CALL-WITH-SAVED-DEFERRED-WARNINGS"))
(PROCLAIM '(NOTINLINE CURRENT-LISP-FILE-PATHNAME))
(PROGN (SYSTEM:PUT 'CURRENT-LISP-FILE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CURRENT-LISP-FILE-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
283723) (GET 'CURRENT-LISP-FILE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CURRENT-LISP-FILE-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 477) 283723 'NIL "Portably return the PATHNAME of the current Lisp source file being compiled or loaded"))
(PROCLAIM '(NOTINLINE LOAD-PATHNAME))
(PROGN (SYSTEM:PUT 'LOAD-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 283723) (GET 
'LOAD-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 478) 283723 'NIL "Portably return the LOAD-PATHNAME of the current source file or fasl.
    May return a relative pathname."))
(PROCLAIM '(NOTINLINE LISPIZE-PATHNAME))
(PROGN (SYSTEM:PUT 'LISPIZE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION LISPIZE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 283723) (GET 
'LISPIZE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LISPIZE-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 479) 283723 '(INPUT-FILE) "From a INPUT-FILE pathname, return a corresponding .lisp source pathname"))
(PROCLAIM '(NOTINLINE COMPILE-FILE-TYPE))
(PROGN (SYSTEM:PUT 'COMPILE-FILE-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPILE-FILE-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 283723) (GET 
'COMPILE-FILE-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPILE-FILE-TYPE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 480) 283723 '(&REST KEYS) "pathname TYPE for lisp FASt Loading files"))
(PROCLAIM '(NOTINLINE CALL-AROUND-HOOK))
(PROGN (SYSTEM:PUT 'CALL-AROUND-HOOK 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-AROUND-HOOK) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 283723) (GET 
'CALL-AROUND-HOOK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-AROUND-HOOK (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 481) 283723 '(HOOK FUNCTION) "Call a HOOK around the execution of FUNCTION"))
(PROCLAIM '(NOTINLINE COMPILE-FILE-PATHNAME*))
(PROGN (SYSTEM:PUT 'COMPILE-FILE-PATHNAME* 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPILE-FILE-PATHNAME*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 283723) (GET 
'COMPILE-FILE-PATHNAME* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPILE-FILE-PATHNAME* 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 482) 283723 '(INPUT-FILE &REST KEYS 
&KEY OUTPUT-FILE &ALLOW-OTHER-KEYS) "Variant of COMPILE-FILE-PATHNAME that works well with COMPILE-FILE*"))
(PROGN (SYSTEM:PUT '*COMPILE-CHECK* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
283723) (GET '*COMPILE-CHECK* 'SYSTEM::SOURCE NIL))) (DEFVAR *COMPILE-CHECK* NIL 
"A hook for user-defined compile-time invariants"))
(PROCLAIM '(NOTINLINE COMPILE-FILE*))
(PROGN (SYSTEM:PUT 'COMPILE-FILE* 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPILE-FILE*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 283723) (GET 
'COMPILE-FILE* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPILE-FILE* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 483) 283723 '(INPUT-FILE &REST KEYS &KEY (COMPILE-CHECK *COMPILE-CHECK*) 
OUTPUT-FILE WARNINGS-FILE &ALLOW-OTHER-KEYS) "This function provides a portable wrapper around COMPILE-FILE.
It ensures that the OUTPUT-FILE value is only returned and
the file only actually created if the compilation was successful,
even though your implementation may not do that. It also checks an optional
user-provided consistency function COMPILE-CHECK to determine success;
it will call this function if not NIL at the end of the compilation
with the arguments sent to COMPILE-FILE*, except with :OUTPUT-FILE TMP-FILE
where TMP-FILE is the name of a temporary output-file.
It also checks two flags (with legacy british spelling from ASDF1),
*COMPILE-FILE-FAILURE-BEHAVIOUR* and *COMPILE-FILE-WARNINGS-BEHAVIOUR*
with appropriate implementation-dependent defaults,
and if a failure (respectively warnings) are reported by COMPILE-FILE,
it will consider that an error unless the respective behaviour flag
is one of :SUCCESS :WARN :IGNORE.
If WARNINGS-FILE is defined, deferred warnings are saved to that file.
On ECL or MKCL, it creates both the linkable object and loadable fasl files.
On implementations that erroneously do not recognize standard keyword arguments,
it will filter them appropriately."))
(PROCLAIM '(NOTINLINE LOAD*))
(PROGN (SYSTEM:PUT 'LOAD* 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD*) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
283723) (GET 'LOAD* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 488) 283723 '(X &REST KEYS &KEY &ALLOW-OTHER-KEYS) "Portable wrapper around LOAD that properly handles loading from a stream."))
(PROCLAIM '(NOTINLINE LOAD-FROM-STRING))
(PROGN (SYSTEM:PUT 'LOAD-FROM-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-FROM-STRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 283723) (GET 
'LOAD-FROM-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-FROM-STRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 490) 283723 '(STRING) "Portably read and evaluate forms from a STRING."))
(PROCLAIM '(NOTINLINE COMBINE-FASLS))
(PROGN (SYSTEM:PUT 'COMBINE-FASLS 'SYSTEM::SOURCE (CONS '((:FUNCTION COMBINE-FASLS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 294499) (GET 
'COMBINE-FASLS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMBINE-FASLS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 491) 294499 '(INPUTS OUTPUT) "Combine a list of FASLs INPUTS into a single FASL OUTPUT"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 492))
(SYSTEM:%IN-PACKAGE "UIOP/LAUNCH-PROGRAM")
(PROCLAIM '(NOTINLINE REQUIRES-ESCAPING-P))
(PROGN (SYSTEM:PUT 'REQUIRES-ESCAPING-P 'SYSTEM::SOURCE (CONS '((:FUNCTION REQUIRES-ESCAPING-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'REQUIRES-ESCAPING-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REQUIRES-ESCAPING-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 493) 296804 '(TOKEN &KEY GOOD-CHARS BAD-CHARS) "Does this token require escaping, given the specification of
either good chars that don't need escaping or bad chars that do need escaping,
as either a recognizing function or a sequence of characters."))
(PROCLAIM '(NOTINLINE ESCAPE-TOKEN))
(PROGN (SYSTEM:PUT 'ESCAPE-TOKEN 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-TOKEN) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-TOKEN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-TOKEN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 496) 296804 '(TOKEN &KEY STREAM QUOTE GOOD-CHARS BAD-CHARS ESCAPER) 
"Call the ESCAPER function on TOKEN string if it needs escaping as per
REQUIRES-ESCAPING-P using GOOD-CHARS and BAD-CHARS, otherwise output TOKEN,
using STREAM as output (or returning result as a string if NIL)"))
(PROCLAIM '(NOTINLINE ESCAPE-WINDOWS-TOKEN-WITHIN-DOUBLE-QUOTES))
(PROGN (SYSTEM:PUT 'ESCAPE-WINDOWS-TOKEN-WITHIN-DOUBLE-QUOTES 'SYSTEM::SOURCE (CONS 
'((:FUNCTION ESCAPE-WINDOWS-TOKEN-WITHIN-DOUBLE-QUOTES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
296804) (GET 'ESCAPE-WINDOWS-TOKEN-WITHIN-DOUBLE-QUOTES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'ESCAPE-WINDOWS-TOKEN-WITHIN-DOUBLE-QUOTES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
498) 296804 '(X &OPTIONAL S) "Escape a string token X within double-quotes
for use within a MS Windows command-line, outputing to S."))
(PROCLAIM '(NOTINLINE EASY-WINDOWS-CHARACTER-P))
(PROGN (SYSTEM:PUT 'EASY-WINDOWS-CHARACTER-P 'SYSTEM::SOURCE (CONS '((:FUNCTION EASY-WINDOWS-CHARACTER-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'EASY-WINDOWS-CHARACTER-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EASY-WINDOWS-CHARACTER-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 502) 296804 '(X) "Is X an \"easy\" character that does not require quoting by the shell?"))
(PROCLAIM '(NOTINLINE ESCAPE-WINDOWS-TOKEN))
(PROGN (SYSTEM:PUT 'ESCAPE-WINDOWS-TOKEN 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-WINDOWS-TOKEN) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-WINDOWS-TOKEN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-WINDOWS-TOKEN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 503) 296804 '(TOKEN &OPTIONAL S) "Escape a string TOKEN within double-quotes if needed
for use within a MS Windows command-line, outputing to S."))
(PROCLAIM '(NOTINLINE ESCAPE-SH-TOKEN-WITHIN-DOUBLE-QUOTES))
(PROGN (SYSTEM:PUT 'ESCAPE-SH-TOKEN-WITHIN-DOUBLE-QUOTES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ESCAPE-SH-TOKEN-WITHIN-DOUBLE-QUOTES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
296804) (GET 'ESCAPE-SH-TOKEN-WITHIN-DOUBLE-QUOTES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'ESCAPE-SH-TOKEN-WITHIN-DOUBLE-QUOTES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
504) 296804 '(X S &KEY 'T) "Escape a string TOKEN within double-quotes
for use within a POSIX Bourne shell, outputing to S;
omit the outer double-quotes if key argument :QUOTE is NIL"))
(PROCLAIM '(NOTINLINE EASY-SH-CHARACTER-P))
(PROGN (SYSTEM:PUT 'EASY-SH-CHARACTER-P 'SYSTEM::SOURCE (CONS '((:FUNCTION EASY-SH-CHARACTER-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'EASY-SH-CHARACTER-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'EASY-SH-CHARACTER-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 505) 296804 '(X) "Is X an \"easy\" character that does not require quoting by the shell?"))
(PROCLAIM '(NOTINLINE ESCAPE-SH-TOKEN))
(PROGN (SYSTEM:PUT 'ESCAPE-SH-TOKEN 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-SH-TOKEN) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-SH-TOKEN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-SH-TOKEN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 506) 296804 '(TOKEN &OPTIONAL S) "Escape a string TOKEN within double-quotes if needed
for use within a POSIX Bourne shell, outputing to S."))
(PROCLAIM '(NOTINLINE ESCAPE-SHELL-TOKEN))
(PROGN (SYSTEM:PUT 'ESCAPE-SHELL-TOKEN 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-SHELL-TOKEN) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-SHELL-TOKEN 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-SHELL-TOKEN (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 507) 296804 '(TOKEN &OPTIONAL S) "Escape a token for the current operating system shell"))
(PROCLAIM '(NOTINLINE ESCAPE-COMMAND))
(PROGN (SYSTEM:PUT 'ESCAPE-COMMAND 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-COMMAND) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-COMMAND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-COMMAND (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 508) 296804 '(COMMAND &OPTIONAL S (ESCAPER 'ESCAPE-SHELL-TOKEN)) 
"Given a COMMAND as a list of tokens, return a string of the
spaced, escaped tokens, using ESCAPER to escape."))
(PROCLAIM '(NOTINLINE ESCAPE-WINDOWS-COMMAND))
(PROGN (SYSTEM:PUT 'ESCAPE-WINDOWS-COMMAND 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-WINDOWS-COMMAND) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-WINDOWS-COMMAND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-WINDOWS-COMMAND 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 510) 296804 '(COMMAND &OPTIONAL S) 
"Escape a list of command-line arguments into a string suitable for parsing
by CommandLineToArgv in MS Windows"))
(PROCLAIM '(NOTINLINE ESCAPE-SH-COMMAND))
(PROGN (SYSTEM:PUT 'ESCAPE-SH-COMMAND 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-SH-COMMAND) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-SH-COMMAND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-SH-COMMAND (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 511) 296804 '(COMMAND &OPTIONAL S) "Escape a list of command-line arguments into a string suitable for parsing
by /bin/sh in POSIX"))
(PROCLAIM '(NOTINLINE ESCAPE-SHELL-COMMAND))
(PROGN (SYSTEM:PUT 'ESCAPE-SHELL-COMMAND 'SYSTEM::SOURCE (CONS '((:FUNCTION ESCAPE-SHELL-COMMAND) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 296804) (GET 
'ESCAPE-SHELL-COMMAND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ESCAPE-SHELL-COMMAND (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 512) 296804 '(COMMAND &OPTIONAL STREAM) "Escape a command for the current operating system's shell"))
(PROCLAIM '(NOTINLINE %NORMALIZE-IO-SPECIFIER))
(PROGN (SYSTEM:PUT '%NORMALIZE-IO-SPECIFIER 'SYSTEM::SOURCE (CONS '((:FUNCTION %NORMALIZE-IO-SPECIFIER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'%NORMALIZE-IO-SPECIFIER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%NORMALIZE-IO-SPECIFIER 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 513) 302176 '(SPECIFIER &OPTIONAL 
ROLE) "Normalizes a portable I/O specifier for LAUNCH-PROGRAM into an implementation-dependent
argument to pass to the internal RUN-PROGRAM"))
(PROCLAIM '(NOTINLINE %INTERACTIVEP))
(PROGN (SYSTEM:PUT '%INTERACTIVEP 'SYSTEM::SOURCE (CONS '((:FUNCTION %INTERACTIVEP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'%INTERACTIVEP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%INTERACTIVEP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 514) 302176 '(INPUT OUTPUT ERROR-OUTPUT) NIL))
(PROCLAIM '(NOTINLINE %SIGNAL-TO-EXIT-CODE))
(PROGN (SYSTEM:PUT '%SIGNAL-TO-EXIT-CODE 'SYSTEM::SOURCE (CONS '((:FUNCTION %SIGNAL-TO-EXIT-CODE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'%SIGNAL-TO-EXIT-CODE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%SIGNAL-TO-EXIT-CODE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 515) 302176 '(SIGNUM) NIL))
(PROCLAIM '(NOTINLINE %CODE-TO-STATUS))
(PROGN (SYSTEM:PUT '%CODE-TO-STATUS 'SYSTEM::SOURCE (CONS '((:FUNCTION %CODE-TO-STATUS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'%CODE-TO-STATUS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%CODE-TO-STATUS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 516) 302176 '(EXIT-CODE SIGNAL-CODE) NIL))
(SYSTEM:PUT 'PROCESS-INFO 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
302176) (GET 'PROCESS-INFO 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 517))
(PROCLAIM '(NOTINLINE %HANDLE-IF-EXISTS))
(PROGN (SYSTEM:PUT '%HANDLE-IF-EXISTS 'SYSTEM::SOURCE (CONS '((:FUNCTION %HANDLE-IF-EXISTS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'%HANDLE-IF-EXISTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%HANDLE-IF-EXISTS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 525) 302176 '(FILE IF-EXISTS) NIL))
(PROCLAIM '(NOTINLINE %HANDLE-IF-DOES-NOT-EXIST))
(PROGN (SYSTEM:PUT '%HANDLE-IF-DOES-NOT-EXIST 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%HANDLE-IF-DOES-NOT-EXIST) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
302176) (GET '%HANDLE-IF-DOES-NOT-EXIST 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%HANDLE-IF-DOES-NOT-EXIST 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 526) 302176 '(FILE IF-DOES-NOT-EXIST) 
NIL))
(PROCLAIM '(NOTINLINE PROCESS-INFO-ERROR-OUTPUT))
(PROGN (SYSTEM:PUT 'PROCESS-INFO-ERROR-OUTPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PROCESS-INFO-ERROR-OUTPUT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
302176) (GET 'PROCESS-INFO-ERROR-OUTPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROCESS-INFO-ERROR-OUTPUT 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 527) 302176 '(PROCESS-INFO) NIL))
(PROCLAIM '(NOTINLINE PROCESS-INFO-INPUT))
(PROGN (SYSTEM:PUT 'PROCESS-INFO-INPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION PROCESS-INFO-INPUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'PROCESS-INFO-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROCESS-INFO-INPUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 528) 302176 '(PROCESS-INFO) NIL))
(PROCLAIM '(NOTINLINE PROCESS-INFO-OUTPUT))
(PROGN (SYSTEM:PUT 'PROCESS-INFO-OUTPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION PROCESS-INFO-OUTPUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'PROCESS-INFO-OUTPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROCESS-INFO-OUTPUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 529) 302176 '(PROCESS-INFO) NIL))
(PROCLAIM '(NOTINLINE PROCESS-INFO-PID))
(PROGN (SYSTEM:PUT 'PROCESS-INFO-PID 'SYSTEM::SOURCE (CONS '((:FUNCTION PROCESS-INFO-PID) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'PROCESS-INFO-PID 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROCESS-INFO-PID (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 530) 302176 '(PROCESS-INFO) NIL))
(PROCLAIM '(NOTINLINE %PROCESS-STATUS))
(PROGN (SYSTEM:PUT '%PROCESS-STATUS 'SYSTEM::SOURCE (CONS '((:FUNCTION %PROCESS-STATUS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'%PROCESS-STATUS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%PROCESS-STATUS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 531) 302176 '(PROCESS-INFO) NIL))
(PROCLAIM '(NOTINLINE PROCESS-ALIVE-P))
(PROGN (SYSTEM:PUT 'PROCESS-ALIVE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION PROCESS-ALIVE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'PROCESS-ALIVE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROCESS-ALIVE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 532) 302176 '(PROCESS-INFO) "Check if a process has yet to exit."))
(PROCLAIM '(NOTINLINE WAIT-PROCESS))
(PROGN (SYSTEM:PUT 'WAIT-PROCESS 'SYSTEM::SOURCE (CONS '((:FUNCTION WAIT-PROCESS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'WAIT-PROCESS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WAIT-PROCESS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 533) 302176 '(PROCESS-INFO) "Wait for the process to terminate, if it is still running.
Otherwise, return immediately. An exit code (a number) will be
returned, with 0 indicating success, and anything else indicating
failure. If the process exits after receiving a signal, the exit code
will be the sum of 128 and the (positive) numeric signal code. A second
value may be returned in this case: the numeric signal code itself.
Any asynchronously spawned process requires this function to be run
before it is garbage-collected in order to free up resources that
might otherwise be irrevocably lost."))
(PROCLAIM '(NOTINLINE %POSIX-SEND-SIGNAL))
(PROGN (SYSTEM:PUT '%POSIX-SEND-SIGNAL 'SYSTEM::SOURCE (CONS '((:FUNCTION %POSIX-SEND-SIGNAL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'%POSIX-SEND-SIGNAL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%POSIX-SEND-SIGNAL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 534) 302176 '(PROCESS-INFO SIGNAL) NIL))
(PROCLAIM '(NOTINLINE TERMINATE-PROCESS))
(PROGN (SYSTEM:PUT 'TERMINATE-PROCESS 'SYSTEM::SOURCE (CONS '((:FUNCTION TERMINATE-PROCESS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'TERMINATE-PROCESS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TERMINATE-PROCESS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 536) 302176 '(PROCESS-INFO &KEY URGENT) "Cause the process to exit. To that end, the process may or may
not be sent a signal, which it will find harder (or even impossible)
to ignore if URGENT is T. On some platforms, it may also be subject to
race conditions."))
(PROCLAIM '(NOTINLINE CLOSE-STREAMS))
(PROGN (SYSTEM:PUT 'CLOSE-STREAMS 'SYSTEM::SOURCE (CONS '((:FUNCTION CLOSE-STREAMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'CLOSE-STREAMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CLOSE-STREAMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 537) 302176 '(PROCESS-INFO) "Close any stream that the process might own. Needs to be run
whenever streams were requested by passing :stream to :input, :output,
or :error-output."))
(PROCLAIM '(NOTINLINE LAUNCH-PROGRAM))
(PROGN (SYSTEM:PUT 'LAUNCH-PROGRAM 'SYSTEM::SOURCE (CONS '((:FUNCTION LAUNCH-PROGRAM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 302176) (GET 
'LAUNCH-PROGRAM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LAUNCH-PROGRAM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 538) 302176 '(COMMAND &REST KEYS &KEY INPUT (IF-INPUT-DOES-NOT-EXIST 
:ERROR) OUTPUT (IF-OUTPUT-EXISTS :SUPERSEDE) ERROR-OUTPUT (IF-ERROR-OUTPUT-EXISTS 
:SUPERSEDE) (ELEMENT-TYPE *DEFAULT-STREAM-ELEMENT-TYPE*) (EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) 
DIRECTORY &ALLOW-OTHER-KEYS) "Launch program specified by COMMAND,
either a list of strings specifying a program and list of arguments,
or a string specifying a shell command (/bin/sh on Unix, CMD.EXE on
Windows) _asynchronously_.

If OUTPUT is a pathname, a string designating a pathname, or NIL (the
default) designating the null device, the file at that path is used as
output.
If it's :INTERACTIVE, output is inherited from the current process;
beware that this may be different from your *STANDARD-OUTPUT*, and
under SLIME will be on your *inferior-lisp* buffer.  If it's T, output
goes to your current *STANDARD-OUTPUT* stream.  If it's :STREAM, a new
stream will be made available that can be accessed via
PROCESS-INFO-OUTPUT and read from. Otherwise, OUTPUT should be a value
that the underlying lisp implementation knows how to handle.

IF-OUTPUT-EXISTS, which is only meaningful if OUTPUT is a string or a
pathname, can take the values :ERROR, :APPEND, and :SUPERSEDE (the
default). The meaning of these values and their effect on the case
where OUTPUT does not exist, is analogous to the IF-EXISTS parameter
to OPEN with :DIRECTION :OUTPUT.

ERROR-OUTPUT is similar to OUTPUT. T designates the *ERROR-OUTPUT*,
:OUTPUT means redirecting the error output to the output stream,
and :STREAM causes a stream to be made available via
PROCESS-INFO-ERROR-OUTPUT.

IF-ERROR-OUTPUT-EXISTS is similar to IF-OUTPUT-EXIST, except that it
affects ERROR-OUTPUT rather than OUTPUT.

INPUT is similar to OUTPUT, except that T designates the
*STANDARD-INPUT* and a stream requested through the :STREAM keyword
would be available through PROCESS-INFO-INPUT.

IF-INPUT-DOES-NOT-EXIST, which is only meaningful if INPUT is a string
or a pathname, can take the values :CREATE and :ERROR (the
default). The meaning of these values is analogous to the
IF-DOES-NOT-EXIST parameter to OPEN with :DIRECTION :INPUT.

ELEMENT-TYPE and EXTERNAL-FORMAT are passed on to your Lisp
implementation, when applicable, for creation of the output stream.

LAUNCH-PROGRAM returns a PROCESS-INFO object.

LAUNCH-PROGRAM currently does not smooth over all the differences between
implementations. Of particular note is when streams are provided for OUTPUT or
ERROR-OUTPUT. Some implementations don't support this at all, some support only
certain subclasses of streams, and some support any arbitrary
stream. Additionally, the implementations that support streams may have
differing behavior on how those streams are filled with data. If data is not
periodically read from the child process and sent to the stream, the child
could block because its output buffers are full."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 541))
(SYSTEM:%IN-PACKAGE "UIOP/RUN-PROGRAM")
(PROCLAIM '(NOTINLINE CALL-STREAM-PROCESSOR))
(PROGN (SYSTEM:PUT 'CALL-STREAM-PROCESSOR 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-STREAM-PROCESSOR) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 332089) (GET 
'CALL-STREAM-PROCESSOR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-STREAM-PROCESSOR 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 542) 332089 '(FUN PROCESSOR STREAM) 
"Given FUN (typically SLURP-INPUT-STREAM or VOMIT-OUTPUT-STREAM,
a PROCESSOR specification which is either an atom or a list specifying
a processor an keyword arguments, call the specified processor with
the given STREAM as input"))
(PROCLAIM '(NOTINLINE SLURP-INPUT-STREAM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 543))
(PROGN (SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
SLURP-INPUT-STREAM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL (FUNCTION T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(FUNCTION INPUT-STREAM &KEY) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'FUNCTION 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 544))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL (CONS T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(LIST INPUT-STREAM &KEY) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 548))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL (STREAM T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(OUTPUT-STREAM INPUT-STREAM 
&KEY LINEWISE PREFIX (ELEMENT-TYPE 'CHARACTER) BUFFER-SIZE) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'STREAM 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 552))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL ((EQL 'STRING) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY STRIPPED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST (LIST 'EQL 'STRING) 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 556))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL ((EQL :STRING) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY STRIPPED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST (LIST 'EQL :STRING) 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 560))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL ((EQL :LINES) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY COUNT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST (LIST 'EQL :LINES) 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 564))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL ((EQL :LINE) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY (AT 0)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST (LIST 'EQL :LINE) 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 568))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL ((EQL :FORMS) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY COUNT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST (LIST 'EQL :FORMS) 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 572))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL ((EQL :FORM) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY (AT 0)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST (LIST 'EQL :FORM) 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 576))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL ((EQL T) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &REST KEYS &KEY &ALLOW-OTHER-KEYS) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST (LIST 'EQL T) 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 580))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL (NULL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 584))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL (PATHNAME T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(PATHNAME INPUT &KEY (ELEMENT-TYPE 
*DEFAULT-STREAM-ELEMENT-TYPE*) (EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) (IF-EXISTS 
:RENAME-AND-DELETE) (IF-DOES-NOT-EXIST :CREATE) BUFFER-SIZE LINEWISE) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PATHNAME 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 588))
(SYSTEM:PUT 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD SLURP-INPUT-STREAM 
NIL (T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
332089) (GET 'SLURP-INPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SLURP-INPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY LINEWISE PREFIX 
(ELEMENT-TYPE 'CHARACTER) BUFFER-SIZE) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 593))
(PROCLAIM '(NOTINLINE VOMIT-OUTPUT-STREAM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 597))
(PROGN (SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
VOMIT-OUTPUT-STREAM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL (FUNCTION T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(FUNCTION OUTPUT-STREAM &KEY) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'FUNCTION 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 598))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL (CONS T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(LIST OUTPUT-STREAM &KEY) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 602))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL (STREAM T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(INPUT-STREAM OUTPUT-STREAM 
&KEY LINEWISE PREFIX (ELEMENT-TYPE 'CHARACTER) BUFFER-SIZE) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'STREAM 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 606))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY FRESH-LINE 
TERPRI) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 610))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL ((EQL T) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(X STREAM &REST KEYS &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST (LIST 'EQL T) 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
614))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL (NULL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 618))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL (PATHNAME T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(PATHNAME INPUT &KEY (ELEMENT-TYPE 
*DEFAULT-STREAM-ELEMENT-TYPE*) (EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) (IF-EXISTS 
:RENAME-AND-DELETE) (IF-DOES-NOT-EXIST :CREATE) BUFFER-SIZE LINEWISE) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PATHNAME 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 622))
(SYSTEM:PUT 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE (CONS '((:METHOD VOMIT-OUTPUT-STREAM 
NIL (T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
337073) (GET 'VOMIT-OUTPUT-STREAM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VOMIT-OUTPUT-STREAM :LAMBDA-LIST '(X STREAM &KEY LINEWISE PREFIX 
(ELEMENT-TYPE 'CHARACTER) BUFFER-SIZE) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 627))
(SYSTEM:PUT 'SUBPROCESS-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET 'SUBPROCESS-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'SUBPROCESS-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET 'SUBPROCESS-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 631))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (SUBPROCESS-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 340647) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SUBPROCESS-ERROR 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 635))
(PROCLAIM '(NOTINLINE %CHECK-RESULT))
(PROGN (SYSTEM:PUT '%CHECK-RESULT 'SYSTEM::SOURCE (CONS '((:FUNCTION %CHECK-RESULT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 340647) (GET 
'%CHECK-RESULT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%CHECK-RESULT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 640) 340647 '(EXIT-CODE &KEY COMMAND PROCESS IGNORE-ERROR-STATUS) 
NIL))
(PROCLAIM '(NOTINLINE %ACTIVE-IO-SPECIFIER-P))
(PROGN (SYSTEM:PUT '%ACTIVE-IO-SPECIFIER-P 'SYSTEM::SOURCE (CONS '((:FUNCTION %ACTIVE-IO-SPECIFIER-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 340647) (GET 
'%ACTIVE-IO-SPECIFIER-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%ACTIVE-IO-SPECIFIER-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 641) 340647 '(SPECIFIER) "Determines whether a run-program I/O specifier requires Lisp-side processing
via SLURP-INPUT-STREAM or VOMIT-OUTPUT-STREAM (return T),
or whether it's already taken care of by the implementation's underlying run-program."))
(PROCLAIM '(NOTINLINE %RUN-PROGRAM))
(PROGN (SYSTEM:PUT '%RUN-PROGRAM 'SYSTEM::SOURCE (CONS '((:FUNCTION %RUN-PROGRAM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 340647) (GET 
'%RUN-PROGRAM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%RUN-PROGRAM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 642) 340647 '(COMMAND &REST KEYS &KEY &ALLOW-OTHER-KEYS) "DEPRECATED. Use LAUNCH-PROGRAM instead."))
(PROCLAIM '(NOTINLINE %CALL-WITH-PROGRAM-IO))
(PROGN (SYSTEM:PUT '%CALL-WITH-PROGRAM-IO 'SYSTEM::SOURCE (CONS '((:FUNCTION %CALL-WITH-PROGRAM-IO) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 340647) (GET 
'%CALL-WITH-PROGRAM-IO 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%CALL-WITH-PROGRAM-IO 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 643) 340647 '(GF TVAL STREAM-EASY-P 
FUN DIRECTION SPEC ACTIVEP RETURNER &KEY (ELEMENT-TYPE *DEFAULT-STREAM-ELEMENT-TYPE*) 
(EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) &ALLOW-OTHER-KEYS) NIL))
(PROGN (SYSTEM:PUT 'PLACE-SETTER 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET 'PLACE-SETTER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PLACE-SETTER (SYSTEM:MAKE-MACRO 
'PLACE-SETTER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 650)) 340647 '(PLACE) 
NIL))
(PROGN (SYSTEM:PUT 'WITH-PROGRAM-INPUT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET 'WITH-PROGRAM-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-PROGRAM-INPUT 
(SYSTEM:MAKE-MACRO 'WITH-PROGRAM-INPUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
651)) 340647 '(((REDUCED-INPUT-VAR &OPTIONAL (INPUT-ACTIVITY-VAR (GENSYM) IAVP)) 
INPUT-FORM &KEY SETF STREAM-EASY-P ACTIVE KEYS) &BODY BODY) NIL))
(PROGN (SYSTEM:PUT 'WITH-PROGRAM-OUTPUT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET 'WITH-PROGRAM-OUTPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-PROGRAM-OUTPUT 
(SYSTEM:MAKE-MACRO 'WITH-PROGRAM-OUTPUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
652)) 340647 '(((REDUCED-OUTPUT-VAR &OPTIONAL (OUTPUT-ACTIVITY-VAR (GENSYM) OAVP)) 
OUTPUT-FORM &KEY SETF STREAM-EASY-P ACTIVE KEYS) &BODY BODY) NIL))
(PROGN (SYSTEM:PUT 'WITH-PROGRAM-ERROR-OUTPUT 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET 'WITH-PROGRAM-ERROR-OUTPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-PROGRAM-ERROR-OUTPUT 
(SYSTEM:MAKE-MACRO 'WITH-PROGRAM-ERROR-OUTPUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
653)) 340647 '(((REDUCED-ERROR-OUTPUT-VAR &OPTIONAL (ERROR-OUTPUT-ACTIVITY-VAR (GENSYM) 
EOAVP)) ERROR-OUTPUT-FORM &KEY SETF STREAM-EASY-P ACTIVE KEYS) &BODY BODY) NIL))
(PROCLAIM '(NOTINLINE %USE-LAUNCH-PROGRAM))
(PROGN (SYSTEM:PUT '%USE-LAUNCH-PROGRAM 'SYSTEM::SOURCE (CONS '((:FUNCTION %USE-LAUNCH-PROGRAM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 340647) (GET 
'%USE-LAUNCH-PROGRAM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%USE-LAUNCH-PROGRAM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 654) 340647 '(COMMAND &REST KEYS &KEY INPUT OUTPUT ERROR-OUTPUT 
IGNORE-ERROR-STATUS &ALLOW-OTHER-KEYS) NIL))
(PROCLAIM '(NOTINLINE %NORMALIZE-SYSTEM-COMMAND))
(PROGN (SYSTEM:PUT '%NORMALIZE-SYSTEM-COMMAND 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%NORMALIZE-SYSTEM-COMMAND) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET '%NORMALIZE-SYSTEM-COMMAND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%NORMALIZE-SYSTEM-COMMAND 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 662) 340647 '(COMMAND) NIL))
(PROCLAIM '(NOTINLINE %REDIRECTED-SYSTEM-COMMAND))
(PROGN (SYSTEM:PUT '%REDIRECTED-SYSTEM-COMMAND 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%REDIRECTED-SYSTEM-COMMAND) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET '%REDIRECTED-SYSTEM-COMMAND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%REDIRECTED-SYSTEM-COMMAND 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 663) 340647 '(COMMAND IN OUT ERR 
DIRECTORY) NIL))
(PROCLAIM '(NOTINLINE %SYSTEM))
(PROGN (SYSTEM:PUT '%SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION %SYSTEM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET '%SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 665) 340647 '(COMMAND &REST KEYS &KEY DIRECTORY INPUT (IF-INPUT-DOES-NOT-EXIST 
:ERROR) OUTPUT (IF-OUTPUT-EXISTS :SUPERSEDE) ERROR-OUTPUT (IF-ERROR-OUTPUT-EXISTS 
:SUPERSEDE) &ALLOW-OTHER-KEYS) "A portable abstraction of a low-level call to libc's system()."))
(PROCLAIM '(NOTINLINE %USE-SYSTEM))
(PROGN (SYSTEM:PUT '%USE-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION %USE-SYSTEM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET '%USE-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%USE-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 666) 340647 '(COMMAND &REST KEYS &KEY INPUT OUTPUT ERROR-OUTPUT 
IGNORE-ERROR-STATUS &ALLOW-OTHER-KEYS) NIL))
(PROCLAIM '(NOTINLINE RUN-PROGRAM))
(PROGN (SYSTEM:PUT 'RUN-PROGRAM 'SYSTEM::SOURCE (CONS '((:FUNCTION RUN-PROGRAM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
340647) (GET 'RUN-PROGRAM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RUN-PROGRAM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 672) 340647 '(COMMAND &REST KEYS &KEY IGNORE-ERROR-STATUS (FORCE-SHELL 
NIL FORCE-SHELL-SUPPLIEDP) INPUT (IF-INPUT-DOES-NOT-EXIST :ERROR) OUTPUT (IF-OUTPUT-EXISTS 
:SUPERSEDE) ERROR-OUTPUT (IF-ERROR-OUTPUT-EXISTS :SUPERSEDE) (ELEMENT-TYPE *DEFAULT-STREAM-ELEMENT-TYPE*) 
(EXTERNAL-FORMAT *UTF-8-EXTERNAL-FORMAT*) &ALLOW-OTHER-KEYS) "Run program specified by COMMAND,
either a list of strings specifying a program and list of arguments,
or a string specifying a shell command (/bin/sh on Unix, CMD.EXE on Windows);
_synchronously_ process its output as specified and return the processing results
when the program and its output processing are complete.

Always call a shell (rather than directly execute the command when possible)
if FORCE-SHELL is specified.  Similarly, never call a shell if FORCE-SHELL is
specified to be NIL.

Signal a continuable SUBPROCESS-ERROR if the process wasn't successful (exit-code 0),
unless IGNORE-ERROR-STATUS is specified.

If OUTPUT is a pathname, a string designating a pathname, or NIL (the default)
designating the null device, the file at that path is used as output.
If it's :INTERACTIVE, output is inherited from the current process;
beware that this may be different from your *STANDARD-OUTPUT*,
and under SLIME will be on your *inferior-lisp* buffer.
If it's T, output goes to your current *STANDARD-OUTPUT* stream.
Otherwise, OUTPUT should be a value that is a suitable first argument to
SLURP-INPUT-STREAM (qv.), or a list of such a value and keyword arguments.
In this case, RUN-PROGRAM will create a temporary stream for the program output;
the program output, in that stream, will be processed by a call to SLURP-INPUT-STREAM,
using OUTPUT as the first argument (or the first element of OUTPUT, and the rest as keywords).
The primary value resulting from that call (or NIL if no call was needed)
will be the first value returned by RUN-PROGRAM.
E.g., using :OUTPUT :STRING will have it return the entire output stream as a string.
And using :OUTPUT '(:STRING :STRIPPED T) will have it return the same string
stripped of any ending newline.

IF-OUTPUT-EXISTS, which is only meaningful if OUTPUT is a string or a
pathname, can take the values :ERROR, :APPEND, and :SUPERSEDE (the
default). The meaning of these values and their effect on the case
where OUTPUT does not exist, is analogous to the IF-EXISTS parameter
to OPEN with :DIRECTION :OUTPUT.

ERROR-OUTPUT is similar to OUTPUT, except that the resulting value is returned
as the second value of RUN-PROGRAM. T designates the *ERROR-OUTPUT*.
Also :OUTPUT means redirecting the error output to the output stream,
in which case NIL is returned.

IF-ERROR-OUTPUT-EXISTS is similar to IF-OUTPUT-EXIST, except that it
affects ERROR-OUTPUT rather than OUTPUT.

INPUT is similar to OUTPUT, except that VOMIT-OUTPUT-STREAM is used,
no value is returned, and T designates the *STANDARD-INPUT*.

IF-INPUT-DOES-NOT-EXIST, which is only meaningful if INPUT is a string
or a pathname, can take the values :CREATE and :ERROR (the
default). The meaning of these values is analogous to the
IF-DOES-NOT-EXIST parameter to OPEN with :DIRECTION :INPUT.

ELEMENT-TYPE and EXTERNAL-FORMAT are passed on
to your Lisp implementation, when applicable, for creation of the output stream.

One and only one of the stream slurping or vomiting may or may not happen
in parallel in parallel with the subprocess,
depending on options and implementation,
and with priority being given to output processing.
Other streams are completely produced or consumed
before or after the subprocess is spawned, using temporary files.

RUN-PROGRAM returns 3 values:
0- the result of the OUTPUT slurping if any, or NIL
1- the result of the ERROR-OUTPUT slurping if any, or NIL
2- either 0 if the subprocess exited with success status,
or an indication of failure via the EXIT-CODE of the process"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 673))
(SYSTEM:%IN-PACKAGE "UIOP/CONFIGURATION")
(SYSTEM:PUT 'INVALID-CONFIGURATION 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'INVALID-CONFIGURATION 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'INVALID-CONFIGURATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'INVALID-CONFIGURATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 674))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (INVALID-CONFIGURATION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'INVALID-CONFIGURATION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 676))
(PROCLAIM '(NOTINLINE CONFIGURATION-INHERITANCE-DIRECTIVE-P))
(PROGN (SYSTEM:PUT 'CONFIGURATION-INHERITANCE-DIRECTIVE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CONFIGURATION-INHERITANCE-DIRECTIVE-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'CONFIGURATION-INHERITANCE-DIRECTIVE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'CONFIGURATION-INHERITANCE-DIRECTIVE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
680) 363324 '(X) "Is X a configuration inheritance directive?"))
(PROCLAIM '(NOTINLINE REPORT-INVALID-FORM))
(PROGN (SYSTEM:PUT 'REPORT-INVALID-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION REPORT-INVALID-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'REPORT-INVALID-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REPORT-INVALID-FORM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 681) 363324 '(REPORTER &REST ARGS) "Report an invalid form according to REPORTER and various ARGS"))
(PROGN (SYSTEM:PUT '*IGNORED-CONFIGURATION-FORM* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'*IGNORED-CONFIGURATION-FORM* 'SYSTEM::SOURCE NIL))) (DEFVAR *IGNORED-CONFIGURATION-FORM* 
NIL "Have configuration forms been ignored while parsing the configuration?"))
(PROCLAIM '(NOTINLINE VALIDATE-CONFIGURATION-FORM))
(PROGN (SYSTEM:PUT 'VALIDATE-CONFIGURATION-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-CONFIGURATION-FORM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'VALIDATE-CONFIGURATION-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VALIDATE-CONFIGURATION-FORM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 682) 363324 '(FORM TAG DIRECTIVE-VALIDATOR 
&KEY LOCATION INVALID-FORM-REPORTER) "Validate a configuration FORM. By default it will raise an error if the
FORM is not valid.  Otherwise it will return the validated form.
     Arguments control the behavior:
     The configuration FORM should be of the form (TAG . <rest>)
     Each element of <rest> will be checked by first seeing if it's a configuration inheritance
directive (see CONFIGURATION-INHERITANCE-DIRECTIVE-P) then invoking DIRECTIVE-VALIDATOR
on it.
     In the event of an invalid form, INVALID-FORM-REPORTER will be used to control
reporting (see REPORT-INVALID-FORM) with LOCATION providing information about where
the configuration form appeared."))
(PROCLAIM '(NOTINLINE VALIDATE-CONFIGURATION-FILE))
(PROGN (SYSTEM:PUT 'VALIDATE-CONFIGURATION-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-CONFIGURATION-FILE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'VALIDATE-CONFIGURATION-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VALIDATE-CONFIGURATION-FILE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 683) 363324 '(FILE VALIDATOR &KEY 
DESCRIPTION) "Validate a configuration FILE.  The configuration file should have only one s-expression
in it, which will be checked with the VALIDATOR FORM.  DESCRIPTION argument used for error
reporting."))
(PROCLAIM '(NOTINLINE VALIDATE-CONFIGURATION-DIRECTORY))
(PROGN (SYSTEM:PUT 'VALIDATE-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-CONFIGURATION-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'VALIDATE-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'VALIDATE-CONFIGURATION-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
684) 363324 '(DIRECTORY TAG VALIDATOR &KEY INVALID-FORM-REPORTER) "Map the VALIDATOR across the .conf files in DIRECTORY, the TAG will
be applied to the results to yield a configuration form.  Current
values of TAG include :source-registry and :output-translations."))
(PROCLAIM '(NOTINLINE RESOLVE-RELATIVE-LOCATION))
(PROGN (SYSTEM:PUT 'RESOLVE-RELATIVE-LOCATION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
RESOLVE-RELATIVE-LOCATION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'RESOLVE-RELATIVE-LOCATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESOLVE-RELATIVE-LOCATION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 686) 363324 '(X &KEY ENSURE-DIRECTORY 
WILDEN) "Given a designator X for an relative location, resolve it to a pathname."))
(PROGN (SYSTEM:PUT '*HERE-DIRECTORY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET '*HERE-DIRECTORY* 'SYSTEM::SOURCE NIL))) (DEFVAR *HERE-DIRECTORY* NIL 
"This special variable is bound to the currect directory during calls to
PROCESS-SOURCE-REGISTRY in order that we be able to interpret the :here
directive."))
(PROGN (SYSTEM:PUT '*USER-CACHE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET '*USER-CACHE* 'SYSTEM::SOURCE NIL))) (DEFVAR *USER-CACHE* NIL "A specification as per RESOLVE-LOCATION of where the user keeps his FASL cache"))
(PROCLAIM '(NOTINLINE RESOLVE-ABSOLUTE-LOCATION))
(PROGN (SYSTEM:PUT 'RESOLVE-ABSOLUTE-LOCATION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
RESOLVE-ABSOLUTE-LOCATION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'RESOLVE-ABSOLUTE-LOCATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESOLVE-ABSOLUTE-LOCATION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 687) 363324 '(X &KEY ENSURE-DIRECTORY 
WILDEN) "Given a designator X for an absolute location, resolve it to a pathname"))
(PROCLAIM '(FTYPE (FUNCTION (T &KEY (:DIRECTORY BOOLEAN) (:WILDEN BOOLEAN) (:ENSURE-DIRECTORY 
BOOLEAN)) T) RESOLVE-LOCATION))
(PROCLAIM '(NOTINLINE RESOLVE-LOCATION))
(PROGN (SYSTEM:PUT 'RESOLVE-LOCATION 'SYSTEM::SOURCE (CONS '((:FUNCTION RESOLVE-LOCATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'RESOLVE-LOCATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESOLVE-LOCATION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 688) 363324 '(X &KEY ENSURE-DIRECTORY WILDEN DIRECTORY) "Resolve location designator X into a PATHNAME"))
(PROCLAIM '(NOTINLINE LOCATION-DESIGNATOR-P))
(PROGN (SYSTEM:PUT 'LOCATION-DESIGNATOR-P 'SYSTEM::SOURCE (CONS '((:FUNCTION LOCATION-DESIGNATOR-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'LOCATION-DESIGNATOR-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOCATION-DESIGNATOR-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 689) 363324 '(X) "Is X a designator for a location?"))
(PROCLAIM '(NOTINLINE LOCATION-FUNCTION-P))
(PROGN (SYSTEM:PUT 'LOCATION-FUNCTION-P 'SYSTEM::SOURCE (CONS '((:FUNCTION LOCATION-FUNCTION-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'LOCATION-FUNCTION-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOCATION-FUNCTION-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 692) 363324 '(X) "Is X the specification of a location function?"))
(PROGN (SYSTEM:PUT '*CLEAR-CONFIGURATION-HOOK* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'*CLEAR-CONFIGURATION-HOOK* 'SYSTEM::SOURCE NIL))) (DEFVAR *CLEAR-CONFIGURATION-HOOK* 
'NIL))
(PROCLAIM '(NOTINLINE REGISTER-CLEAR-CONFIGURATION-HOOK))
(PROGN (SYSTEM:PUT 'REGISTER-CLEAR-CONFIGURATION-HOOK 'SYSTEM::SOURCE (CONS '((:FUNCTION 
REGISTER-CLEAR-CONFIGURATION-HOOK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
363324) (GET 'REGISTER-CLEAR-CONFIGURATION-HOOK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'REGISTER-CLEAR-CONFIGURATION-HOOK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
693) 363324 '(HOOK-FUNCTION &OPTIONAL CALL-NOW-P) "Register a function to be called when clearing configuration"))
(PROCLAIM '(NOTINLINE CLEAR-CONFIGURATION))
(PROGN (SYSTEM:PUT 'CLEAR-CONFIGURATION 'SYSTEM::SOURCE (CONS '((:FUNCTION CLEAR-CONFIGURATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'CLEAR-CONFIGURATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CLEAR-CONFIGURATION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 694) 363324 'NIL "Call the functions in *CLEAR-CONFIGURATION-HOOK*"))
(REGISTER-IMAGE-DUMP-HOOK 'CLEAR-CONFIGURATION)
(PROCLAIM '(NOTINLINE UPGRADE-CONFIGURATION))
(PROGN (SYSTEM:PUT 'UPGRADE-CONFIGURATION 'SYSTEM::SOURCE (CONS '((:FUNCTION UPGRADE-CONFIGURATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'UPGRADE-CONFIGURATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UPGRADE-CONFIGURATION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 695) 363324 'NIL "If a previous version of ASDF failed to read some configuration, try again now."))
(PROCLAIM '(NOTINLINE GET-FOLDER-PATH))
(PROGN (SYSTEM:PUT 'GET-FOLDER-PATH 'SYSTEM::SOURCE (CONS '((:FUNCTION GET-FOLDER-PATH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'GET-FOLDER-PATH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GET-FOLDER-PATH (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 696) 363324 '(FOLDER) "Semi-portable implementation of a subset of LispWorks' sys:get-folder-path,
this function tries to locate the Windows FOLDER for one of
:LOCAL-APPDATA, :APPDATA or :COMMON-APPDATA.
     Returns NIL when the folder is not defined (e.g., not on Windows)."))
(PROCLAIM '(NOTINLINE XDG-DATA-HOME))
(PROGN (SYSTEM:PUT 'XDG-DATA-HOME 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-DATA-HOME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-DATA-HOME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-DATA-HOME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 697) 363324 '(&REST MORE) "Returns an absolute pathname for the directory containing user-specific data files.
MORE may contain specifications for a subpath relative to this directory: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE XDG-CONFIG-HOME))
(PROGN (SYSTEM:PUT 'XDG-CONFIG-HOME 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-CONFIG-HOME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-CONFIG-HOME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-CONFIG-HOME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 698) 363324 '(&REST MORE) "Returns a pathname for the directory containing user-specific configuration files.
MORE may contain specifications for a subpath relative to this directory: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE XDG-DATA-DIRS))
(PROGN (SYSTEM:PUT 'XDG-DATA-DIRS 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-DATA-DIRS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-DATA-DIRS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-DATA-DIRS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 699) 363324 '(&REST MORE) "The preference-ordered set of additional paths to search for data files.
Returns a list of absolute directory pathnames.
MORE may contain specifications for a subpath relative to these directories: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE XDG-CONFIG-DIRS))
(PROGN (SYSTEM:PUT 'XDG-CONFIG-DIRS 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-CONFIG-DIRS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-CONFIG-DIRS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-CONFIG-DIRS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 701) 363324 '(&REST MORE) "The preference-ordered set of additional base paths to search for configuration files.
Returns a list of absolute directory pathnames.
MORE may contain specifications for a subpath relative to these directories:
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE XDG-CACHE-HOME))
(PROGN (SYSTEM:PUT 'XDG-CACHE-HOME 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-CACHE-HOME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-CACHE-HOME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-CACHE-HOME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 703) 363324 '(&REST MORE) "The base directory relative to which user specific non-essential data files should be stored.
Returns an absolute directory pathname.
MORE may contain specifications for a subpath relative to this directory: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE XDG-RUNTIME-DIR))
(PROGN (SYSTEM:PUT 'XDG-RUNTIME-DIR 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-RUNTIME-DIR) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-RUNTIME-DIR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-RUNTIME-DIR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 704) 363324 '(&REST MORE) "Pathname for user-specific non-essential runtime files and other file objects,
such as sockets, named pipes, etc.
Returns an absolute directory pathname.
MORE may contain specifications for a subpath relative to this directory: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE SYSTEM-CONFIG-PATHNAMES))
(PROGN (SYSTEM:PUT 'SYSTEM-CONFIG-PATHNAMES 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-CONFIG-PATHNAMES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'SYSTEM-CONFIG-PATHNAMES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-CONFIG-PATHNAMES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 705) 363324 '(&REST MORE) "Return a list of directories where are stored the system's default user configuration information.
MORE may contain specifications for a subpath relative to these directories: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE FILTER-PATHNAME-SET))
(PROGN (SYSTEM:PUT 'FILTER-PATHNAME-SET 'SYSTEM::SOURCE (CONS '((:FUNCTION FILTER-PATHNAME-SET) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'FILTER-PATHNAME-SET 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FILTER-PATHNAME-SET (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 706) 363324 '(DIRS) "Parse strings as unix namestrings and remove duplicates and non absolute-pathnames in a list."))
(PROCLAIM '(NOTINLINE XDG-DATA-PATHNAMES))
(PROGN (SYSTEM:PUT 'XDG-DATA-PATHNAMES 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-DATA-PATHNAMES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-DATA-PATHNAMES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-DATA-PATHNAMES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 707) 363324 '(&REST MORE) "Return a list of absolute pathnames for application data directories.  With APP,
returns directory for data for that application, without APP, returns the set of directories
for storing all application configurations.
MORE may contain specifications for a subpath relative to these directories: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE XDG-CONFIG-PATHNAMES))
(PROGN (SYSTEM:PUT 'XDG-CONFIG-PATHNAMES 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-CONFIG-PATHNAMES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-CONFIG-PATHNAMES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-CONFIG-PATHNAMES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 708) 363324 '(&REST MORE) "Return a list of pathnames for application configuration.
MORE may contain specifications for a subpath relative to these directories: a
subpathname specification and keyword arguments as per RESOLVE-LOCATION (see
also \"Configuration DSL\") in the ASDF manual."))
(PROCLAIM '(NOTINLINE FIND-PREFERRED-FILE))
(PROGN (SYSTEM:PUT 'FIND-PREFERRED-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION FIND-PREFERRED-FILE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'FIND-PREFERRED-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIND-PREFERRED-FILE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 709) 363324 '(FILES &KEY (DIRECTION :INPUT)) "Find first file in the list of FILES that exists (for direction :input or :probe)
or just the first one (for direction :output or :io).
    Note that when we say \"file\" here, the files in question may be directories."))
(PROCLAIM '(NOTINLINE XDG-DATA-PATHNAME))
(PROGN (SYSTEM:PUT 'XDG-DATA-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-DATA-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-DATA-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-DATA-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 710) 363324 '(&OPTIONAL MORE (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE XDG-CONFIG-PATHNAME))
(PROGN (SYSTEM:PUT 'XDG-CONFIG-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION XDG-CONFIG-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'XDG-CONFIG-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'XDG-CONFIG-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 711) 363324 '(&OPTIONAL MORE (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE COMPUTE-USER-CACHE))
(PROGN (SYSTEM:PUT 'COMPUTE-USER-CACHE 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPUTE-USER-CACHE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'COMPUTE-USER-CACHE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPUTE-USER-CACHE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 712) 363324 'NIL "Compute (and return) the location of the default user-cache for translate-output
objects. Side-effects for cached file location computation."))
(REGISTER-IMAGE-RESTORE-HOOK 'COMPUTE-USER-CACHE)
(PROCLAIM '(NOTINLINE UIOP-DIRECTORY))
(PROGN (SYSTEM:PUT 'UIOP-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION UIOP-DIRECTORY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 363324) (GET 
'UIOP-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UIOP-DIRECTORY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 713) 363324 'NIL "Try to locate the UIOP source directory at runtime"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 719))
(SYSTEM:%IN-PACKAGE "UIOP/BACKWARD-DRIVER")
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-COERCE-PATHNAME-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-COERCE-PATHNAME-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-COERCE-PATHNAME-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE COERCE-PATHNAME))
(SYSTEM:PUT 'COERCE-PATHNAME 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET 'COERCE-PATHNAME 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 720))
(SETF (SYSTEM:INLINE-EXPANSION 'COERCE-PATHNAME) 'NIL)
(PROGN (SYSTEM:PUT 'COERCE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION COERCE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 385884) (GET 
'COERCE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COERCE-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 722) 385884 '(NAME &KEY TYPE DEFAULTS) "DEPRECATED. Please use UIOP:PARSE-UNIX-NAMESTRING instead."))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-USER-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-USER-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-USER-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE USER-CONFIGURATION-DIRECTORIES))
(SYSTEM:PUT 'USER-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 385884) (GET 
'USER-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 723))
(SETF (SYSTEM:INLINE-EXPANSION 'USER-CONFIGURATION-DIRECTORIES) '(LAMBDA NIL (BLOCK 
USER-CONFIGURATION-DIRECTORIES (UNLESS *DEPRECATED-FUNCTION-STYLE-WARNING-USER-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
(SETF *DEPRECATED-FUNCTION-STYLE-WARNING-USER-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
T) (UIOP/VERSION::NOTIFY-DEPRECATED-FUNCTION :STYLE-WARNING 'USER-CONFIGURATION-DIRECTORIES)) 
(XDG-CONFIG-PATHNAMES "common-lisp"))))
(PROGN (SYSTEM:PUT 'USER-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
USER-CONFIGURATION-DIRECTORIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET 'USER-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'USER-CONFIGURATION-DIRECTORIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 725) 
385884 'NIL "Return the current user's list of user configuration directories
for configuring common-lisp.
DEPRECATED. Use UIOP:XDG-CONFIG-PATHNAMES instead."))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE SYSTEM-CONFIGURATION-DIRECTORIES))
(SYSTEM:PUT 'SYSTEM-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 385884) (GET 
'SYSTEM-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 726))
(SETF (SYSTEM:INLINE-EXPANSION 'SYSTEM-CONFIGURATION-DIRECTORIES) '(LAMBDA NIL (BLOCK 
SYSTEM-CONFIGURATION-DIRECTORIES (UNLESS *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
(SETF *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-CONFIGURATION-DIRECTORIES-NOTIFIED-P* 
T) (UIOP/VERSION::NOTIFY-DEPRECATED-FUNCTION :STYLE-WARNING 'SYSTEM-CONFIGURATION-DIRECTORIES)) 
(SYSTEM-CONFIG-PATHNAMES "common-lisp"))))
(PROGN (SYSTEM:PUT 'SYSTEM-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSTEM-CONFIGURATION-DIRECTORIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET 'SYSTEM-CONFIGURATION-DIRECTORIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYSTEM-CONFIGURATION-DIRECTORIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
728) 385884 'NIL "Return the list of system configuration directories for common-lisp.
DEPRECATED. Use UIOP:SYSTEM-CONFIG-PATHNAMES (with argument \"common-lisp\"),
instead."))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-IN-FIRST-DIRECTORY-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-IN-FIRST-DIRECTORY-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-IN-FIRST-DIRECTORY-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE IN-FIRST-DIRECTORY))
(SYSTEM:PUT 'IN-FIRST-DIRECTORY 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET 'IN-FIRST-DIRECTORY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 729))
(SETF (SYSTEM:INLINE-EXPANSION 'IN-FIRST-DIRECTORY) 'NIL)
(PROGN (SYSTEM:PUT 'IN-FIRST-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION IN-FIRST-DIRECTORY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 385884) (GET 
'IN-FIRST-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'IN-FIRST-DIRECTORY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 731) 385884 '(DIRS X &KEY (DIRECTION :INPUT)) "Finds the first appropriate file named X in the list of DIRS for I/O
in DIRECTION (which may be :INPUT, :OUTPUT, :IO, or :PROBE).
If direction is :INPUT or :PROBE, will return the first extant file named
X in one of the DIRS.
If direction is :OUTPUT or :IO, will simply return the file named X in the
first element of DIRS that exists. DEPRECATED."))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-IN-USER-CONFIGURATION-DIRECTORY-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-IN-USER-CONFIGURATION-DIRECTORY-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-IN-USER-CONFIGURATION-DIRECTORY-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE IN-USER-CONFIGURATION-DIRECTORY))
(SYSTEM:PUT 'IN-USER-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 385884) (GET 
'IN-USER-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 733))
(SETF (SYSTEM:INLINE-EXPANSION 'IN-USER-CONFIGURATION-DIRECTORY) 'NIL)
(PROGN (SYSTEM:PUT 'IN-USER-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
IN-USER-CONFIGURATION-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET 'IN-USER-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'IN-USER-CONFIGURATION-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
735) 385884 '(X &KEY (DIRECTION :INPUT)) "Return the file named X in the user configuration directory for common-lisp.
DEPRECATED."))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-IN-SYSTEM-CONFIGURATION-DIRECTORY-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-IN-SYSTEM-CONFIGURATION-DIRECTORY-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-IN-SYSTEM-CONFIGURATION-DIRECTORY-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE IN-SYSTEM-CONFIGURATION-DIRECTORY))
(SYSTEM:PUT 'IN-SYSTEM-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 385884) (GET 
'IN-SYSTEM-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 736))
(SETF (SYSTEM:INLINE-EXPANSION 'IN-SYSTEM-CONFIGURATION-DIRECTORY) 'NIL)
(PROGN (SYSTEM:PUT 'IN-SYSTEM-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
IN-SYSTEM-CONFIGURATION-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET 'IN-SYSTEM-CONFIGURATION-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'IN-SYSTEM-CONFIGURATION-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
738) 385884 '(X &KEY (DIRECTION :INPUT)) "Return the pathname for the file named X under the system configuration directory
for common-lisp. DEPRECATED."))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-VERSION-COMPATIBLE-P-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-VERSION-COMPATIBLE-P-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-VERSION-COMPATIBLE-P-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE VERSION-COMPATIBLE-P))
(SYSTEM:PUT 'VERSION-COMPATIBLE-P 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
385884) (GET 'VERSION-COMPATIBLE-P 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 739))
(SETF (SYSTEM:INLINE-EXPANSION 'VERSION-COMPATIBLE-P) '(LAMBDA (PROVIDED-VERSION 
REQUIRED-VERSION) (BLOCK VERSION-COMPATIBLE-P (UNLESS *DEPRECATED-FUNCTION-STYLE-WARNING-VERSION-COMPATIBLE-P-NOTIFIED-P* 
(SETF *DEPRECATED-FUNCTION-STYLE-WARNING-VERSION-COMPATIBLE-P-NOTIFIED-P* T) (UIOP/VERSION::NOTIFY-DEPRECATED-FUNCTION 
:STYLE-WARNING 'VERSION-COMPATIBLE-P)) (LET ((X (PARSE-VERSION PROVIDED-VERSION NIL)) 
(Y (PARSE-VERSION REQUIRED-VERSION NIL))) (AND X Y (= (CAR X) (CAR Y)) (LEXICOGRAPHIC<= 
'< (CDR Y) (CDR X)))))))
(PROGN (SYSTEM:PUT 'VERSION-COMPATIBLE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION VERSION-COMPATIBLE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 385884) (GET 
'VERSION-COMPATIBLE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VERSION-COMPATIBLE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 741) 385884 '(PROVIDED-VERSION REQUIRED-VERSION) "Is the provided version a compatible substitution for the required-version?
If major versions differ, it's not compatible.
If they are equal, then any later version is compatible,
with later being determined by a lexicographical comparison of minor numbers.
DEPRECATED."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 742))
(PROVIDE "uiop")
(PROVIDE "UIOP")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 743))
(SYSTEM:%IN-PACKAGE "ASDF/UPGRADE")
(PROCLAIM '(NOTINLINE ASDF-VERSION))
(PROGN (SYSTEM:PUT 'ASDF-VERSION 'SYSTEM::SOURCE (CONS '((:FUNCTION ASDF-VERSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 390525) (GET 
'ASDF-VERSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ASDF-VERSION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 744) 390525 'NIL "Exported interface to the version of ASDF currently installed. A string.
You can compare this string with e.g.: (ASDF:VERSION-SATISFIES (ASDF:ASDF-VERSION) \"3.4.5.67\")."))
(PROGN (SYSTEM:PUT '*PREVIOUS-ASDF-VERSIONS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 390525) (GET 
'*PREVIOUS-ASDF-VERSIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *PREVIOUS-ASDF-VERSIONS* 
(LET ((PREVIOUS (ASDF-VERSION))) (WHEN PREVIOUS (WHEN (VERSION< PREVIOUS "2.27") 
(LET ((AWAY (FORMAT NIL "~A-~A" :ASDF PREVIOUS))) (RENAME-PACKAGE :ASDF AWAY) (WHEN 
*LOAD-VERBOSE* (FORMAT T "~&; Renamed old ~A package away to ~A~%" :ASDF AWAY)))) 
(LIST PREVIOUS)))))
(PROGN (SYSTEM:PUT '*ASDF-VERSION* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
390525) (GET '*ASDF-VERSION* 'SYSTEM::SOURCE NIL))) (DEFVAR *ASDF-VERSION* NIL))
(PROGN (SYSTEM:PUT '*OLDEST-FORWARD-COMPATIBLE-ASDF-VERSION* 'SYSTEM::SOURCE (CONS 
(LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
390525) (GET '*OLDEST-FORWARD-COMPATIBLE-ASDF-VERSION* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER 
*OLDEST-FORWARD-COMPATIBLE-ASDF-VERSION* (MAKE-ARRAY '(7) :ELEMENT-TYPE 'CHARACTER 
:INITIAL-CONTENTS '(#\3 #\. #\2 #\. #\0 #\. #\2))))
(PROGN (SYSTEM:PUT '*VERBOSE-OUT* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
390525) (GET '*VERBOSE-OUT* 'SYSTEM::SOURCE NIL))) (DEFVAR *VERBOSE-OUT* NIL))
(PROCLAIM '(NOTINLINE ASDF-MESSAGE))
(PROGN (SYSTEM:PUT 'ASDF-MESSAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION ASDF-MESSAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 390525) (GET 
'ASDF-MESSAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ASDF-MESSAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 746) 390525 '(FORMAT-STRING &REST FORMAT-ARGS) NIL))
(PROGN (SYSTEM:PUT '*POST-UPGRADE-CLEANUP-HOOK* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 390525) (GET 
'*POST-UPGRADE-CLEANUP-HOOK* 'SYSTEM::SOURCE NIL))) (DEFVAR *POST-UPGRADE-CLEANUP-HOOK* 
NIL))
(PROGN (SYSTEM:PUT '*ASDF-UPGRADED-P* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
390525) (GET '*ASDF-UPGRADED-P* 'SYSTEM::SOURCE NIL))) (DEFVAR *ASDF-UPGRADED-P*))
(PROCLAIM '(NOTINLINE UPGRADING-P))
(PROGN (SYSTEM:PUT 'UPGRADING-P 'SYSTEM::SOURCE (CONS '((:FUNCTION UPGRADING-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
390525) (GET 'UPGRADING-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UPGRADING-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 747) 390525 '(&OPTIONAL (OLDEST-COMPATIBLE-VERSION *OLDEST-FORWARD-COMPATIBLE-ASDF-VERSION*)) 
NIL))
(PROGN (SYSTEM:PUT 'DEFPARAMETER* 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
390525) (GET 'DEFPARAMETER* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFPARAMETER* (SYSTEM:MAKE-MACRO 
'DEFPARAMETER* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 748)) 390525 '(VAR 
VALUE &OPTIONAL DOCSTRING (VERSION *OLDEST-FORWARD-COMPATIBLE-ASDF-VERSION*)) NIL))
(PROGN (SYSTEM:PUT 'WHEN-UPGRADING 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
390525) (GET 'WHEN-UPGRADING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WHEN-UPGRADING 
(SYSTEM:MAKE-MACRO 'WHEN-UPGRADING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
750)) 390525 '((&KEY (VERSION *OLDEST-FORWARD-COMPATIBLE-ASDF-VERSION*) (UPGRADING-P 
(SYSTEM::BACKQ-LIST 'UPGRADING-P VERSION)) WHEN) &BODY BODY) "A wrapper macro for code that should only be run when upgrading a
previously-loaded version of ASDF."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 751))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 752))
(PROCLAIM '(NOTINLINE CLEANUP-UPGRADED-ASDF))
(PROGN (SYSTEM:PUT 'CLEANUP-UPGRADED-ASDF 'SYSTEM::SOURCE (CONS '((:FUNCTION CLEANUP-UPGRADED-ASDF) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 399021) (GET 
'CLEANUP-UPGRADED-ASDF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CLEANUP-UPGRADED-ASDF 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 753) 399021 '(&OPTIONAL (OLD-VERSION 
(FIRST *PREVIOUS-ASDF-VERSIONS*))) NIL))
(PROCLAIM '(NOTINLINE UPGRADE-ASDF))
(PROGN (SYSTEM:PUT 'UPGRADE-ASDF 'SYSTEM::SOURCE (CONS '((:FUNCTION UPGRADE-ASDF) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 399021) (GET 
'UPGRADE-ASDF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UPGRADE-ASDF (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 754) 399021 'NIL "Try to upgrade of ASDF. If a different version was used, return T.
   We need do that before we operate on anything that may possibly depend on ASDF."))
(PROGN (SYSTEM:PUT 'WITH-ASDF-DEPRECATION 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
399021) (GET 'WITH-ASDF-DEPRECATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-ASDF-DEPRECATION 
(SYSTEM:MAKE-MACRO 'WITH-ASDF-DEPRECATION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
755)) 399021 '((&REST KEYS &KEY &ALLOW-OTHER-KEYS) &BODY BODY) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 756))
(SYSTEM:%IN-PACKAGE "ASDF/SESSION")
(PROGN (SYSTEM:PUT '*ASDF-SESSION* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET '*ASDF-SESSION* 'SYSTEM::SOURCE NIL))) (DEFVAR *ASDF-SESSION* NIL))
(PROGN (SYSTEM:PUT '%COMPUTE-ASDF-SESSION-CLASS-VALUE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%COMPUTE-ASDF-SESSION-CLASS-VALUE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET '%COMPUTE-ASDF-SESSION-CLASS-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'%COMPUTE-ASDF-SESSION-CLASS-VALUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
757) 402159 'NIL NIL))
(PROGN (SYSTEM:PUT '*ASDF-SESSION-CLASS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET '*ASDF-SESSION-CLASS* 'SYSTEM::SOURCE NIL))) (DEFVAR *ASDF-SESSION-CLASS* 
(%COMPUTE-ASDF-SESSION-CLASS-VALUE) "The default class for sessions"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 758))
(SYSTEM:PUT 'SESSION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET 'SESSION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 759))
(PROCLAIM '(NOTINLINE TOPLEVEL-ASDF-SESSION))
(PROGN (SYSTEM:PUT 'TOPLEVEL-ASDF-SESSION 'SYSTEM::SOURCE (CONS '((:FUNCTION TOPLEVEL-ASDF-SESSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'TOPLEVEL-ASDF-SESSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TOPLEVEL-ASDF-SESSION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 771) 402159 'NIL NIL))
(PROCLAIM '(NOTINLINE OPERATE-LEVEL))
(PROGN (SYSTEM:PUT 'OPERATE-LEVEL 'SYSTEM::SOURCE (CONS '((:FUNCTION OPERATE-LEVEL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'OPERATE-LEVEL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OPERATE-LEVEL (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 772) 402159 'NIL NIL))
(PROCLAIM '(NOTINLINE (SETF OPERATE-LEVEL)))
(PROGN (SYSTEM:PUT 'OPERATE-LEVEL 'SYSTEM::SOURCE (CONS '((:FUNCTION (SETF OPERATE-LEVEL)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'OPERATE-LEVEL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '(SETF OPERATE-LEVEL) (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 773) 402159 '(NEW-LEVEL) NIL))
(PROCLAIM '(NOTINLINE ASDF-CACHE))
(PROGN (SYSTEM:PUT 'ASDF-CACHE 'SYSTEM::SOURCE (CONS '((:FUNCTION ASDF-CACHE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET 'ASDF-CACHE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ASDF-CACHE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 774) 402159 'NIL NIL))
(PROCLAIM '(NOTINLINE SET-ASDF-CACHE-ENTRY))
(PROGN (SYSTEM:PUT 'SET-ASDF-CACHE-ENTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION SET-ASDF-CACHE-ENTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'SET-ASDF-CACHE-ENTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SET-ASDF-CACHE-ENTRY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 775) 402159 '(KEY VALUE-LIST) NIL))
(PROCLAIM '(NOTINLINE UNSET-ASDF-CACHE-ENTRY))
(PROGN (SYSTEM:PUT 'UNSET-ASDF-CACHE-ENTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION UNSET-ASDF-CACHE-ENTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'UNSET-ASDF-CACHE-ENTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UNSET-ASDF-CACHE-ENTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 776) 402159 '(KEY) NIL))
(PROCLAIM '(NOTINLINE CONSULT-ASDF-CACHE))
(PROGN (SYSTEM:PUT 'CONSULT-ASDF-CACHE 'SYSTEM::SOURCE (CONS '((:FUNCTION CONSULT-ASDF-CACHE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'CONSULT-ASDF-CACHE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CONSULT-ASDF-CACHE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 777) 402159 '(KEY &OPTIONAL THUNK) NIL))
(PROGN (SYSTEM:PUT 'DO-ASDF-CACHE 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET 'DO-ASDF-CACHE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DO-ASDF-CACHE (SYSTEM:MAKE-MACRO 
'DO-ASDF-CACHE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 778)) 402159 '(KEY 
&BODY BODY) NIL))
(PROCLAIM '(NOTINLINE CALL-WITH-ASDF-SESSION))
(PROGN (SYSTEM:PUT 'CALL-WITH-ASDF-SESSION 'SYSTEM::SOURCE (CONS '((:FUNCTION CALL-WITH-ASDF-SESSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'CALL-WITH-ASDF-SESSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WITH-ASDF-SESSION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 779) 402159 '(THUNK &KEY OVERRIDE 
KEY OVERRIDE-CACHE OVERRIDE-FORCING) NIL))
(PROGN (SYSTEM:PUT 'WITH-ASDF-SESSION 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET 'WITH-ASDF-SESSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WITH-ASDF-SESSION 
(SYSTEM:MAKE-MACRO 'WITH-ASDF-SESSION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
787)) 402159 '((&KEY KEY OVERRIDE OVERRIDE-CACHE OVERRIDE-FORCING) &BODY BODY) NIL))
(PROCLAIM '(NOTINLINE NORMALIZE-NAMESTRING))
(PROGN (SYSTEM:PUT 'NORMALIZE-NAMESTRING 'SYSTEM::SOURCE (CONS '((:FUNCTION NORMALIZE-NAMESTRING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'NORMALIZE-NAMESTRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NORMALIZE-NAMESTRING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 788) 402159 '(PATHNAME) NIL))
(PROCLAIM '(NOTINLINE COMPUTE-FILE-STAMP))
(PROGN (SYSTEM:PUT 'COMPUTE-FILE-STAMP 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPUTE-FILE-STAMP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'COMPUTE-FILE-STAMP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPUTE-FILE-STAMP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 789) 402159 '(NORMALIZED-NAMESTRING) NIL))
(PROCLAIM '(NOTINLINE REGISTER-FILE-STAMP))
(PROGN (SYSTEM:PUT 'REGISTER-FILE-STAMP 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTER-FILE-STAMP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'REGISTER-FILE-STAMP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-FILE-STAMP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 790) 402159 '(FILE &OPTIONAL (STAMP NIL STAMPP)) NIL))
(PROCLAIM '(NOTINLINE GET-FILE-STAMP))
(PROGN (SYSTEM:PUT 'GET-FILE-STAMP 'SYSTEM::SOURCE (CONS '((:FUNCTION GET-FILE-STAMP) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'GET-FILE-STAMP 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'GET-FILE-STAMP (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 791) 402159 '(FILE) NIL))
(SYSTEM:PUT 'SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET 'SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET 'SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 793))
(SYSTEM:PUT 'FORMATTED-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'FORMATTED-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'FORMATTED-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
402159) (GET 'FORMATTED-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 794))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (FORMATTED-SYSTEM-DEFINITION-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'FORMATTED-SYSTEM-DEFINITION-ERROR 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 795))
(PROCLAIM '(NOTINLINE SYSDEF-ERROR))
(PROGN (SYSTEM:PUT 'SYSDEF-ERROR 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSDEF-ERROR) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 402159) (GET 
'SYSDEF-ERROR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSDEF-ERROR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 799) 402159 '(FORMAT &REST ARGUMENTS) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 800))
(SYSTEM:%IN-PACKAGE "ASDF/COMPONENT")
(PROCLAIM '(NOTINLINE COMPONENT-NAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 801))
(PROGN (SYSTEM:PUT 'COMPONENT-NAME 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION COMPONENT-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 413148) (GET 
'COMPONENT-NAME 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-SYSTEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 802))
(PROGN (SYSTEM:PUT 'COMPONENT-SYSTEM 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION COMPONENT-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 413148) (GET 
'COMPONENT-SYSTEM 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-PATHNAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 803))
(PROGN (SYSTEM:PUT 'COMPONENT-PATHNAME 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'COMPONENT-PATHNAME 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-RELATIVE-PATHNAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 804))
(PROGN (SYSTEM:PUT 'COMPONENT-RELATIVE-PATHNAME 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-RELATIVE-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'COMPONENT-RELATIVE-PATHNAME 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-EXTERNAL-FORMAT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 805))
(PROGN (SYSTEM:PUT 'COMPONENT-EXTERNAL-FORMAT 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-EXTERNAL-FORMAT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'COMPONENT-EXTERNAL-FORMAT 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-ENCODING))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 806))
(PROGN (SYSTEM:PUT 'COMPONENT-ENCODING 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-ENCODING) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'COMPONENT-ENCODING 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE VERSION-SATISFIES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 807))
(PROGN (SYSTEM:PUT 'VERSION-SATISFIES 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
VERSION-SATISFIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'VERSION-SATISFIES 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-VERSION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 808))
(PROGN (SYSTEM:PUT 'COMPONENT-VERSION 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-VERSION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'COMPONENT-VERSION 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE (SETF COMPONENT-VERSION)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 809))
(PROGN (SYSTEM:PUT 'COMPONENT-VERSION 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
(SETF COMPONENT-VERSION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'COMPONENT-VERSION 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-PARENT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 810))
(PROGN (SYSTEM:PUT 'COMPONENT-PARENT 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION COMPONENT-PARENT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 413148) (GET 
'COMPONENT-PARENT 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'COMPONENT-PARENT 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-PARENT NIL 
(NULL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 413148) 
(GET 'COMPONENT-PARENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-PARENT :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 811) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
814))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 817))
(PROGN (SYSTEM:PUT 'SOURCE-FILE-TYPE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION SOURCE-FILE-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 413148) (GET 
'SOURCE-FILE-TYPE 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'DUPLICATE-NAMES 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'DUPLICATE-NAMES 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DUPLICATE-NAMES 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
413148) (GET 'DUPLICATE-NAMES 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 818))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (DUPLICATE-NAMES 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 413148) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'DUPLICATE-NAMES 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 819))
(SYSTEM:PUT 'COMPONENT 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
415745) (GET 'COMPONENT 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 823))
(PROCLAIM '(NOTINLINE FIND-COMPONENT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 837))
(PROGN (SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION FIND-COMPONENT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 415745) (GET 
'FIND-COMPONENT 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-FIND-PATH))
(PROGN (SYSTEM:PUT 'COMPONENT-FIND-PATH 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPONENT-FIND-PATH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 415745) (GET 
'COMPONENT-FIND-PATH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPONENT-FIND-PATH (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 838) 415745 '(COMPONENT) "Return a path from a root system to the COMPONENT.
The return value is a list of component NAMES; a list of strings."))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (COMPONENT 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 415745) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 839) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
844))
(SYSTEM:PUT 'COMPONENT-SYSTEM 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-SYSTEM NIL 
(COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
415745) (GET 'COMPONENT-SYSTEM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-SYSTEM :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 849) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
852))
(SYSTEM:PUT 'CHILD-COMPONENT 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'CHILD-COMPONENT 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 855))
(SYSTEM:PUT 'FILE-COMPONENT 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'FILE-COMPONENT 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 856))
(SYSTEM:PUT 'SOURCE-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'SOURCE-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 857))
(SYSTEM:PUT 'C-SOURCE-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'C-SOURCE-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 859))
(SYSTEM:PUT 'JAVA-SOURCE-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'JAVA-SOURCE-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 861))
(SYSTEM:PUT 'STATIC-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'STATIC-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 863))
(SYSTEM:PUT 'DOC-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'DOC-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 865))
(SYSTEM:PUT 'HTML-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'HTML-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 866))
(SYSTEM:PUT 'PARENT-COMPONENT 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
420557) (GET 'PARENT-COMPONENT 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 868))
(PROCLAIM '(NOTINLINE COMPUTE-CHILDREN-BY-NAME))
(PROGN (SYSTEM:PUT 'COMPUTE-CHILDREN-BY-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPUTE-CHILDREN-BY-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 422147) (GET 
'COMPUTE-CHILDREN-BY-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPUTE-CHILDREN-BY-NAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 871) 422147 '(PARENT &KEY ONLY-IF-NEEDED-P) 
NIL))
(SYSTEM:PUT 'MODULE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
423007) (GET 'MODULE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 872))
(PROCLAIM '(NOTINLINE COMPONENT-PARENT-PATHNAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 873))
(PROGN (SYSTEM:PUT 'COMPONENT-PARENT-PATHNAME 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-PARENT-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
423345) (GET 'COMPONENT-PARENT-PATHNAME 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'COMPONENT-PARENT-PATHNAME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-PARENT-PATHNAME 
NIL (T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 423345) 
(GET 'COMPONENT-PARENT-PATHNAME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-PARENT-PATHNAME :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 874) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
877))
(SYSTEM:PUT 'COMPONENT-PATHNAME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-PATHNAME 
NIL (COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
423345) (GET 'COMPONENT-PATHNAME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-PATHNAME :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 880) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
883))
(SYSTEM:PUT 'COMPONENT-RELATIVE-PATHNAME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-RELATIVE-PATHNAME 
NIL (COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
423345) (GET 'COMPONENT-RELATIVE-PATHNAME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-RELATIVE-PATHNAME :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 886) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
889))
(SYSTEM:PUT 'SOURCE-FILE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD SOURCE-FILE-TYPE NIL 
(PARENT-COMPONENT PARENT-COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
423345) (GET 'SOURCE-FILE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SOURCE-FILE-TYPE :LAMBDA-LIST '(COMPONENT SYSTEM) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PARENT-COMPONENT 'PARENT-COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 892) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 895))
(SYSTEM:PUT 'SOURCE-FILE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD SOURCE-FILE-TYPE NIL 
(FILE-COMPONENT PARENT-COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
423345) (GET 'SOURCE-FILE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SOURCE-FILE-TYPE :LAMBDA-LIST '(COMPONENT SYSTEM) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'FILE-COMPONENT 'PARENT-COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 898) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 901))
(SYSTEM:PUT 'COMPONENT-ENCODING 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-ENCODING 
NIL (COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
426019) (GET 'COMPONENT-ENCODING 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-ENCODING :LAMBDA-LIST '(C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 904) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
907))
(SYSTEM:PUT 'COMPONENT-EXTERNAL-FORMAT 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-EXTERNAL-FORMAT 
NIL (COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
426019) (GET 'COMPONENT-EXTERNAL-FORMAT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-EXTERNAL-FORMAT :LAMBDA-LIST '(C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 910) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
913))
(PROCLAIM '(NOTINLINE AROUND-COMPILE-HOOK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 916))
(PROGN (SYSTEM:PUT 'AROUND-COMPILE-HOOK 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
AROUND-COMPILE-HOOK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
426379) (GET 'AROUND-COMPILE-HOOK 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'AROUND-COMPILE-HOOK 'SYSTEM::SOURCE (CONS '((:METHOD AROUND-COMPILE-HOOK 
NIL (COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
426379) (GET 'AROUND-COMPILE-HOOK 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'AROUND-COMPILE-HOOK :LAMBDA-LIST '(C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 917) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
920))
(SYSTEM:PUT 'VERSION-SATISFIES 'SYSTEM::SOURCE (CONS '((:METHOD VERSION-SATISFIES 
(:AROUND) (T NULL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
427039) (GET 'VERSION-SATISFIES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VERSION-SATISFIES :LAMBDA-LIST '(C VERSION) :QUALIFIERS '(:AROUND) 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'NULL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 923) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
926))
(SYSTEM:PUT 'VERSION-SATISFIES 'SYSTEM::SOURCE (CONS '((:METHOD VERSION-SATISFIES 
NIL (COMPONENT T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
427039) (GET 'VERSION-SATISFIES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VERSION-SATISFIES :LAMBDA-LIST '(C VERSION) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 929) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
932))
(SYSTEM:PUT 'VERSION-SATISFIES 'SYSTEM::SOURCE (CONS '((:METHOD VERSION-SATISFIES 
NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
427039) (GET 'VERSION-SATISFIES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'VERSION-SATISFIES :LAMBDA-LIST '(CVER VERSION) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 935) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
938))
(PROCLAIM '(NOTINLINE SUB-COMPONENTS))
(PROGN (SYSTEM:PUT 'SUB-COMPONENTS 'SYSTEM::SOURCE (CONS '((:FUNCTION SUB-COMPONENTS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 427661) (GET 
'SUB-COMPONENTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SUB-COMPONENTS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 941) 427661 '(COMPONENT &KEY (TYPE T)) "Compute the transitive sub-components of given COMPONENT that are of given TYPE"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 944))
(SYSTEM:%IN-PACKAGE "ASDF/OPERATION")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 945))
(SYSTEM:PUT 'OPERATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
428942) (GET 'OPERATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 946))
(PROGN (SYSTEM:PUT '*IN-MAKE-OPERATION* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
428942) (GET '*IN-MAKE-OPERATION* 'SYSTEM::SOURCE NIL))) (DEFVAR *IN-MAKE-OPERATION* 
NIL))
(PROCLAIM '(NOTINLINE CHECK-OPERATION-CONSTRUCTOR))
(PROGN (SYSTEM:PUT 'CHECK-OPERATION-CONSTRUCTOR 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CHECK-OPERATION-CONSTRUCTOR) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
428942) (GET 'CHECK-OPERATION-CONSTRUCTOR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHECK-OPERATION-CONSTRUCTOR 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 947) 428942 'NIL "Enforce that OPERATION instances must be created with MAKE-OPERATION."))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (OPERATION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 428942) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(O STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 948) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
951))
(SYSTEM:PUT 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE (CONS '((:METHOD INITIALIZE-INSTANCE 
(:AFTER) (OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
428942) (GET 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INITIALIZE-INSTANCE :LAMBDA-LIST '(O &REST INITARGS &KEY &ALLOW-OTHER-KEYS) 
:QUALIFIERS '(:AFTER) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 954))
(PROGN (SYSTEM:PUT '%COMPUTE-OPERATIONS-VALUE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%COMPUTE-OPERATIONS-VALUE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
430005) (GET '%COMPUTE-OPERATIONS-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%COMPUTE-OPERATIONS-VALUE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 958) 430005 'NIL NIL))
(PROGN (SYSTEM:PUT '*OPERATIONS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
430005) (GET '*OPERATIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *OPERATIONS* (%COMPUTE-OPERATIONS-VALUE)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 959))
(PROCLAIM '(NOTINLINE MAKE-OPERATION))
(PROGN (SYSTEM:PUT 'MAKE-OPERATION 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-OPERATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 430005) (GET 
'MAKE-OPERATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-OPERATION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 960) 430005 '(OPERATION-CLASS) "This function creates and memoizes an instance of OPERATION-CLASS.
All operation instances MUST be created through this function.

Use of INITARGS is not supported at this time."))
(PROCLAIM '(NOTINLINE FIND-OPERATION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 961))
(PROGN (SYSTEM:PUT 'FIND-OPERATION 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION FIND-OPERATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 430005) (GET 
'FIND-OPERATION 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'FIND-OPERATION 'SYSTEM::SOURCE (CONS '((:METHOD FIND-OPERATION NIL (T 
OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
430005) (GET 'FIND-OPERATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-OPERATION :LAMBDA-LIST '(CONTEXT SPEC) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 962) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
965))
(SYSTEM:PUT 'FIND-OPERATION 'SYSTEM::SOURCE (CONS '((:METHOD FIND-OPERATION NIL (T 
SYMBOL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 430005) 
(GET 'FIND-OPERATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-OPERATION :LAMBDA-LIST '(CONTEXT SPEC) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 968) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
971))
(SYSTEM:PUT 'FIND-OPERATION 'SYSTEM::SOURCE (CONS '((:METHOD FIND-OPERATION NIL (T 
STRING)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 430005) 
(GET 'FIND-OPERATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-OPERATION :LAMBDA-LIST '(CONTEXT SPEC) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'STRING)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 974) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
977))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 980))
(SYSTEM:%IN-PACKAGE "ASDF/SYSTEM")
(PROCLAIM '(NOTINLINE FIND-SYSTEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 981))
(PROGN (SYSTEM:PUT 'FIND-SYSTEM 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION FIND-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 432744) (GET 
'FIND-SYSTEM 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-FILE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 982))
(PROGN (SYSTEM:PUT 'SYSTEM-SOURCE-FILE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
SYSTEM-SOURCE-FILE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
432744) (GET 'SYSTEM-SOURCE-FILE 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-BUILD-PATHNAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 983))
(PROGN (SYSTEM:PUT 'COMPONENT-BUILD-PATHNAME 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-BUILD-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
432744) (GET 'COMPONENT-BUILD-PATHNAME 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPONENT-ENTRY-POINT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 984))
(PROGN (SYSTEM:PUT 'COMPONENT-ENTRY-POINT 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-ENTRY-POINT) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
432744) (GET 'COMPONENT-ENTRY-POINT 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'COMPONENT-ENTRY-POINT 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-ENTRY-POINT 
NIL (COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
432744) (GET 'COMPONENT-ENTRY-POINT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-ENTRY-POINT :LAMBDA-LIST '(C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 985) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
988))
(SYSTEM:PUT 'PROTO-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
434690) (GET 'PROTO-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 991))
(SYSTEM:PUT 'SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
434690) (GET 'SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 994))
(SYSTEM:PUT 'UNDEFINED-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
434690) (GET 'UNDEFINED-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1010))
(PROCLAIM '(NOTINLINE RESET-SYSTEM-CLASS))
(PROGN (SYSTEM:PUT 'RESET-SYSTEM-CLASS 'SYSTEM::SOURCE (CONS '((:FUNCTION RESET-SYSTEM-CLASS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 434690) (GET 
'RESET-SYSTEM-CLASS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESET-SYSTEM-CLASS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1011) 434690 '(SYSTEM NEW-CLASS &REST KEYS &KEY &ALLOW-OTHER-KEYS) 
"Erase any data from a SYSTEM except its basic identity, then reinitialize it
based on supplied KEYS."))
(PROCLAIM '(NOTINLINE COERCE-NAME))
(PROGN (SYSTEM:PUT 'COERCE-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION COERCE-NAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
438076) (GET 'COERCE-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COERCE-NAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1012) 438076 '(NAME) "Given a designator for a component NAME, return the name as a string.
The designator can be a COMPONENT (designing its name; note that a SYSTEM is a component),
a SYMBOL (designing its name, downcased), or a STRING (designing itself)."))
(PROCLAIM '(NOTINLINE PRIMARY-SYSTEM-NAME))
(PROGN (SYSTEM:PUT 'PRIMARY-SYSTEM-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION PRIMARY-SYSTEM-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 438076) (GET 
'PRIMARY-SYSTEM-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PRIMARY-SYSTEM-NAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1013) 438076 '(SYSTEM-DESIGNATOR) "Given a system designator NAME, return the name of the corresponding
primary system, after which the .asd file in which it is defined is named.
If given a string or symbol (to downcase), do it syntactically
 by stripping anything from the first slash on.
If given a component, do it semantically by extracting
the system-primary-system-name of its system from its source-file if any,
falling back to the syntactic criterion if none."))
(PROCLAIM '(NOTINLINE PRIMARY-SYSTEM-P))
(PROGN (SYSTEM:PUT 'PRIMARY-SYSTEM-P 'SYSTEM::SOURCE (CONS '((:FUNCTION PRIMARY-SYSTEM-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 438076) (GET 
'PRIMARY-SYSTEM-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PRIMARY-SYSTEM-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1014) 438076 '(SYSTEM) "Given a system designator SYSTEM, return T if it designates a primary system, or else NIL.
If given a string, do it syntactically and return true if the name does not contain a slash.
If given a symbol, downcase to a string then fallback to previous case (NB: for NIL return T).
If given a component, do it semantically and return T if it's a SYSTEM and its primary-system-name
is the same as its component-name."))
(PROCLAIM '(NOTINLINE COERCE-FILENAME))
(PROGN (SYSTEM:PUT 'COERCE-FILENAME 'SYSTEM::SOURCE (CONS '((:FUNCTION COERCE-FILENAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 438076) (GET 
'COERCE-FILENAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COERCE-FILENAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1015) 438076 '(NAME) "Coerce a system designator NAME into a string suitable as a filename component.
The (current) transformation is to replace characters /:\\ each by --,
the former being forbidden in a filename component.
NB: The onus is unhappily on the user to avoid clashes."))
(PROGN (SYSTEM:PUT '*SYSTEM-VIRTUAL-SLOTS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'*SYSTEM-VIRTUAL-SLOTS* 'SYSTEM::SOURCE NIL))) (DEFVAR *SYSTEM-VIRTUAL-SLOTS* '(LONG-NAME 
DESCRIPTION LONG-DESCRIPTION AUTHOR MAINTAINER MAILTO HOMEPAGE SOURCE-CONTROL LICENCE 
VERSION BUG-TRACKER) "The list of system virtual slot names."))
(PROCLAIM '(NOTINLINE SYSTEM-VIRTUAL-SLOT-VALUE))
(PROGN (SYSTEM:PUT 'SYSTEM-VIRTUAL-SLOT-VALUE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSTEM-VIRTUAL-SLOT-VALUE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
440789) (GET 'SYSTEM-VIRTUAL-SLOT-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-VIRTUAL-SLOT-VALUE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1016) 440789 '(SYSTEM SLOT-NAME) 
"Return SYSTEM's virtual SLOT-NAME value.
If SYSTEM's SLOT-NAME value is NIL and SYSTEM is a secondary system, look in
the primary one."))
(PROGN (SYSTEM:PUT 'DEFINE-SYSTEM-VIRTUAL-SLOT-READER 'SYSTEM::SOURCE (CONS '(:MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'DEFINE-SYSTEM-VIRTUAL-SLOT-READER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFINE-SYSTEM-VIRTUAL-SLOT-READER 
(SYSTEM:MAKE-MACRO 'DEFINE-SYSTEM-VIRTUAL-SLOT-READER (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1017)) 440789 '(SLOT-NAME) NIL))
(PROGN (SYSTEM:PUT 'DEFINE-SYSTEM-VIRTUAL-SLOT-READERS 'SYSTEM::SOURCE (CONS '(:MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'DEFINE-SYSTEM-VIRTUAL-SLOT-READERS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFINE-SYSTEM-VIRTUAL-SLOT-READERS 
(SYSTEM:MAKE-MACRO 'DEFINE-SYSTEM-VIRTUAL-SLOT-READERS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1018)) 440789 'NIL NIL))
(FMAKUNBOUND 'SYSTEM-LONG-NAME)
(PROCLAIM '(NOTINLINE SYSTEM-LONG-NAME))
(PROGN (SYSTEM:PUT 'SYSTEM-LONG-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-LONG-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-LONG-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-LONG-NAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1019) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-DESCRIPTION)
(PROCLAIM '(NOTINLINE SYSTEM-DESCRIPTION))
(PROGN (SYSTEM:PUT 'SYSTEM-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-DESCRIPTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-DESCRIPTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-DESCRIPTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1020) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-LONG-DESCRIPTION)
(PROCLAIM '(NOTINLINE SYSTEM-LONG-DESCRIPTION))
(PROGN (SYSTEM:PUT 'SYSTEM-LONG-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-LONG-DESCRIPTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-LONG-DESCRIPTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-LONG-DESCRIPTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1021) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-AUTHOR)
(PROCLAIM '(NOTINLINE SYSTEM-AUTHOR))
(PROGN (SYSTEM:PUT 'SYSTEM-AUTHOR 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-AUTHOR) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-AUTHOR 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-AUTHOR (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1022) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-MAINTAINER)
(PROCLAIM '(NOTINLINE SYSTEM-MAINTAINER))
(PROGN (SYSTEM:PUT 'SYSTEM-MAINTAINER 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-MAINTAINER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-MAINTAINER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-MAINTAINER (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1023) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-MAILTO)
(PROCLAIM '(NOTINLINE SYSTEM-MAILTO))
(PROGN (SYSTEM:PUT 'SYSTEM-MAILTO 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-MAILTO) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-MAILTO 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-MAILTO (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1024) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-HOMEPAGE)
(PROCLAIM '(NOTINLINE SYSTEM-HOMEPAGE))
(PROGN (SYSTEM:PUT 'SYSTEM-HOMEPAGE 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-HOMEPAGE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-HOMEPAGE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-HOMEPAGE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1025) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-SOURCE-CONTROL)
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-CONTROL))
(PROGN (SYSTEM:PUT 'SYSTEM-SOURCE-CONTROL 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-SOURCE-CONTROL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-SOURCE-CONTROL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-SOURCE-CONTROL 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1026) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-LICENCE)
(PROCLAIM '(NOTINLINE SYSTEM-LICENCE))
(PROGN (SYSTEM:PUT 'SYSTEM-LICENCE 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-LICENCE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-LICENCE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-LICENCE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1027) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-VERSION)
(PROCLAIM '(NOTINLINE SYSTEM-VERSION))
(PROGN (SYSTEM:PUT 'SYSTEM-VERSION 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-VERSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-VERSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-VERSION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1028) 440789 '(SYSTEM) NIL))
(FMAKUNBOUND 'SYSTEM-BUG-TRACKER)
(PROCLAIM '(NOTINLINE SYSTEM-BUG-TRACKER))
(PROGN (SYSTEM:PUT 'SYSTEM-BUG-TRACKER 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-BUG-TRACKER) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-BUG-TRACKER 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-BUG-TRACKER (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1029) 440789 '(SYSTEM) NIL))
(PROCLAIM '(NOTINLINE SYSTEM-LICENSE))
(PROGN (SYSTEM:PUT 'SYSTEM-LICENSE 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-LICENSE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 440789) (GET 
'SYSTEM-LICENSE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-LICENSE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1030) 440789 '(SYSTEM) NIL))
(SYSTEM:PUT 'SYSTEM-SOURCE-FILE 'SYSTEM::SOURCE (CONS '((:METHOD SYSTEM-SOURCE-FILE 
NIL (STRING)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
442241) (GET 'SYSTEM-SOURCE-FILE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SYSTEM-SOURCE-FILE :LAMBDA-LIST '(SYSTEM-NAME) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1031) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1034))
(SYSTEM:PUT 'SYSTEM-SOURCE-FILE 'SYSTEM::SOURCE (CONS '((:METHOD SYSTEM-SOURCE-FILE 
NIL (SYMBOL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
442241) (GET 'SYSTEM-SOURCE-FILE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SYSTEM-SOURCE-FILE :LAMBDA-LIST '(SYSTEM-NAME) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1037) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1040))
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-DIRECTORY))
(PROGN (SYSTEM:PUT 'SYSTEM-SOURCE-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-SOURCE-DIRECTORY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 442241) (GET 
'SYSTEM-SOURCE-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-SOURCE-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1043) 442241 '(SYSTEM-DESIGNATOR) 
"Return a pathname object corresponding to the directory
in which the system specification (.asd file) is located."))
(PROCLAIM '(NOTINLINE SYSTEM-RELATIVE-PATHNAME))
(PROGN (SYSTEM:PUT 'SYSTEM-RELATIVE-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-RELATIVE-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 442241) (GET 
'SYSTEM-RELATIVE-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-RELATIVE-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1044) 442241 '(SYSTEM NAME &KEY TYPE) 
"Given a SYSTEM, and a (Unix-style relative path) NAME of a file (or directory) of given TYPE,
return the absolute pathname of a corresponding file under that system's source code pathname."))
(SYSTEM:PUT 'COMPONENT-PATHNAME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-PATHNAME 
NIL (SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
442241) (GET 'COMPONENT-PATHNAME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-PATHNAME :LAMBDA-LIST '(SYSTEM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :DOCUMENTATION "Given a SYSTEM, and a (Unix-style relative path) NAME of a file (or directory) of given TYPE,
return the absolute pathname of a corresponding file under that system's source code pathname." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1045))
(SYSTEM:PUT 'COMPONENT-RELATIVE-PATHNAME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-RELATIVE-PATHNAME 
NIL (SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
442241) (GET 'COMPONENT-RELATIVE-PATHNAME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-RELATIVE-PATHNAME :LAMBDA-LIST '(SYSTEM) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1048) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1051))
(SYSTEM:PUT 'COMPONENT-PARENT-PATHNAME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-PARENT-PATHNAME 
NIL (SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
442241) (GET 'COMPONENT-PARENT-PATHNAME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-PARENT-PATHNAME :LAMBDA-LIST '(SYSTEM) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1054) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1057))
(SYSTEM:PUT 'COMPONENT-BUILD-PATHNAME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-BUILD-PATHNAME 
NIL (COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
442241) (GET 'COMPONENT-BUILD-PATHNAME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-BUILD-PATHNAME :LAMBDA-LIST '(C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1060) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1063))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1066))
(SYSTEM:%IN-PACKAGE "ASDF/SYSTEM-REGISTRY")
(PROGN (SYSTEM:PUT '*REGISTERED-SYSTEMS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET '*REGISTERED-SYSTEMS* 'SYSTEM::SOURCE NIL))) (DEFVAR *REGISTERED-SYSTEMS* 
(MAKE-HASH-TABLE :TEST 'EQUAL) "This is a hash table whose keys are strings -- the names of systems --
and whose values are systems.
A system is referred to as \"registered\" if it is present in this table."))
(PROCLAIM '(NOTINLINE REGISTERED-SYSTEM))
(PROGN (SYSTEM:PUT 'REGISTERED-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTERED-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) (GET 
'REGISTERED-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTERED-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1067) 446194 '(NAME) "Return a system of given NAME that was registered already,
if such a system exists.  NAME is a system designator, to be
normalized by COERCE-NAME. The value returned is a system object,
or NIL if not found."))
(PROCLAIM '(NOTINLINE REGISTERED-SYSTEMS*))
(PROGN (SYSTEM:PUT 'REGISTERED-SYSTEMS* 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTERED-SYSTEMS*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) (GET 
'REGISTERED-SYSTEMS* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTERED-SYSTEMS* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1068) 446194 'NIL "Return a list containing every registered system (as a system object)."))
(PROCLAIM '(NOTINLINE REGISTERED-SYSTEMS))
(PROGN (SYSTEM:PUT 'REGISTERED-SYSTEMS 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTERED-SYSTEMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) (GET 
'REGISTERED-SYSTEMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTERED-SYSTEMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1069) 446194 'NIL "Return a list of the names of every registered system."))
(PROCLAIM '(NOTINLINE REGISTER-SYSTEM))
(PROGN (SYSTEM:PUT 'REGISTER-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTER-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) (GET 
'REGISTER-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1070) 446194 '(SYSTEM) "Given a SYSTEM object, register it."))
(PROCLAIM '(NOTINLINE MAP-SYSTEMS))
(PROGN (SYSTEM:PUT 'MAP-SYSTEMS 'SYSTEM::SOURCE (CONS '((:FUNCTION MAP-SYSTEMS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'MAP-SYSTEMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAP-SYSTEMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1071) 446194 '(FN) "Apply FN to each defined system.

FN should be a function of one argument. It will be
called with an object of type asdf:system."))
(PROGN (SYSTEM:PUT '*PRELOADED-SYSTEMS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET '*PRELOADED-SYSTEMS* 'SYSTEM::SOURCE NIL))) (DEFVAR *PRELOADED-SYSTEMS* 
(MAKE-HASH-TABLE :TEST 'EQUAL) "Registration table for preloaded systems."))
(PROCLAIM '(FTYPE (FUNCTION (T) T) MARK-COMPONENT-PRELOADED))
(PROCLAIM '(NOTINLINE MAKE-PRELOADED-SYSTEM))
(PROGN (SYSTEM:PUT 'MAKE-PRELOADED-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-PRELOADED-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) (GET 
'MAKE-PRELOADED-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-PRELOADED-SYSTEM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1072) 446194 '(NAME KEYS) "Make a preloaded system of given NAME with build information from KEYS"))
(PROCLAIM '(NOTINLINE SYSDEF-PRELOADED-SYSTEM-SEARCH))
(PROGN (SYSTEM:PUT 'SYSDEF-PRELOADED-SYSTEM-SEARCH 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSDEF-PRELOADED-SYSTEM-SEARCH) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'SYSDEF-PRELOADED-SYSTEM-SEARCH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYSDEF-PRELOADED-SYSTEM-SEARCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1073) 
446194 '(REQUESTED) "If REQUESTED names a system registered as preloaded, return a new system
with its registration information."))
(PROCLAIM '(NOTINLINE ENSURE-PRELOADED-SYSTEM-REGISTERED))
(PROGN (SYSTEM:PUT 'ENSURE-PRELOADED-SYSTEM-REGISTERED 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENSURE-PRELOADED-SYSTEM-REGISTERED) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'ENSURE-PRELOADED-SYSTEM-REGISTERED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'ENSURE-PRELOADED-SYSTEM-REGISTERED (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1074) 446194 '(NAME) "If there isn't a registered _defined_ system of given NAME,
and a there is a registered _preloaded_ system of given NAME,
then define and register said preloaded system."))
(PROCLAIM '(NOTINLINE REGISTER-PRELOADED-SYSTEM))
(PROGN (SYSTEM:PUT 'REGISTER-PRELOADED-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION 
REGISTER-PRELOADED-SYSTEM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'REGISTER-PRELOADED-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-PRELOADED-SYSTEM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1075) 446194 '(SYSTEM-NAME &REST 
KEYS &KEY (VERSION T) &ALLOW-OTHER-KEYS) "Register a system as being preloaded. If the system has not been loaded from the filesystem
yet, or if its build information is later cleared with CLEAR-SYSTEM, a dummy system will be
registered without backing filesystem information, based on KEYS (e.g. to provide a VERSION).
If VERSION is the default T, and a system was already loaded, then its version will be preserved."))
(PROGN (SYSTEM:PUT '*IMMUTABLE-SYSTEMS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET '*IMMUTABLE-SYSTEMS* 'SYSTEM::SOURCE NIL))) (DEFVAR *IMMUTABLE-SYSTEMS* 
NIL "A hash-set (equal hash-table mapping keys to T) of systems that are immutable,
i.e. already loaded in memory and not to be refreshed from the filesystem.
They will be treated specially by find-system, and passed as :force-not argument to make-plan.

For instance, to can deliver an image with many systems precompiled, that *will not* check the
filesystem for them every time a user loads an extension, what more risk a problematic upgrade
 or catastrophic downgrade, before you dump an image, you may use:
   (map () 'asdf:register-immutable-system (asdf:already-loaded-systems))

Note that direct access to this variable from outside ASDF is not supported.
Please call REGISTER-IMMUTABLE-SYSTEM to add new immutable systems, and
contact maintainers if you need a stable API to do more than that."))
(PROCLAIM '(NOTINLINE SYSDEF-IMMUTABLE-SYSTEM-SEARCH))
(PROGN (SYSTEM:PUT 'SYSDEF-IMMUTABLE-SYSTEM-SEARCH 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSDEF-IMMUTABLE-SYSTEM-SEARCH) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'SYSDEF-IMMUTABLE-SYSTEM-SEARCH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYSDEF-IMMUTABLE-SYSTEM-SEARCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1076) 
446194 '(REQUESTED) NIL))
(PROCLAIM '(NOTINLINE REGISTER-IMMUTABLE-SYSTEM))
(PROGN (SYSTEM:PUT 'REGISTER-IMMUTABLE-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION 
REGISTER-IMMUTABLE-SYSTEM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'REGISTER-IMMUTABLE-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-IMMUTABLE-SYSTEM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1077) 446194 '(SYSTEM-NAME &REST 
KEYS) "Register SYSTEM-NAME as preloaded and immutable.
It will automatically be considered as passed to FORCE-NOT in a plan."))
(PROCLAIM '(NOTINLINE CLEAR-SYSTEM))
(PROGN (SYSTEM:PUT 'CLEAR-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION CLEAR-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) (GET 
'CLEAR-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CLEAR-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1078) 446194 '(SYSTEM) "Clear the entry for a SYSTEM in the database of systems previously defined.
However if the system was registered as PRELOADED (which it is if it is IMMUTABLE),
then a new system with the same name will be defined and registered in its place
from which build details will have been cleared.
Note that this does NOT in any way cause any of the code of the system to be unloaded.
Returns T if system was or is now undefined, NIL if a new preloaded system was redefined."))
(PROCLAIM '(NOTINLINE CLEAR-REGISTERED-SYSTEMS))
(PROGN (SYSTEM:PUT 'CLEAR-REGISTERED-SYSTEMS 'SYSTEM::SOURCE (CONS '((:FUNCTION CLEAR-REGISTERED-SYSTEMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) (GET 
'CLEAR-REGISTERED-SYSTEMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CLEAR-REGISTERED-SYSTEMS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1079) 446194 'NIL "Clear all currently registered defined systems.
Preloaded systems (including immutable ones) will be reset, other systems will be de-registered."))
(PROGN (SYSTEM:PUT '*SYSTEM-DEFINITION-SEARCH-FUNCTIONS* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 446194) 
(GET '*SYSTEM-DEFINITION-SEARCH-FUNCTIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *SYSTEM-DEFINITION-SEARCH-FUNCTIONS* 
'NIL "A list that controls the ways that ASDF looks for system definitions.
It contains symbols to be funcalled in order, with a requested system name as argument,
until one returns a non-NIL result (if any), which must then be a fully initialized system object
with that name."))
(PROCLAIM '(NOTINLINE CLEANUP-SYSTEM-DEFINITION-SEARCH-FUNCTIONS))
(PROGN (SYSTEM:PUT 'CLEANUP-SYSTEM-DEFINITION-SEARCH-FUNCTIONS 'SYSTEM::SOURCE (CONS 
'((:FUNCTION CLEANUP-SYSTEM-DEFINITION-SEARCH-FUNCTIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'CLEANUP-SYSTEM-DEFINITION-SEARCH-FUNCTIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'CLEANUP-SYSTEM-DEFINITION-SEARCH-FUNCTIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1080) 446194 'NIL NIL))
(CLEANUP-SYSTEM-DEFINITION-SEARCH-FUNCTIONS)
(PROCLAIM '(NOTINLINE SEARCH-FOR-SYSTEM-DEFINITION))
(PROGN (SYSTEM:PUT 'SEARCH-FOR-SYSTEM-DEFINITION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SEARCH-FOR-SYSTEM-DEFINITION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'SEARCH-FOR-SYSTEM-DEFINITION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SEARCH-FOR-SYSTEM-DEFINITION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1083) 446194 '(SYSTEM) NIL))
(PROGN (SYSTEM:PUT '*CENTRAL-REGISTRY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET '*CENTRAL-REGISTRY* 'SYSTEM::SOURCE NIL))) (DEFVAR *CENTRAL-REGISTRY* 
NIL "A list of 'system directory designators' ASDF uses to find systems.

A 'system directory designator' is a pathname or an expression
which evaluates to a pathname. For example:

    (setf asdf:*central-registry*
          (list '*default-pathname-defaults*
                #p\"/home/me/cl/systems/\"
                #p\"/usr/share/common-lisp/systems/\"))

This variable is for backward compatibility.
Going forward, we recommend new users should be using the source-registry."))
(PROCLAIM '(NOTINLINE PROBE-ASD))
(PROGN (SYSTEM:PUT 'PROBE-ASD 'SYSTEM::SOURCE (CONS '((:FUNCTION PROBE-ASD) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'PROBE-ASD 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROBE-ASD (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1085) 446194 '(NAME DEFAULTS &KEY TRUENAME) NIL))
(PROCLAIM '(NOTINLINE SYSDEF-CENTRAL-REGISTRY-SEARCH))
(PROGN (SYSTEM:PUT 'SYSDEF-CENTRAL-REGISTRY-SEARCH 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSDEF-CENTRAL-REGISTRY-SEARCH) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
446194) (GET 'SYSDEF-CENTRAL-REGISTRY-SEARCH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYSDEF-CENTRAL-REGISTRY-SEARCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1087) 
446194 '(SYSTEM) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1095))
(SYSTEM:%IN-PACKAGE "ASDF/ACTION")
(PROGN (SYSTEM:PUT 'ACTION 'SYSTEM::SOURCE (CONS '(ACTION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
461584) (GET 'ACTION 'SYSTEM::SOURCE NIL))) (DEFTYPE ACTION NIL "A pair of operation and component uniquely identifies a node in the dependency graph
of steps to be performed while building a system." '(CONS OPERATION COMPONENT)))
(PROGN (SYSTEM:PUT 'OPERATION-DESIGNATOR 'SYSTEM::SOURCE (CONS '(OPERATION-DESIGNATOR 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 461584) (GET 
'OPERATION-DESIGNATOR 'SYSTEM::SOURCE NIL))) (DEFTYPE OPERATION-DESIGNATOR NIL "An operation designates itself. NIL designates a context-dependent current operation,
and a class-name or class designates the canonical instance of the designated class." 
'(OR OPERATION NULL SYMBOL CLASS)))
(PROCLAIM '(NOTINLINE MAKE-ACTION))
(PROGN (SYSTEM:PUT 'MAKE-ACTION 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-ACTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
462138) (GET 'MAKE-ACTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-ACTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1096) 462138 '(OPERATION COMPONENT) NIL))
(PROCLAIM '(NOTINLINE ACTION-OPERATION))
(PROGN (SYSTEM:PUT 'ACTION-OPERATION 'SYSTEM::SOURCE (CONS '((:FUNCTION ACTION-OPERATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 462138) (GET 
'ACTION-OPERATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACTION-OPERATION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1097) 462138 '(ACTION) NIL))
(PROCLAIM '(NOTINLINE ACTION-COMPONENT))
(PROGN (SYSTEM:PUT 'ACTION-COMPONENT 'SYSTEM::SOURCE (CONS '((:FUNCTION ACTION-COMPONENT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 462138) (GET 
'ACTION-COMPONENT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACTION-COMPONENT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1098) 462138 '(ACTION) NIL))
(PROCLAIM '(NOTINLINE ACTION-PATH))
(PROGN (SYSTEM:PUT 'ACTION-PATH 'SYSTEM::SOURCE (CONS '((:FUNCTION ACTION-PATH) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
462449) (GET 'ACTION-PATH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACTION-PATH (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1099) 462449 '(ACTION) "A readable data structure that identifies the action."))
(PROCLAIM '(NOTINLINE FIND-ACTION))
(PROGN (SYSTEM:PUT 'FIND-ACTION 'SYSTEM::SOURCE (CONS '((:FUNCTION FIND-ACTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
462449) (GET 'FIND-ACTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIND-ACTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1100) 462449 '(PATH) "Reconstitute an action from its action-path"))
(PROGN (SYSTEM:PUT 'DEFINE-CONVENIENCE-ACTION-METHODS 'SYSTEM::SOURCE (CONS '(:MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 462990) (GET 
'DEFINE-CONVENIENCE-ACTION-METHODS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFINE-CONVENIENCE-ACTION-METHODS 
(SYSTEM:MAKE-MACRO 'DEFINE-CONVENIENCE-ACTION-METHODS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1101)) 462990 '(FUNCTION FORMALS &KEY IF-NO-OPERATION IF-NO-COMPONENT) 
NIL))
(PROCLAIM '(NOTINLINE ACTION-DESCRIPTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1103))
(PROGN (SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
ACTION-DESCRIPTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
465966) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
465966) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1104) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1107))
(PROCLAIM '(NOTINLINE FORMAT-ACTION))
(PROGN (SYSTEM:PUT 'FORMAT-ACTION 'SYSTEM::SOURCE (CONS '((:FUNCTION FORMAT-ACTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 465966) (GET 
'FORMAT-ACTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FORMAT-ACTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1110) 465966 '(STREAM ACTION &OPTIONAL COLON-P AT-SIGN-P) "FORMAT helper to display an action's action-description.
Use it in FORMAT control strings as ~/asdf-action:format-action/"))
(PROCLAIM '(NOTINLINE ACTION-VALID-P))
(PROGN (SYSTEM:PUT 'ACTION-VALID-P 'SYSTEM::SOURCE (CONS '((:FUNCTION ACTION-VALID-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 466748) (GET 
'ACTION-VALID-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACTION-VALID-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1111) 466748 '(OPERATION COMPONENT) "Is this action valid to include amongst dependencies?"))
(SYSTEM:PUT 'CIRCULAR-DEPENDENCY 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
466748) (GET 'CIRCULAR-DEPENDENCY 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'CIRCULAR-DEPENDENCY 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
466748) (GET 'CIRCULAR-DEPENDENCY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1112))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (CIRCULAR-DEPENDENCY 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 466748) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CIRCULAR-DEPENDENCY 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1113))
(PROCLAIM '(NOTINLINE CALL-WHILE-VISITING-ACTION))
(PROGN (SYSTEM:PUT 'CALL-WHILE-VISITING-ACTION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CALL-WHILE-VISITING-ACTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
466748) (GET 'CALL-WHILE-VISITING-ACTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CALL-WHILE-VISITING-ACTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1117) 466748 '(OPERATION COMPONENT 
FUN) "Detect circular dependencies"))
(PROGN (SYSTEM:PUT 'WHILE-VISITING-ACTION 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
466748) (GET 'WHILE-VISITING-ACTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WHILE-VISITING-ACTION 
(SYSTEM:MAKE-MACRO 'WHILE-VISITING-ACTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1119)) 466748 '((O C) &BODY BODY) NIL))
(PROCLAIM '(NOTINLINE COMPONENT-DEPENDS-ON))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1120))
(PROGN (SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-DEPENDS-ON) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
468436) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
468436) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1121) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1124))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
468436) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1127) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1130))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (OPERATION T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
468436) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1133) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1136))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
(:AROUND) (OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
468436) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS '(:AROUND) 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1139))
(SYSTEM:PUT 'DOWNWARD-OPERATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'DOWNWARD-OPERATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1143))
(PROCLAIM '(NOTINLINE DOWNWARD-OPERATION-DEPENDS-ON))
(PROGN (SYSTEM:PUT 'DOWNWARD-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DOWNWARD-OPERATION-DEPENDS-ON) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'DOWNWARD-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DOWNWARD-OPERATION-DEPENDS-ON 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1145) 469800 '(O C) NIL))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (DOWNWARD-OPERATION PARENT-COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DOWNWARD-OPERATION 'PARENT-COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1146))
(SYSTEM:PUT 'UPWARD-OPERATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'UPWARD-OPERATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1149))
(PROCLAIM '(NOTINLINE UPWARD-OPERATION-DEPENDS-ON))
(PROGN (SYSTEM:PUT 'UPWARD-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:FUNCTION 
UPWARD-OPERATION-DEPENDS-ON) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'UPWARD-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'UPWARD-OPERATION-DEPENDS-ON 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1151) 469800 '(O C) NIL))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (UPWARD-OPERATION CHILD-COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'UPWARD-OPERATION 'CHILD-COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1152))
(SYSTEM:PUT 'SIDEWAY-OPERATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'SIDEWAY-OPERATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1155))
(PROCLAIM '(NOTINLINE SIDEWAY-OPERATION-DEPENDS-ON))
(PROGN (SYSTEM:PUT 'SIDEWAY-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SIDEWAY-OPERATION-DEPENDS-ON) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'SIDEWAY-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SIDEWAY-OPERATION-DEPENDS-ON 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1157) 469800 '(O C) NIL))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (SIDEWAY-OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SIDEWAY-OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1158))
(SYSTEM:PUT 'SELFWARD-OPERATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'SELFWARD-OPERATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1161))
(PROCLAIM '(NOTINLINE SELFWARD-OPERATION-DEPENDS-ON))
(PROGN (SYSTEM:PUT 'SELFWARD-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SELFWARD-OPERATION-DEPENDS-ON) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'SELFWARD-OPERATION-DEPENDS-ON 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SELFWARD-OPERATION-DEPENDS-ON 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1162) 469800 '(O C) NIL))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (SELFWARD-OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SELFWARD-OPERATION 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1163))
(SYSTEM:PUT 'NON-PROPAGATING-OPERATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
469800) (GET 'NON-PROPAGATING-OPERATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1166))
(SYSTEM:PUT 'OPERATION-DEFINITION-WARNING 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'OPERATION-DEFINITION-WARNING 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'OPERATION-DEFINITION-WARNING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'OPERATION-DEFINITION-WARNING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1167))
(SYSTEM:PUT 'OPERATION-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'OPERATION-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'OPERATION-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'OPERATION-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1168))
(SYSTEM:PUT 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE (CONS '((:METHOD INITIALIZE-INSTANCE 
(:BEFORE) (OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INITIALIZE-INSTANCE :LAMBDA-LIST '(O &KEY) :QUALIFIERS '(:BEFORE) 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1169))
(SYSTEM:PUT 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE (CONS '((:METHOD INITIALIZE-INSTANCE 
(:BEFORE) (NON-PROPAGATING-OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INITIALIZE-INSTANCE :LAMBDA-LIST '(O &KEY) :QUALIFIERS '(:BEFORE) 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NON-PROPAGATING-OPERATION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1173))
(PROCLAIM '(NOTINLINE BACKWARD-COMPATIBLE-DEPENDS-ON))
(PROGN (SYSTEM:PUT 'BACKWARD-COMPATIBLE-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:FUNCTION 
BACKWARD-COMPATIBLE-DEPENDS-ON) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'BACKWARD-COMPATIBLE-DEPENDS-ON 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'BACKWARD-COMPATIBLE-DEPENDS-ON (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1177) 
474725 '(O C) "DEPRECATED: all subclasses of OPERATION used in ASDF should inherit from one of
 DOWNWARD-OPERATION UPWARD-OPERATION SIDEWAY-OPERATION SELFWARD-OPERATION NON-PROPAGATING-OPERATION.
 The function BACKWARD-COMPATIBLE-DEPENDS-ON temporarily provides ASDF2 behaviour for those that
 don't. In the future this functionality will be removed, and the default will be no propagation."))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1178) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1181))
(SYSTEM:PUT 'DOWNWARD-OPERATION 'SYSTEM::SOURCE (CONS '((:METHOD DOWNWARD-OPERATION 
NIL (OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'DOWNWARD-OPERATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'DOWNWARD-OPERATION :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1184) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1187))
(SYSTEM:PUT 'SIDEWAY-OPERATION 'SYSTEM::SOURCE (CONS '((:METHOD SIDEWAY-OPERATION 
NIL (OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
474725) (GET 'SIDEWAY-OPERATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'SIDEWAY-OPERATION :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1190) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1193))
(PROCLAIM '(NOTINLINE OUTPUT-FILES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1196))
(PROGN (SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION OUTPUT-FILES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) (GET 
'OUTPUT-FILES 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE INPUT-FILES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1197))
(PROGN (SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION INPUT-FILES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) (GET 
'INPUT-FILES 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE OPERATION-DONE-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1198))
(PROGN (SYSTEM:PUT 'OPERATION-DONE-P 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION OPERATION-DONE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) (GET 
'OPERATION-DONE-P 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (STRING 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1199) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1202))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (SYMBOL 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1205) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1208))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (OPERATION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1211) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1214))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (STRING 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1217) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1220))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (SYMBOL 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1223) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1226))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (OPERATION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1229) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1232))
(SYSTEM:PUT 'OPERATION-DONE-P 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-DONE-P NIL 
(STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'OPERATION-DONE-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1235) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1238))
(SYSTEM:PUT 'OPERATION-DONE-P 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-DONE-P NIL 
(SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'OPERATION-DONE-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1241) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1244))
(SYSTEM:PUT 'OPERATION-DONE-P 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-DONE-P NIL 
(OPERATION T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'OPERATION-DONE-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1247) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1250))
(SYSTEM:PUT 'OPERATION-DONE-P 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-DONE-P NIL 
(OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'OPERATION-DONE-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1253) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1256))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES (:AROUND) 
(T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'(:AROUND) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1259))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1263) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1266))
(PROCLAIM '(NOTINLINE OUTPUT-FILE))
(PROGN (SYSTEM:PUT 'OUTPUT-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION OUTPUT-FILE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'OUTPUT-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OUTPUT-FILE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1269) 477712 '(OPERATION COMPONENT) "The unique output file of performing OPERATION on COMPONENT"))
(PROCLAIM '(NOTINLINE ADDITIONAL-INPUT-FILES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1270))
(PROGN (SYSTEM:PUT 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
ADDITIONAL-INPUT-FILES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD ADDITIONAL-INPUT-FILES 
NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ADDITIONAL-INPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1271) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1274))
(SYSTEM:PUT 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD ADDITIONAL-INPUT-FILES 
NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ADDITIONAL-INPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1277) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1280))
(SYSTEM:PUT 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD ADDITIONAL-INPUT-FILES 
NIL (OPERATION T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ADDITIONAL-INPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1283) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1286))
(SYSTEM:PUT 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD ADDITIONAL-INPUT-FILES 
NIL (OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'ADDITIONAL-INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ADDITIONAL-INPUT-FILES :LAMBDA-LIST '(OP COMP) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1289) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1292))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES (:AROUND) (T 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 477712) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'(:AROUND) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1295))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1299) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1302))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (SELFWARD-OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
477712) (GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SELFWARD-OPERATION 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1305))
(PROCLAIM '(NOTINLINE COMPONENT-OPERATION-TIME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1308))
(PROGN (SYSTEM:PUT 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-OPERATION-TIME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE (SETF COMPONENT-OPERATION-TIME)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1309))
(PROGN (SYSTEM:PUT 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
(SETF COMPONENT-OPERATION-TIME)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-OPERATION-TIME 
NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-OPERATION-TIME :LAMBDA-LIST '(OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1310) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1313))
(SYSTEM:PUT 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-OPERATION-TIME 
NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-OPERATION-TIME :LAMBDA-LIST '(OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1316) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1319))
(SYSTEM:PUT 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-OPERATION-TIME 
NIL (OPERATION T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-OPERATION-TIME :LAMBDA-LIST '(OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1322) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1325))
(PROCLAIM '(NOTINLINE MARK-OPERATION-DONE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1328))
(PROGN (SYSTEM:PUT 'MARK-OPERATION-DONE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
MARK-OPERATION-DONE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'MARK-OPERATION-DONE 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE COMPUTE-ACTION-STAMP))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1329))
(PROGN (SYSTEM:PUT 'COMPUTE-ACTION-STAMP 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPUTE-ACTION-STAMP) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPUTE-ACTION-STAMP 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-OPERATION-TIME 
NIL (OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-OPERATION-TIME :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1330) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1333))
(SYSTEM:PUT 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE (CONS '((:METHOD (SETF COMPONENT-OPERATION-TIME) 
NIL (T OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'COMPONENT-OPERATION-TIME 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD '(SETF COMPONENT-OPERATION-TIME) :LAMBDA-LIST '(STAMP O C) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1336))
(SYSTEM:PUT 'MARK-OPERATION-DONE 'SYSTEM::SOURCE (CONS '((:METHOD MARK-OPERATION-DONE 
NIL (OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
482126) (GET 'MARK-OPERATION-DONE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MARK-OPERATION-DONE :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1339) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1342))
(PROCLAIM '(NOTINLINE PERFORM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1345))
(PROGN (SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION PERFORM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1346) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1349))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1352) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1355))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (OPERATION T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 484500) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1358) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1361))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM (:AROUND) (OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS '(:AROUND) :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1364))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM (:BEFORE) (OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS '(:BEFORE) :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1368) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1371))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM (:AFTER) (OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS '(:AFTER) :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1374) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1377))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (OPERATION PARENT-COMPONENT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 484500) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'PARENT-COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1380) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1383))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (OPERATION SOURCE-FILE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 484500) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1386) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1389))
(PROCLAIM '(NOTINLINE PERFORM-WITH-RESTARTS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1392))
(PROGN (SYSTEM:PUT 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
PERFORM-WITH-RESTARTS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM-WITH-RESTARTS 
NIL (T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM-WITH-RESTARTS :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1393) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1396))
(SYSTEM:PUT 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM-WITH-RESTARTS 
(:AROUND) (T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
484500) (GET 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM-WITH-RESTARTS :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'(:AROUND) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1399))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1408))
(SYSTEM:%IN-PACKAGE "ASDF/LISP-ACTION")
(SYSTEM:PUT 'CL-SOURCE-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
487392) (GET 'CL-SOURCE-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1409))
(SYSTEM:PUT 'CL-SOURCE-FILE.CL 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
487392) (GET 'CL-SOURCE-FILE.CL 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1411))
(SYSTEM:PUT 'CL-SOURCE-FILE.LSP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
487392) (GET 'CL-SOURCE-FILE.LSP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1413))
(SYSTEM:PUT 'BASIC-LOAD-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
487933) (GET 'BASIC-LOAD-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1415))
(SYSTEM:PUT 'BASIC-COMPILE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
487933) (GET 'BASIC-COMPILE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1416))
(SYSTEM:PUT 'PREPARE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
488256) (GET 'PREPARE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1417))
(SYSTEM:PUT 'LOAD-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
488256) (GET 'LOAD-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1419))
(SYSTEM:PUT 'COMPILE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
488256) (GET 'COMPILE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1421))
(SYSTEM:PUT 'PREPARE-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
488256) (GET 'PREPARE-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1423))
(SYSTEM:PUT 'LOAD-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
488256) (GET 'LOAD-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1425))
(SYSTEM:PUT 'TEST-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
488256) (GET 'TEST-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1427))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (PREPARE-OP COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
489875) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PREPARE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1429) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1432))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (PREPARE-OP COMPONENT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 489875) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'PREPARE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1435) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1438))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (PREPARE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 489875) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PREPARE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1441) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1444))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (COMPILE-OP COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
490271) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1447) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1450))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (COMPILE-OP PARENT-COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
490271) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'PARENT-COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1453) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1456))
(PROCLAIM '(NOTINLINE CALL-WITH-AROUND-COMPILE-HOOK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1459))
(PROGN (SYSTEM:PUT 'CALL-WITH-AROUND-COMPILE-HOOK 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
CALL-WITH-AROUND-COMPILE-HOOK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
490271) (GET 'CALL-WITH-AROUND-COMPILE-HOOK 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'CALL-WITH-AROUND-COMPILE-HOOK 'SYSTEM::SOURCE (CONS '((:METHOD CALL-WITH-AROUND-COMPILE-HOOK 
NIL (COMPONENT T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
490271) (GET 'CALL-WITH-AROUND-COMPILE-HOOK 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'CALL-WITH-AROUND-COMPILE-HOOK :LAMBDA-LIST '(C FUNCTION) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1460) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1463))
(PROCLAIM '(NOTINLINE PERFORM-LISP-COMPILATION))
(PROGN (SYSTEM:PUT 'PERFORM-LISP-COMPILATION 'SYSTEM::SOURCE (CONS '((:FUNCTION PERFORM-LISP-COMPILATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 490271) (GET 
'PERFORM-LISP-COMPILATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PERFORM-LISP-COMPILATION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1466) 490271 '(O C) "Perform the compilation of the Lisp file associated to the specified action (O . C)."))
(PROCLAIM '(NOTINLINE REPORT-FILE-P))
(PROGN (SYSTEM:PUT 'REPORT-FILE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION REPORT-FILE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 490271) (GET 
'REPORT-FILE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REPORT-FILE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1468) 490271 '(F) "Is F a build report file containing, e.g., warnings to check?"))
(PROCLAIM '(NOTINLINE PERFORM-LISP-WARNINGS-CHECK))
(PROGN (SYSTEM:PUT 'PERFORM-LISP-WARNINGS-CHECK 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PERFORM-LISP-WARNINGS-CHECK) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
490271) (GET 'PERFORM-LISP-WARNINGS-CHECK 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PERFORM-LISP-WARNINGS-CHECK 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1469) 490271 '(O C) "Check the warnings associated with the dependencies of an action."))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (COMPILE-OP CL-SOURCE-FILE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 490271) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'COMPILE-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1471) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1474))
(PROCLAIM '(NOTINLINE LISP-COMPILATION-OUTPUT-FILES))
(PROGN (SYSTEM:PUT 'LISP-COMPILATION-OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
LISP-COMPILATION-OUTPUT-FILES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
490271) (GET 'LISP-COMPILATION-OUTPUT-FILES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LISP-COMPILATION-OUTPUT-FILES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1477) 490271 '(O C) "Compute the output-files for compiling the Lisp file for the specified action (O . C),
an OPERATION and a COMPONENT."))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (COMPILE-OP 
CL-SOURCE-FILE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
490271) (GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1478) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1481))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (COMPILE-OP STATIC-FILE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 490271) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'COMPILE-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1484) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1487))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (COMPILE-OP SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 490271) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'COMPILE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1490) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1493))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (COMPILE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 490271) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1496) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1499))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (COMPILE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 490271) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1502) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1505))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (LOAD-OP CL-SOURCE-FILE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
496248) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1508) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1511))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (LOAD-OP PARENT-COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
496248) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'PARENT-COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1514) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1517))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (LOAD-OP COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
496248) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1520) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1523))
(SYSTEM:PUT 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM-WITH-RESTARTS 
NIL (LOAD-OP CL-SOURCE-FILE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
496248) (GET 'PERFORM-WITH-RESTARTS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM-WITH-RESTARTS :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1526))
(PROCLAIM '(NOTINLINE PERFORM-LISP-LOAD-FASL))
(PROGN (SYSTEM:PUT 'PERFORM-LISP-LOAD-FASL 'SYSTEM::SOURCE (CONS '((:FUNCTION PERFORM-LISP-LOAD-FASL) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 496248) (GET 
'PERFORM-LISP-LOAD-FASL 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PERFORM-LISP-LOAD-FASL 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1533) 496248 '(O C) "Perform the loading of a FASL associated to specified action (O . C),
an OPERATION and a COMPONENT."))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-OP CL-SOURCE-FILE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 496248) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1534) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1537))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-OP STATIC-FILE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 496248) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1540) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1543))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (PREPARE-SOURCE-OP COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
497397) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PREPARE-SOURCE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1546) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1549))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (PREPARE-SOURCE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 497397) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PREPARE-SOURCE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1552) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1555))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (PREPARE-SOURCE-OP 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
497397) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'PREPARE-SOURCE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1558) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1561))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (LOAD-SOURCE-OP COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
497819) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1564) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1567))
(SYSTEM:PUT 'ACTION-DESCRIPTION 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-DESCRIPTION 
NIL (LOAD-SOURCE-OP PARENT-COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
497819) (GET 'ACTION-DESCRIPTION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-DESCRIPTION :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'PARENT-COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1570) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1573))
(PROCLAIM '(NOTINLINE PERFORM-LISP-LOAD-SOURCE))
(PROGN (SYSTEM:PUT 'PERFORM-LISP-LOAD-SOURCE 'SYSTEM::SOURCE (CONS '((:FUNCTION PERFORM-LISP-LOAD-SOURCE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 497819) (GET 
'PERFORM-LISP-LOAD-SOURCE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PERFORM-LISP-LOAD-SOURCE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1576) 497819 '(O C) "Perform the loading of a Lisp file as associated to specified action (O . C)"))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-SOURCE-OP 
CL-SOURCE-FILE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
497819) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-SOURCE-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1578) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1581))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-SOURCE-OP 
STATIC-FILE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
497819) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-SOURCE-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1584) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1587))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (TEST-OP COMPONENT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 498593) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'TEST-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1590) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1593))
(SYSTEM:PUT 'OPERATION-DONE-P 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-DONE-P NIL 
(TEST-OP SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
498593) (GET 'OPERATION-DONE-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'TEST-OP 'SYSTEM)) :DOCUMENTATION "Testing a system is _never_ done." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1596) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1599))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1602))
(SYSTEM:%IN-PACKAGE "ASDF/FIND-COMPONENT")
(SYSTEM:PUT 'MISSING-COMPONENT 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-COMPONENT 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'MISSING-COMPONENT 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-COMPONENT 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1603))
(SYSTEM:PUT 'MISSING-COMPONENT-OF-VERSION 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-COMPONENT-OF-VERSION 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'MISSING-COMPONENT-OF-VERSION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-COMPONENT-OF-VERSION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1606))
(SYSTEM:PUT 'MISSING-DEPENDENCY 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-DEPENDENCY 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'MISSING-DEPENDENCY 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-DEPENDENCY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1608))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (MISSING-DEPENDENCY 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 499532) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'MISSING-DEPENDENCY 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1609))
(SYSTEM:PUT 'MISSING-DEPENDENCY-OF-VERSION 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-DEPENDENCY-OF-VERSION 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'MISSING-DEPENDENCY-OF-VERSION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
499532) (GET 'MISSING-DEPENDENCY-OF-VERSION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1612))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (MISSING-COMPONENT 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 499532) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'MISSING-COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1613) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1616))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (MISSING-COMPONENT-OF-VERSION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 499532) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'MISSING-COMPONENT-OF-VERSION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1619) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1622))
(PROCLAIM '(NOTINLINE RESOLVE-DEPENDENCY-COMBINATION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1625))
(PROGN (SYSTEM:PUT 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
RESOLVE-DEPENDENCY-COMBINATION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
500956) (GET 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:METHOD FIND-COMPONENT NIL (STRING 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) 
(GET 'FIND-COMPONENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE PATH &KEY REGISTERED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1626))
(SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:METHOD FIND-COMPONENT NIL (SYMBOL 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) 
(GET 'FIND-COMPONENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE PATH &KEY REGISTERED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1630))
(SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:METHOD FIND-COMPONENT NIL (CONS 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) 
(GET 'FIND-COMPONENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE PATH &KEY REGISTERED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1634))
(SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:METHOD FIND-COMPONENT NIL (PARENT-COMPONENT 
STRING)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) 
(GET 'FIND-COMPONENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(PARENT NAME &KEY REGISTERED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PARENT-COMPONENT 'STRING)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1638))
(SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:METHOD FIND-COMPONENT NIL (T 
SYMBOL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) 
(GET 'FIND-COMPONENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE NAME &KEY REGISTERED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1642))
(SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:METHOD FIND-COMPONENT NIL (COMPONENT 
CONS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) 
(GET 'FIND-COMPONENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(C NAME &KEY REGISTERED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'CONS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1646))
(SYSTEM:PUT 'FIND-COMPONENT 'SYSTEM::SOURCE (CONS '((:METHOD FIND-COMPONENT NIL (T 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
500956) (GET 'FIND-COMPONENT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE ACTUAL &KEY REGISTERED) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1650))
(PROCLAIM '(NOTINLINE RESOLVE-DEPENDENCY-NAME))
(PROGN (SYSTEM:PUT 'RESOLVE-DEPENDENCY-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION RESOLVE-DEPENDENCY-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) (GET 
'RESOLVE-DEPENDENCY-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESOLVE-DEPENDENCY-NAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1654) 500956 '(COMPONENT NAME &OPTIONAL 
VERSION) NIL))
(PROCLAIM '(NOTINLINE RESOLVE-DEPENDENCY-SPEC))
(PROGN (SYSTEM:PUT 'RESOLVE-DEPENDENCY-SPEC 'SYSTEM::SOURCE (CONS '((:FUNCTION RESOLVE-DEPENDENCY-SPEC) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 500956) (GET 
'RESOLVE-DEPENDENCY-SPEC 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESOLVE-DEPENDENCY-SPEC 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1659) 500956 '(COMPONENT DEP-SPEC) 
NIL))
(SYSTEM:PUT 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE (CONS '((:METHOD RESOLVE-DEPENDENCY-COMBINATION 
NIL (T T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
500956) (GET 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'RESOLVE-DEPENDENCY-COMBINATION :LAMBDA-LIST '(COMPONENT COMBINATOR 
ARGUMENTS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1660))
(SYSTEM:PUT 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE (CONS '((:METHOD RESOLVE-DEPENDENCY-COMBINATION 
NIL (T (EQL :FEATURE) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
500956) (GET 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'RESOLVE-DEPENDENCY-COMBINATION :LAMBDA-LIST '(COMPONENT COMBINATOR 
ARGUMENTS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
(LIST 'EQL :FEATURE) 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1663))
(SYSTEM:PUT 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE (CONS '((:METHOD RESOLVE-DEPENDENCY-COMBINATION 
NIL (T (EQL :VERSION) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
500956) (GET 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'RESOLVE-DEPENDENCY-COMBINATION :LAMBDA-LIST '(COMPONENT COMBINATOR 
ARGUMENTS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
(LIST 'EQL :VERSION) 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1666))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1669))
(SYSTEM:%IN-PACKAGE "ASDF/FORCING")
(SYSTEM:PUT 'FORCING 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'FORCING 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1670))
(PROCLAIM '(NOTINLINE ACTION-FORCED-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1673))
(PROGN (SYSTEM:PUT 'ACTION-FORCED-P 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION ACTION-FORCED-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 506405) (GET 
'ACTION-FORCED-P 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE ACTION-FORCED-NOT-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1674))
(PROGN (SYSTEM:PUT 'ACTION-FORCED-NOT-P 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
ACTION-FORCED-NOT-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'ACTION-FORCED-NOT-P 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE NORMALIZE-FORCED-SYSTEMS))
(PROGN (SYSTEM:PUT 'NORMALIZE-FORCED-SYSTEMS 'SYSTEM::SOURCE (CONS '((:FUNCTION NORMALIZE-FORCED-SYSTEMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 506405) (GET 
'NORMALIZE-FORCED-SYSTEMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NORMALIZE-FORCED-SYSTEMS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1675) 506405 '(FORCE SYSTEM) "Given a SYSTEM on which operate is called and the specified FORCE argument,
extract a hash-set of systems that are forced, or a predicate on system names,
or NIL if none are forced, or :ALL if all are."))
(PROCLAIM '(NOTINLINE NORMALIZE-FORCED-NOT-SYSTEMS))
(PROGN (SYSTEM:PUT 'NORMALIZE-FORCED-NOT-SYSTEMS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
NORMALIZE-FORCED-NOT-SYSTEMS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'NORMALIZE-FORCED-NOT-SYSTEMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NORMALIZE-FORCED-NOT-SYSTEMS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1676) 506405 '(FORCE-NOT SYSTEM) 
"Given a SYSTEM on which operate is called, the specified FORCE-NOT argument,
and the set of IMMUTABLE systems, extract a hash-set of systems that are effectively forced-not,
or predicate on system names, or NIL if none are forced, or :ALL if all are."))
(PROCLAIM '(NOTINLINE ACTION-OVERRIDE-P))
(PROGN (SYSTEM:PUT 'ACTION-OVERRIDE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION ACTION-OVERRIDE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 506405) (GET 
'ACTION-OVERRIDE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACTION-OVERRIDE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1679) 506405 '(FORCING OPERATION COMPONENT OVERRIDE-ACCESSOR) 
"Given a plan, an action, and a function that given the plan accesses a set of overrides,
i.e. force or force-not, see if the override applies to the current action."))
(SYSTEM:PUT 'ACTION-FORCED-P 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-FORCED-P NIL 
(T T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 506405) 
(GET 'ACTION-FORCED-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-FORCED-P :LAMBDA-LIST '(FORCING OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1680))
(SYSTEM:PUT 'ACTION-FORCED-NOT-P 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-FORCED-NOT-P 
NIL (T T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'ACTION-FORCED-NOT-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-FORCED-NOT-P :LAMBDA-LIST '(FORCING OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1683))
(SYSTEM:PUT 'ACTION-FORCED-P 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-FORCED-P NIL 
(NULL OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'ACTION-FORCED-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-FORCED-P :LAMBDA-LIST '(FORCING OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL 'OPERATION 
'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1686))
(SYSTEM:PUT 'ACTION-FORCED-NOT-P 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-FORCED-NOT-P 
NIL (NULL OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'ACTION-FORCED-NOT-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-FORCED-NOT-P :LAMBDA-LIST '(FORCING OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL 'OPERATION 
'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1689))
(PROCLAIM '(NOTINLINE OR-FUNCTION))
(PROGN (SYSTEM:PUT 'OR-FUNCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION OR-FUNCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'OR-FUNCTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OR-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1692) 506405 '(FUN1 FUN2) NIL))
(PROCLAIM '(NOTINLINE MAKE-FORCING))
(PROGN (SYSTEM:PUT 'MAKE-FORCING 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-FORCING) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 506405) (GET 
'MAKE-FORCING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-FORCING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1694) 506405 '(&KEY PERFORMABLE-P SYSTEM (FORCE NIL FORCE-P) 
(FORCE-NOT NIL FORCE-NOT-P) &ALLOW-OTHER-KEYS) NIL))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (FORCING 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 506405) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(FORCING STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'FORCING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1695) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1700))
(SYSTEM:PUT 'FORCING 'SYSTEM::SOURCE (CONS '((:METHOD FORCING NIL (NULL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'FORCING 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FORCING :LAMBDA-LIST '(X) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'NULL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1705) :FAST-FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1708))
(SYSTEM:PUT 'FORCING 'SYSTEM::SOURCE (CONS '((:METHOD FORCING NIL (CONS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
506405) (GET 'FORCING 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FORCING :LAMBDA-LIST '(X) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'CONS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1711) :FAST-FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1714))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1717))
(SYSTEM:%IN-PACKAGE "ASDF/PLAN")
(SYSTEM:PUT 'PLAN 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
514073) (GET 'PLAN 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1718))
(SYSTEM:PUT 'PLAN-TRAVERSAL 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
514073) (GET 'PLAN-TRAVERSAL 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1719))
(SYSTEM:PUT 'SEQUENTIAL-PLAN 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
514073) (GET 'SEQUENTIAL-PLAN 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1721))
(PROCLAIM '(NOTINLINE PLAN-ACTIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1723))
(PROGN (SYSTEM:PUT 'PLAN-ACTIONS 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION PLAN-ACTIONS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 514073) (GET 
'PLAN-ACTIONS 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'PLAN-ACTIONS 'SYSTEM::SOURCE (CONS '((:METHOD PLAN-ACTIONS NIL (LIST)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 514073) (GET 
'PLAN-ACTIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PLAN-ACTIONS :LAMBDA-LIST '(PLAN) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LIST)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1724) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1727))
(SYSTEM:PUT 'PLAN-ACTIONS 'SYSTEM::SOURCE (CONS '((:METHOD PLAN-ACTIONS NIL (SEQUENTIAL-PLAN)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 514073) (GET 
'PLAN-ACTIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PLAN-ACTIONS :LAMBDA-LIST '(PLAN) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SEQUENTIAL-PLAN)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1730) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1733))
(PROCLAIM '(NOTINLINE RECORD-DEPENDENCY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1736))
(PROGN (SYSTEM:PUT 'RECORD-DEPENDENCY 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
RECORD-DEPENDENCY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
514073) (GET 'RECORD-DEPENDENCY 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'RECORD-DEPENDENCY 'SYSTEM::SOURCE (CONS '((:METHOD RECORD-DEPENDENCY 
NIL (SEQUENTIAL-PLAN OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
514073) (GET 'RECORD-DEPENDENCY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'RECORD-DEPENDENCY :LAMBDA-LIST '(PLAN O C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SEQUENTIAL-PLAN 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1737))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1740))
(SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET 'ACTION-STATUS 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1741))
(PROGN (SYSTEM:PUT '+KEEP-BIT+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+KEEP-BIT+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +KEEP-BIT+ 4))
(PROGN (SYSTEM:PUT '+DONE-BIT+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+DONE-BIT+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +DONE-BIT+ 2))
(PROGN (SYSTEM:PUT '+NEED-BIT+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+NEED-BIT+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +NEED-BIT+ 1))
(PROGN (SYSTEM:PUT '+GOOD-BITS+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+GOOD-BITS+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +GOOD-BITS+ 7))
(PROGN (SYSTEM:PUT '+TODO-BITS+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+TODO-BITS+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +TODO-BITS+ 1))
(PROGN (SYSTEM:PUT '+VOID-BITS+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+VOID-BITS+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +VOID-BITS+ 0))
(PROGN (SYSTEM:PUT '+STATUS-GOOD+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+STATUS-GOOD+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +STATUS-GOOD+ (MAKE-INSTANCE 
'ACTION-STATUS :BITS +GOOD-BITS+ :STAMP T)))
(PROGN (SYSTEM:PUT '+STATUS-TODO+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+STATUS-TODO+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +STATUS-TODO+ (MAKE-INSTANCE 
'ACTION-STATUS :BITS +TODO-BITS+ :STAMP NIL)))
(PROGN (SYSTEM:PUT '+STATUS-VOID+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
515981) (GET '+STATUS-VOID+ 'SYSTEM::SOURCE NIL))) (DEFPARAMETER +STATUS-VOID+ (MAKE-INSTANCE 
'ACTION-STATUS :BITS +VOID-BITS+ :STAMP NIL)))
(PROCLAIM '(NOTINLINE MAKE-ACTION-STATUS))
(PROGN (SYSTEM:PUT 'MAKE-ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE-ACTION-STATUS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) (GET 
'MAKE-ACTION-STATUS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE-ACTION-STATUS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1744) 519046 '(&KEY BITS STAMP (LEVEL 0) INDEX) NIL))
(PROCLAIM '(NOTINLINE STATUS-KEEP-P))
(PROGN (SYSTEM:PUT 'STATUS-KEEP-P 'SYSTEM::SOURCE (CONS '((:FUNCTION STATUS-KEEP-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) (GET 
'STATUS-KEEP-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STATUS-KEEP-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1745) 519046 '(STATUS) NIL))
(PROCLAIM '(NOTINLINE STATUS-DONE-P))
(PROGN (SYSTEM:PUT 'STATUS-DONE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION STATUS-DONE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) (GET 
'STATUS-DONE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STATUS-DONE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1746) 519046 '(STATUS) NIL))
(PROCLAIM '(NOTINLINE STATUS-NEED-P))
(PROGN (SYSTEM:PUT 'STATUS-NEED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION STATUS-NEED-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) (GET 
'STATUS-NEED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STATUS-NEED-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1747) 519046 '(STATUS) NIL))
(PROCLAIM '(NOTINLINE MERGE-ACTION-STATUS))
(PROGN (SYSTEM:PUT 'MERGE-ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:FUNCTION MERGE-ACTION-STATUS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) (GET 
'MERGE-ACTION-STATUS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MERGE-ACTION-STATUS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1748) 519046 '(STATUS1 STATUS2) "Return the earliest status later than both status1 and status2"))
(PROCLAIM '(NOTINLINE MARK-STATUS-NEEDED))
(PROGN (SYSTEM:PUT 'MARK-STATUS-NEEDED 'SYSTEM::SOURCE (CONS '((:FUNCTION MARK-STATUS-NEEDED) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) (GET 
'MARK-STATUS-NEEDED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MARK-STATUS-NEEDED (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1749) 519046 '(STATUS &OPTIONAL (LEVEL (OPERATE-LEVEL))) "Return the same status but with the need bit set, for the given level"))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (ACTION-STATUS 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(STATUS STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'ACTION-STATUS 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1750) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1755))
(PROCLAIM '(NOTINLINE ACTION-STATUS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1760))
(PROGN (SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION ACTION-STATUS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 519046) (GET 
'ACTION-STATUS 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE (SETF ACTION-STATUS)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1761))
(PROGN (SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION (SETF 
ACTION-STATUS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
519046) (GET 'ACTION-STATUS 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-STATUS NIL (NULL 
OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
519046) (GET 'ACTION-STATUS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-STATUS :LAMBDA-LIST '(PLAN O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1762))
(SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:METHOD (SETF ACTION-STATUS) 
NIL (T NULL OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
519046) (GET 'ACTION-STATUS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD '(SETF ACTION-STATUS) :LAMBDA-LIST '(NEW-STATUS PLAN O C) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'NULL 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1765))
(SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:METHOD ACTION-STATUS NIL (PLAN 
OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
519046) (GET 'ACTION-STATUS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'ACTION-STATUS :LAMBDA-LIST '(P O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PLAN 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1769))
(SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:METHOD (SETF ACTION-STATUS) 
NIL (T PLAN OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
519046) (GET 'ACTION-STATUS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD '(SETF ACTION-STATUS) :LAMBDA-LIST '(NEW-STATUS P O C) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'PLAN 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1772))
(SYSTEM:PUT 'ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:METHOD (SETF ACTION-STATUS) 
(:AFTER) (T SEQUENTIAL-PLAN OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
519046) (GET 'ACTION-STATUS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD '(SETF ACTION-STATUS) :LAMBDA-LIST '(NEW-STATUS P O C) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'SEQUENTIAL-PLAN 
'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1776))
(PROCLAIM '(NOTINLINE NEEDED-IN-IMAGE-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1780))
(PROGN (SYSTEM:PUT 'NEEDED-IN-IMAGE-P 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
NEEDED-IN-IMAGE-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
523281) (GET 'NEEDED-IN-IMAGE-P 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'NEEDED-IN-IMAGE-P 'SYSTEM::SOURCE (CONS '((:METHOD NEEDED-IN-IMAGE-P 
NIL (OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
523281) (GET 'NEEDED-IN-IMAGE-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'NEEDED-IN-IMAGE-P :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1781) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1784))
(PROCLAIM '(NOTINLINE MAP-DIRECT-DEPENDENCIES))
(PROGN (SYSTEM:PUT 'MAP-DIRECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:FUNCTION MAP-DIRECT-DEPENDENCIES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 523956) (GET 
'MAP-DIRECT-DEPENDENCIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAP-DIRECT-DEPENDENCIES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1787) 523956 '(OPERATION COMPONENT 
FUN) "Call FUN on all the valid dependencies of the given action in the given plan"))
(PROCLAIM '(NOTINLINE REDUCE-DIRECT-DEPENDENCIES))
(PROGN (SYSTEM:PUT 'REDUCE-DIRECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
REDUCE-DIRECT-DEPENDENCIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
523956) (GET 'REDUCE-DIRECT-DEPENDENCIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REDUCE-DIRECT-DEPENDENCIES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1788) 523956 '(OPERATION COMPONENT 
COMBINATOR SEED) "Reduce the direct dependencies to a value computed by iteratively calling COMBINATOR
for each dependency action on the dependency's operation and component and an accumulator
initialized with SEED."))
(PROCLAIM '(NOTINLINE DIRECT-DEPENDENCIES))
(PROGN (SYSTEM:PUT 'DIRECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:FUNCTION DIRECT-DEPENDENCIES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 523956) (GET 
'DIRECT-DEPENDENCIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECT-DEPENDENCIES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1790) 523956 '(OPERATION COMPONENT) "Compute a list of the direct dependencies of the action within the plan"))
(SYSTEM:PUT 'DEPENDENCY-NOT-DONE 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
523956) (GET 'DEPENDENCY-NOT-DONE 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'DEPENDENCY-NOT-DONE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
523956) (GET 'DEPENDENCY-NOT-DONE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1791))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (DEPENDENCY-NOT-DONE 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 523956) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'DEPENDENCY-NOT-DONE 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1793))
(SYSTEM:PUT 'COMPUTE-ACTION-STAMP 'SYSTEM::SOURCE (CONS '((:METHOD COMPUTE-ACTION-STAMP 
NIL (T OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
523956) (GET 'COMPUTE-ACTION-STAMP 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPUTE-ACTION-STAMP :LAMBDA-LIST '(PLAN O C &KEY JUST-DONE) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION 
'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1798))
(PROCLAIM '(NOTINLINE COMPUTE-ACTION-STATUS))
(PROGN (SYSTEM:PUT 'COMPUTE-ACTION-STATUS 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPUTE-ACTION-STATUS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 532189) (GET 
'COMPUTE-ACTION-STATUS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPUTE-ACTION-STATUS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1803) 532189 '(PLAN OPERATION COMPONENT 
NEED-P) NIL))
(PROCLAIM '(NOTINLINE TRAVERSE-ACTION))
(PROGN (SYSTEM:PUT 'TRAVERSE-ACTION 'SYSTEM::SOURCE (CONS '((:FUNCTION TRAVERSE-ACTION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 532189) (GET 
'TRAVERSE-ACTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TRAVERSE-ACTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1804) 532189 '(PLAN OPERATION COMPONENT NEEDED-IN-IMAGE-P) NIL))
(SYSTEM:PUT 'SYSTEM-OUT-OF-DATE 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
532189) (GET 'SYSTEM-OUT-OF-DATE 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'SYSTEM-OUT-OF-DATE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
532189) (GET 'SYSTEM-OUT-OF-DATE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1808))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (SYSTEM-OUT-OF-DATE 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 532189) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM-OUT-OF-DATE 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1809))
(PROCLAIM '(NOTINLINE ACTION-UP-TO-DATE-P))
(PROGN (SYSTEM:PUT 'ACTION-UP-TO-DATE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION ACTION-UP-TO-DATE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 532189) (GET 
'ACTION-UP-TO-DATE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACTION-UP-TO-DATE-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1814) 532189 '(PLAN OPERATION COMPONENT) "Check whether an action was up-to-date at the beginning of the session.
Update the VISITED-ACTIONS table with the known status, but don't add anything to the PLAN."))
(SYSTEM:PUT 'FILTERED-SEQUENTIAL-PLAN 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'FILTERED-SEQUENTIAL-PLAN 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1818))
(SYSTEM:PUT 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE (CONS '((:METHOD INITIALIZE-INSTANCE 
(:AFTER) (FILTERED-SEQUENTIAL-PLAN)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'INITIALIZE-INSTANCE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INITIALIZE-INSTANCE :LAMBDA-LIST '(PLAN &KEY SYSTEM OTHER-SYSTEMS) 
:QUALIFIERS '(:AFTER) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'FILTERED-SEQUENTIAL-PLAN)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1822))
(SYSTEM:PUT 'PLAN-ACTIONS 'SYSTEM::SOURCE (CONS '((:METHOD PLAN-ACTIONS NIL (FILTERED-SEQUENTIAL-PLAN)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 539394) (GET 
'PLAN-ACTIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PLAN-ACTIONS :LAMBDA-LIST '(PLAN) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'FILTERED-SEQUENTIAL-PLAN)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1826))
(PROCLAIM '(NOTINLINE COLLECT-ACTION-DEPENDENCIES))
(PROGN (SYSTEM:PUT 'COLLECT-ACTION-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
COLLECT-ACTION-DEPENDENCIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'COLLECT-ACTION-DEPENDENCIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COLLECT-ACTION-DEPENDENCIES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1829) 539394 '(PLAN OPERATION COMPONENT) 
NIL))
(PROCLAIM '(NOTINLINE COLLECT-DEPENDENCIES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1832))
(PROGN (SYSTEM:PUT 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COLLECT-DEPENDENCIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:METHOD COLLECT-DEPENDENCIES 
NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COLLECT-DEPENDENCIES :LAMBDA-LIST '(OPERATION COMPONENT &REST 
#888? &KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1833))
(SYSTEM:PUT 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:METHOD COLLECT-DEPENDENCIES 
NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COLLECT-DEPENDENCIES :LAMBDA-LIST '(OPERATION COMPONENT &REST 
#888? &KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1837))
(SYSTEM:PUT 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:METHOD COLLECT-DEPENDENCIES 
NIL (OPERATION T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COLLECT-DEPENDENCIES :LAMBDA-LIST '(OPERATION COMPONENT &REST 
#888? &KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1841))
(SYSTEM:PUT 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:METHOD COLLECT-DEPENDENCIES 
NIL (OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
539394) (GET 'COLLECT-DEPENDENCIES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COLLECT-DEPENDENCIES :LAMBDA-LIST '(OPERATION COMPONENT &REST 
KEYS &KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1845))
(PROCLAIM '(NOTINLINE REQUIRED-COMPONENTS))
(PROGN (SYSTEM:PUT 'REQUIRED-COMPONENTS 'SYSTEM::SOURCE (CONS '((:FUNCTION REQUIRED-COMPONENTS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 539394) (GET 
'REQUIRED-COMPONENTS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REQUIRED-COMPONENTS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1849) 539394 '(SYSTEM &REST KEYS &KEY (GOAL-OPERATION 'LOAD-OP) 
&ALLOW-OTHER-KEYS) "Given a SYSTEM and a GOAL-OPERATION (default LOAD-OP), traverse the dependencies and
return a list of the components involved in building the desired action."))
(PROCLAIM '(NOTINLINE MAKE-PLAN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1851))
(PROGN (SYSTEM:PUT 'MAKE-PLAN 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION MAKE-PLAN) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) (GET 
'MAKE-PLAN 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'MAKE-PLAN 'SYSTEM::SOURCE (CONS '((:METHOD MAKE-PLAN NIL (T STRING T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) (GET 
'MAKE-PLAN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MAKE-PLAN :LAMBDA-LIST '(PLAN-CLASS OPERATION COMPONENT &REST 
#889? &KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1852))
(SYSTEM:PUT 'MAKE-PLAN 'SYSTEM::SOURCE (CONS '((:METHOD MAKE-PLAN NIL (T SYMBOL T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) (GET 
'MAKE-PLAN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MAKE-PLAN :LAMBDA-LIST '(PLAN-CLASS OPERATION COMPONENT &REST 
#889? &KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1856))
(SYSTEM:PUT 'MAKE-PLAN 'SYSTEM::SOURCE (CONS '((:METHOD MAKE-PLAN NIL (T OPERATION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) 
(GET 'MAKE-PLAN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MAKE-PLAN :LAMBDA-LIST '(PLAN-CLASS OPERATION COMPONENT &REST 
#889? &KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1860))
(PROCLAIM '(NOTINLINE MARK-AS-DONE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1864))
(PROGN (SYSTEM:PUT 'MARK-AS-DONE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION MARK-AS-DONE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) (GET 
'MARK-AS-DONE 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'MARK-AS-DONE 'SYSTEM::SOURCE (CONS '((:METHOD MARK-AS-DONE NIL (T STRING 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) 
(GET 'MARK-AS-DONE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MARK-AS-DONE :LAMBDA-LIST '(PLAN-CLASS OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'STRING 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1865))
(SYSTEM:PUT 'MARK-AS-DONE 'SYSTEM::SOURCE (CONS '((:METHOD MARK-AS-DONE NIL (T SYMBOL 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) 
(GET 'MARK-AS-DONE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MARK-AS-DONE :LAMBDA-LIST '(PLAN-CLASS OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'SYMBOL 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1868))
(SYSTEM:PUT 'MARK-AS-DONE 'SYSTEM::SOURCE (CONS '((:METHOD MARK-AS-DONE NIL (T OPERATION 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) 
(GET 'MARK-AS-DONE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MARK-AS-DONE :LAMBDA-LIST '(PLAN-CLASS OPERATION COMPONENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1871))
(PROCLAIM '(NOTINLINE PERFORM-PLAN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1874))
(PROGN (SYSTEM:PUT 'PERFORM-PLAN 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION PERFORM-PLAN) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) (GET 
'PERFORM-PLAN 'SYSTEM::SOURCE NIL))))
(PROGN (SYSTEM:PUT '%COMPUTE-PLAN-CLASS-VALUE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%COMPUTE-PLAN-CLASS-VALUE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
542869) (GET '%COMPUTE-PLAN-CLASS-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%COMPUTE-PLAN-CLASS-VALUE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1875) 542869 'NIL NIL))
(PROGN (SYSTEM:PUT '*PLAN-CLASS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
542869) (GET '*PLAN-CLASS* 'SYSTEM::SOURCE NIL))) (DEFVAR *PLAN-CLASS* (%COMPUTE-PLAN-CLASS-VALUE) 
"The default plan class to use when building with ASDF"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1876))
(SYSTEM:PUT 'MAKE-PLAN 'SYSTEM::SOURCE (CONS '((:METHOD MAKE-PLAN NIL (T OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
542869) (GET 'MAKE-PLAN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MAKE-PLAN :LAMBDA-LIST '(PLAN-CLASS O C &REST KEYS &KEY &ALLOW-OTHER-KEYS) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION 
'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1877))
(SYSTEM:PUT 'PERFORM-PLAN 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM-PLAN (:AROUND) 
(T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) 
(GET 'PERFORM-PLAN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM-PLAN :LAMBDA-LIST '(PLAN &KEY) :QUALIFIERS '(:AROUND) 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1882))
(PROCLAIM '(NOTINLINE ACTION-ALREADY-DONE-P))
(PROGN (SYSTEM:PUT 'ACTION-ALREADY-DONE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION ACTION-ALREADY-DONE-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) (GET 
'ACTION-ALREADY-DONE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ACTION-ALREADY-DONE-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1887) 542869 '(PLAN OPERATION COMPONENT) 
NIL))
(SYSTEM:PUT 'PERFORM-PLAN 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM-PLAN NIL (T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 542869) (GET 
'PERFORM-PLAN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM-PLAN :LAMBDA-LIST '(PLAN &KEY) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1888))
(SYSTEM:PUT 'MARK-AS-DONE 'SYSTEM::SOURCE (CONS '((:METHOD MARK-AS-DONE NIL (PLAN 
OPERATION COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
542869) (GET 'MARK-AS-DONE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MARK-AS-DONE :LAMBDA-LIST '(PLAN O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PLAN 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1892))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1895))
(SYSTEM:%IN-PACKAGE "ASDF/OPERATE")
(PROCLAIM '(NOTINLINE OPERATE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1896))
(PROGN (SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION OPERATE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'OPERATE 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATE NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'OPERATE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION COMPONENT &REST #904? &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1897))
(SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATE NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'OPERATE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION COMPONENT &REST #904? &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1901))
(SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATE NIL (OPERATION T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 545991) (GET 
'OPERATE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION COMPONENT &REST #904? &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1905))
(SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATE (:AROUND) (T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'OPERATE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION COMPONENT &REST KEYS &KEY VERBOSE 
(ON-WARNINGS *COMPILE-FILE-WARNINGS-BEHAVIOUR*) (ON-FAILURE *COMPILE-FILE-FAILURE-BEHAVIOUR*)) 
:QUALIFIERS '(:AROUND) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1909))
(SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATE (:BEFORE) (OPERATION 
COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'OPERATE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION COMPONENT &KEY VERSION) :QUALIFIERS 
'(:BEFORE) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1917))
(SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATE NIL (OPERATION COMPONENT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 545991) (GET 
'OPERATE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION COMPONENT &KEY PLAN-CLASS PLAN-OPTIONS) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1921))
(PROCLAIM '(NOTINLINE OOS))
(PROGN (SYSTEM:PUT 'OOS 'SYSTEM::SOURCE (CONS '((:FUNCTION OOS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'OOS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OOS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1925) 545991 '(OPERATION COMPONENT &REST ARGS &KEY &ALLOW-OTHER-KEYS) 
NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1926))
(SYSTEM:PUT 'RECURSIVE-OPERATE 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'RECURSIVE-OPERATE 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'RECURSIVE-OPERATE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
545991) (GET 'RECURSIVE-OPERATE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1928))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (RECURSIVE-OPERATE 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 545991) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'RECURSIVE-OPERATE 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1929))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1933))
(SYSTEM:PUT 'BUILD-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
551935) (GET 'BUILD-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1934))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (BUILD-OP COMPONENT)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
551935) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'BUILD-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1935))
(PROCLAIM '(NOTINLINE MAKE))
(PROGN (SYSTEM:PUT 'MAKE 'SYSTEM::SOURCE (CONS '((:FUNCTION MAKE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
551935) (GET 'MAKE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MAKE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1938) 551935 '(SYSTEM &REST KEYS) "The recommended way to interact with ASDF3.1 is via (ASDF:MAKE :FOO).
It will build system FOO using the operation BUILD-OP,
the meaning of which is configurable by the system, and
defaults to LOAD-OP, to load it in current image."))
(PROCLAIM '(NOTINLINE LOAD-SYSTEM))
(PROGN (SYSTEM:PUT 'LOAD-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-SYSTEM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
551935) (GET 'LOAD-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1939) 551935 '(SYSTEM &REST KEYS &KEY FORCE FORCE-NOT VERBOSE 
VERSION &ALLOW-OTHER-KEYS) "Shorthand for `(operate 'asdf:load-op system)`. See OPERATE for details."))
(PROCLAIM '(NOTINLINE LOAD-SYSTEMS*))
(PROGN (SYSTEM:PUT 'LOAD-SYSTEMS* 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-SYSTEMS*) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 551935) (GET 
'LOAD-SYSTEMS* 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-SYSTEMS* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1940) 551935 '(SYSTEMS &REST KEYS) "Loading multiple systems at once."))
(PROCLAIM '(NOTINLINE LOAD-SYSTEMS))
(PROGN (SYSTEM:PUT 'LOAD-SYSTEMS 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-SYSTEMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 551935) (GET 
'LOAD-SYSTEMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-SYSTEMS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1941) 551935 '(&REST SYSTEMS) "Loading multiple systems at once."))
(PROCLAIM '(NOTINLINE COMPILE-SYSTEM))
(PROGN (SYSTEM:PUT 'COMPILE-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPILE-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 551935) (GET 
'COMPILE-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPILE-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1942) 551935 '(SYSTEM &REST ARGS &KEY FORCE FORCE-NOT VERBOSE 
VERSION &ALLOW-OTHER-KEYS) "Shorthand for `(asdf:operate 'asdf:compile-op system)`. See OPERATE for details."))
(PROCLAIM '(NOTINLINE TEST-SYSTEM))
(PROGN (SYSTEM:PUT 'TEST-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION TEST-SYSTEM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
551935) (GET 'TEST-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TEST-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1943) 551935 '(SYSTEM &REST ARGS &KEY FORCE FORCE-NOT VERBOSE 
VERSION &ALLOW-OTHER-KEYS) "Shorthand for `(asdf:operate 'asdf:test-op system)`. See OPERATE for details."))
(PROCLAIM '(NOTINLINE COMPONENT-LOADED-P))
(PROGN (SYSTEM:PUT 'COMPONENT-LOADED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPONENT-LOADED-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 554118) (GET 
'COMPONENT-LOADED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPONENT-LOADED-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1944) 554118 '(COMPONENT) "Has the given COMPONENT been successfully loaded in the current image (yet)?
Note that this returns true even if the component is not up to date."))
(PROCLAIM '(NOTINLINE ALREADY-LOADED-SYSTEMS))
(PROGN (SYSTEM:PUT 'ALREADY-LOADED-SYSTEMS 'SYSTEM::SOURCE (CONS '((:FUNCTION ALREADY-LOADED-SYSTEMS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 554118) (GET 
'ALREADY-LOADED-SYSTEMS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ALREADY-LOADED-SYSTEMS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1945) 554118 'NIL "return a list of the names of the systems that have been successfully loaded so far"))
(PROGN (SYSTEM:PUT '*MODULES-BEING-REQUIRED* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 554838) (GET 
'*MODULES-BEING-REQUIRED* 'SYSTEM::SOURCE NIL))) (DEFVAR *MODULES-BEING-REQUIRED* 
NIL))
(SYSTEM:PUT 'REQUIRE-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
554838) (GET 'REQUIRE-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1946))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (COMPILE-OP REQUIRE-SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 554838) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'COMPILE-OP 'REQUIRE-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1948) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1951))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-OP REQUIRE-SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 554838) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-OP 'REQUIRE-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1954) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1957))
(SYSTEM:PUT 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE (CONS '((:METHOD RESOLVE-DEPENDENCY-COMBINATION 
NIL (T (EQL :REQUIRE) T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
554838) (GET 'RESOLVE-DEPENDENCY-COMBINATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'RESOLVE-DEPENDENCY-COMBINATION :LAMBDA-LIST '(COMPONENT COMBINATOR 
ARGUMENTS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
(LIST 'EQL :REQUIRE) 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1960))
(PROCLAIM '(NOTINLINE MODULE-PROVIDE-ASDF))
(PROGN (SYSTEM:PUT 'MODULE-PROVIDE-ASDF 'SYSTEM::SOURCE (CONS '((:FUNCTION MODULE-PROVIDE-ASDF) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 554838) (GET 
'MODULE-PROVIDE-ASDF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MODULE-PROVIDE-ASDF (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1963) 554838 '(NAME) NIL))
(PROCLAIM '(NOTINLINE RESTART-UPGRADED-ASDF))
(PROGN (SYSTEM:PUT 'RESTART-UPGRADED-ASDF 'SYSTEM::SOURCE (CONS '((:FUNCTION RESTART-UPGRADED-ASDF) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 559158) (GET 
'RESTART-UPGRADED-ASDF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RESTART-UPGRADED-ASDF 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1965) 559158 'NIL NIL))
(REGISTER-HOOK-FUNCTION '*POST-UPGRADE-CLEANUP-HOOK* 'RESTART-UPGRADED-ASDF)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1966))
(SYSTEM:%IN-PACKAGE "ASDF/FIND-SYSTEM")
(SYSTEM:PUT 'LOAD-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'LOAD-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'LOAD-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'LOAD-SYSTEM-DEFINITION-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1967))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (LOAD-SYSTEM-DEFINITION-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SYSTEM-DEFINITION-ERROR 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1968))
(SYSTEM:PUT 'FIND-SYSTEM 'SYSTEM::SOURCE (CONS '((:METHOD FIND-SYSTEM NIL (NULL)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) (GET 
'FIND-SYSTEM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-SYSTEM :LAMBDA-LIST '(NAME &OPTIONAL (ERROR-P T)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1972))
(SYSTEM:PUT 'FIND-SYSTEM 'SYSTEM::SOURCE (CONS '((:METHOD FIND-SYSTEM NIL (T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'FIND-SYSTEM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-SYSTEM :LAMBDA-LIST '(NAME &OPTIONAL (ERROR-P T)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1976))
(PROCLAIM '(NOTINLINE FIND-SYSTEM-IF-BEING-DEFINED))
(PROGN (SYSTEM:PUT 'FIND-SYSTEM-IF-BEING-DEFINED 'SYSTEM::SOURCE (CONS '((:FUNCTION 
FIND-SYSTEM-IF-BEING-DEFINED) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'FIND-SYSTEM-IF-BEING-DEFINED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FIND-SYSTEM-IF-BEING-DEFINED 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1980) 560691 '(NAME) NIL))
(SYSTEM:PUT 'DEFINE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'DEFINE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1981))
(SYSTEM:PUT 'RECORD-DEPENDENCY 'SYSTEM::SOURCE (CONS '((:METHOD RECORD-DEPENDENCY 
NIL (NULL T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'RECORD-DEPENDENCY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'RECORD-DEPENDENCY :LAMBDA-LIST '(PLAN OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1982))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (DEFINE-OP SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DEFINE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1985) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1988))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (OPERATION SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1991))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (OPERATION UNDEFINED-SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'UNDEFINED-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1994) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1997))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (DEFINE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DEFINE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2000) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2003))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (DEFINE-OP SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'DEFINE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2006) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2011))
(PROCLAIM '(NOTINLINE LOAD-ASD))
(PROGN (SYSTEM:PUT 'LOAD-ASD 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-ASD) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'LOAD-ASD 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-ASD (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2016) 560691 '(PATHNAME &KEY NAME) "Load system definitions from PATHNAME.
NAME if supplied is the name of a system expected to be defined in that file.

Do NOT try to load a .asd file directly with CL:LOAD. Always use ASDF:LOAD-ASD."))
(PROGN (SYSTEM:PUT '*OLD-ASDF-SYSTEMS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET '*OLD-ASDF-SYSTEMS* 'SYSTEM::SOURCE NIL))) (DEFVAR *OLD-ASDF-SYSTEMS* 
(MAKE-HASH-TABLE :TEST 'EQUAL)))
(PROCLAIM '(NOTINLINE CHECK-NOT-OLD-ASDF-SYSTEM))
(PROGN (SYSTEM:PUT 'CHECK-NOT-OLD-ASDF-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CHECK-NOT-OLD-ASDF-SYSTEM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'CHECK-NOT-OLD-ASDF-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHECK-NOT-OLD-ASDF-SYSTEM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2019) 560691 '(NAME PATHNAME) NIL))
(PROCLAIM '(NOTINLINE LOCATE-SYSTEM))
(PROGN (SYSTEM:PUT 'LOCATE-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION LOCATE-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) (GET 
'LOCATE-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOCATE-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2021) 560691 '(NAME) "Given a system NAME designator, try to locate where to load the system from.
Returns six values: FOUNDP FOUND-SYSTEM PATHNAME PREVIOUS PREVIOUS-TIME PREVIOUS-PRIMARY
FOUNDP is true when a system was found,
either a new unregistered one or a previously registered one.
FOUND-SYSTEM when not null is a SYSTEM object that may be REGISTER-SYSTEM'ed.
PATHNAME when not null is a path from which to load the system,
either associated with FOUND-SYSTEM, or with the PREVIOUS system.
PREVIOUS when not null is a previously loaded SYSTEM object of same name.
PREVIOUS-TIME when not null is the time at which the PREVIOUS system was loaded.
PREVIOUS-PRIMARY when not null is the primary system for the PREVIOUS system."))
(PROCLAIM '(NOTINLINE DEFINITION-DEPENDENCIES-UP-TO-DATE-P))
(PROGN (SYSTEM:PUT 'DEFINITION-DEPENDENCIES-UP-TO-DATE-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DEFINITION-DEPENDENCIES-UP-TO-DATE-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
560691) (GET 'DEFINITION-DEPENDENCIES-UP-TO-DATE-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'DEFINITION-DEPENDENCIES-UP-TO-DATE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2023) 560691 '(SYSTEM) NIL))
(SYSTEM:PUT 'FIND-SYSTEM 'SYSTEM::SOURCE (CONS '((:METHOD FIND-SYSTEM NIL (STRING)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) (GET 
'FIND-SYSTEM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'FIND-SYSTEM :LAMBDA-LIST '(NAME &OPTIONAL (ERROR-P T)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2025))
(PROCLAIM '(NOTINLINE MARK-COMPONENT-PRELOADED))
(PROGN (SYSTEM:PUT 'MARK-COMPONENT-PRELOADED 'SYSTEM::SOURCE (CONS '((:FUNCTION MARK-COMPONENT-PRELOADED) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 560691) (GET 
'MARK-COMPONENT-PRELOADED 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'MARK-COMPONENT-PRELOADED 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2033) 560691 '(COMPONENT) "Mark a component as preloaded."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2034))
(SYSTEM:%IN-PACKAGE "ASDF/PARSE-DEFSYSTEM")
(PROCLAIM '(NOTINLINE DETERMINE-SYSTEM-DIRECTORY))
(PROGN (SYSTEM:PUT 'DETERMINE-SYSTEM-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DETERMINE-SYSTEM-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
579199) (GET 'DETERMINE-SYSTEM-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DETERMINE-SYSTEM-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2035) 579199 '(PATHNAME) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2037))
(PROGN (SYSTEM:PUT '*DEFAULT-COMPONENT-CLASS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 580573) (GET 
'*DEFAULT-COMPONENT-CLASS* 'SYSTEM::SOURCE NIL))) (DEFVAR *DEFAULT-COMPONENT-CLASS* 
'CL-SOURCE-FILE))
(PROCLAIM '(NOTINLINE CLASS-FOR-TYPE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2038))
(PROGN (SYSTEM:PUT 'CLASS-FOR-TYPE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION CLASS-FOR-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 580573) (GET 
'CLASS-FOR-TYPE 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'CLASS-FOR-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD CLASS-FOR-TYPE NIL (NULL 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 580573) 
(GET 'CLASS-FOR-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'CLASS-FOR-TYPE :LAMBDA-LIST '(PARENT TYPE) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL 'T)) :DOCUMENTATION "If the PARENT is NIL, then TYPE must designate a subclass of SYSTEM." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2039) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2042))
(SYSTEM:PUT 'CLASS-FOR-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD CLASS-FOR-TYPE NIL (PARENT-COMPONENT 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 580573) 
(GET 'CLASS-FOR-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'CLASS-FOR-TYPE :LAMBDA-LIST '(PARENT TYPE) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PARENT-COMPONENT 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2045) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2048))
(SYSTEM:PUT 'NON-SYSTEM-SYSTEM 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
581780) (GET 'NON-SYSTEM-SYSTEM 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'NON-SYSTEM-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
581780) (GET 'NON-SYSTEM-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2051))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (NON-SYSTEM-SYSTEM 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 581780) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NON-SYSTEM-SYSTEM 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2052))
(SYSTEM:PUT 'NON-TOPLEVEL-SYSTEM 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
581780) (GET 'NON-TOPLEVEL-SYSTEM 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'NON-TOPLEVEL-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
581780) (GET 'NON-TOPLEVEL-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2056))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (NON-TOPLEVEL-SYSTEM 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 581780) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NON-TOPLEVEL-SYSTEM 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2057))
(SYSTEM:PUT 'BAD-SYSTEM-NAME 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
581780) (GET 'BAD-SYSTEM-NAME 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'BAD-SYSTEM-NAME 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
581780) (GET 'BAD-SYSTEM-NAME 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2061))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (BAD-SYSTEM-NAME 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 581780) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'BAD-SYSTEM-NAME 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2062))
(PROCLAIM '(NOTINLINE SYSDEF-ERROR-COMPONENT))
(PROGN (SYSTEM:PUT 'SYSDEF-ERROR-COMPONENT 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSDEF-ERROR-COMPONENT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 581780) (GET 
'SYSDEF-ERROR-COMPONENT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSDEF-ERROR-COMPONENT 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2066) 581780 '(MSG TYPE NAME VALUE) 
NIL))
(PROCLAIM '(NOTINLINE CHECK-COMPONENT-INPUT))
(PROGN (SYSTEM:PUT 'CHECK-COMPONENT-INPUT 'SYSTEM::SOURCE (CONS '((:FUNCTION CHECK-COMPONENT-INPUT) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 581780) (GET 
'CHECK-COMPONENT-INPUT 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CHECK-COMPONENT-INPUT 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2067) 581780 '(TYPE NAME WEAKLY-DEPENDS-ON 
DEPENDS-ON COMPONENTS) "A partial test of the values of a component."))
(PROCLAIM '(NOTINLINE RECORD-ADDITIONAL-SYSTEM-INPUT-FILE))
(PROGN (SYSTEM:PUT 'RECORD-ADDITIONAL-SYSTEM-INPUT-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
RECORD-ADDITIONAL-SYSTEM-INPUT-FILE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
581780) (GET 'RECORD-ADDITIONAL-SYSTEM-INPUT-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'RECORD-ADDITIONAL-SYSTEM-INPUT-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2068) 581780 '(PATHNAME COMPONENT PARENT) NIL))
(FMAKUNBOUND 'NORMALIZE-VERSION)
(PROCLAIM '(NOTINLINE NORMALIZE-VERSION))
(PROGN (SYSTEM:PUT 'NORMALIZE-VERSION 'SYSTEM::SOURCE (CONS '((:FUNCTION NORMALIZE-VERSION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 581780) (GET 
'NORMALIZE-VERSION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'NORMALIZE-VERSION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2069) 581780 '(FORM &KEY PATHNAME COMPONENT PARENT) NIL))
(PROGN (SYSTEM:PUT '%COMPUTE-+ASDF-METHODS+-VALUE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%COMPUTE-+ASDF-METHODS+-VALUE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
587315) (GET '%COMPUTE-+ASDF-METHODS+-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '%COMPUTE-+ASDF-METHODS+-VALUE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2073) 587315 'NIL NIL))
(PROGN (SYSTEM:PUT '+ASDF-METHODS+ 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
587315) (GET '+ASDF-METHODS+ 'SYSTEM::SOURCE NIL))) (DEFVAR +ASDF-METHODS+ (%COMPUTE-+ASDF-METHODS+-VALUE)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2074))
(PROCLAIM '(NOTINLINE %REMOVE-COMPONENT-INLINE-METHODS))
(PROGN (SYSTEM:PUT '%REMOVE-COMPONENT-INLINE-METHODS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%REMOVE-COMPONENT-INLINE-METHODS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
587315) (GET '%REMOVE-COMPONENT-INLINE-METHODS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'%REMOVE-COMPONENT-INLINE-METHODS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2075) 587315 '(COMPONENT) NIL))
(PROGN (SYSTEM:PUT '*STANDARD-METHOD-COMBINATION-QUALIFIERS* 'SYSTEM::SOURCE (CONS 
(LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
587315) (GET '*STANDARD-METHOD-COMBINATION-QUALIFIERS* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER 
*STANDARD-METHOD-COMBINATION-QUALIFIERS* '(:AROUND :BEFORE :AFTER)))
(PROCLAIM '(NOTINLINE %DEFINE-COMPONENT-INLINE-METHODS))
(PROGN (SYSTEM:PUT '%DEFINE-COMPONENT-INLINE-METHODS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%DEFINE-COMPONENT-INLINE-METHODS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
587315) (GET '%DEFINE-COMPONENT-INLINE-METHODS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'%DEFINE-COMPONENT-INLINE-METHODS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2077) 587315 '(RET REST) NIL))
(PROCLAIM '(NOTINLINE %REFRESH-COMPONENT-INLINE-METHODS))
(PROGN (SYSTEM:PUT '%REFRESH-COMPONENT-INLINE-METHODS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
%REFRESH-COMPONENT-INLINE-METHODS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
587315) (GET '%REFRESH-COMPONENT-INLINE-METHODS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'%REFRESH-COMPONENT-INLINE-METHODS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2078) 587315 '(COMPONENT REST) NIL))
(PROCLAIM '(NOTINLINE PARSE-DEPENDENCY-DEF))
(PROGN (SYSTEM:PUT 'PARSE-DEPENDENCY-DEF 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-DEPENDENCY-DEF) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 591100) (GET 
'PARSE-DEPENDENCY-DEF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-DEPENDENCY-DEF (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2079) 591100 '(DD) NIL))
(PROCLAIM '(NOTINLINE PARSE-DEPENDENCY-DEFS))
(PROGN (SYSTEM:PUT 'PARSE-DEPENDENCY-DEFS 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-DEPENDENCY-DEFS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 591100) (GET 
'PARSE-DEPENDENCY-DEFS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-DEPENDENCY-DEFS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2080) 591100 '(DD-LIST) "Parse the dependency defs in DD-LIST into canonical form by translating all
system names contained using COERCE-NAME. Return the result."))
(PROCLAIM '(NOTINLINE COMPUTE-COMPONENT-CHILDREN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2081))
(PROGN (SYSTEM:PUT 'COMPUTE-COMPONENT-CHILDREN 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPUTE-COMPONENT-CHILDREN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
591100) (GET 'COMPUTE-COMPONENT-CHILDREN 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE STABLE-UNION))
(PROGN (SYSTEM:PUT 'STABLE-UNION 'SYSTEM::SOURCE (CONS '((:FUNCTION STABLE-UNION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 591100) (GET 
'STABLE-UNION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STABLE-UNION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2082) 591100 '(S1 S2 &KEY (TEST (FUNCTION EQL)) (KEY 'IDENTITY)) 
NIL))
(PROCLAIM '(NOTINLINE PARSE-COMPONENT-FORM))
(PROGN (SYSTEM:PUT 'PARSE-COMPONENT-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION PARSE-COMPONENT-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 591100) (GET 
'PARSE-COMPONENT-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-COMPONENT-FORM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2084) 591100 '(PARENT OPTIONS &KEY PREVIOUS-SERIAL-COMPONENTS) 
NIL))
(SYSTEM:PUT 'COMPUTE-COMPONENT-CHILDREN 'SYSTEM::SOURCE (CONS '((:METHOD COMPUTE-COMPONENT-CHILDREN 
NIL (PARENT-COMPONENT T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
591100) (GET 'COMPUTE-COMPONENT-CHILDREN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPUTE-COMPONENT-CHILDREN :LAMBDA-LIST '(COMPONENT COMPONENTS 
SERIAL-P) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PARENT-COMPONENT 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2086))
(PROGN (SYSTEM:PUT '%COMPUTE-KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES-VALUE 
'SYSTEM::SOURCE (CONS '((:FUNCTION %COMPUTE-KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES-VALUE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 591100) (GET 
'%COMPUTE-KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES-VALUE 'SYSTEM::SOURCE NIL))) 
(SYSTEM:FSET '%COMPUTE-KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES-VALUE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2089) 591100 'NIL NIL))
(PROGN (SYSTEM:PUT '*KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES* 'SYSTEM::SOURCE 
(CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
591100) (GET '*KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES* 'SYSTEM::SOURCE NIL))) 
(DEFVAR *KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES* (%COMPUTE-KNOWN-SYSTEMS-WITH-BAD-SECONDARY-SYSTEM-NAMES-VALUE)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2090))
(PROCLAIM '(NOTINLINE KNOWN-SYSTEM-WITH-BAD-SECONDARY-SYSTEM-NAMES-P))
(PROGN (SYSTEM:PUT 'KNOWN-SYSTEM-WITH-BAD-SECONDARY-SYSTEM-NAMES-P 'SYSTEM::SOURCE 
(CONS '((:FUNCTION KNOWN-SYSTEM-WITH-BAD-SECONDARY-SYSTEM-NAMES-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
591100) (GET 'KNOWN-SYSTEM-WITH-BAD-SECONDARY-SYSTEM-NAMES-P 'SYSTEM::SOURCE NIL))) 
(SYSTEM:FSET 'KNOWN-SYSTEM-WITH-BAD-SECONDARY-SYSTEM-NAMES-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2091) 591100 '(ASD-NAME) NIL))
(PROCLAIM '(NOTINLINE REGISTER-SYSTEM-DEFINITION))
(PROGN (SYSTEM:PUT 'REGISTER-SYSTEM-DEFINITION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
REGISTER-SYSTEM-DEFINITION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
591100) (GET 'REGISTER-SYSTEM-DEFINITION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-SYSTEM-DEFINITION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2092) 591100 '(NAME &REST OPTIONS 
&KEY PATHNAME (CLASS 'SYSTEM) (SOURCE-FILE NIL SFP) DEFSYSTEM-DEPENDS-ON &ALLOW-OTHER-KEYS) 
NIL))
(PROGN (SYSTEM:PUT 'DEFSYSTEM 'SYSTEM::SOURCE (CONS '(:MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
591100) (GET 'DEFSYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFSYSTEM (SYSTEM:MAKE-MACRO 
'DEFSYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2095)) 591100 '(NAME &BODY 
OPTIONS) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2096))
(SYSTEM:%IN-PACKAGE "ASDF/BUNDLE")
(SYSTEM:PUT 'BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2097))
(PROCLAIM '(NOTINLINE BUNDLE-TYPE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2098))
(PROGN (SYSTEM:PUT 'BUNDLE-TYPE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION BUNDLE-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-TYPE 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'MONOLITHIC-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'MONOLITHIC-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2099))
(SYSTEM:PUT 'MONOLITHIC-BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'MONOLITHIC-BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2100))
(SYSTEM:PUT 'PROGRAM-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'PROGRAM-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2103))
(SYSTEM:PUT 'PROLOGUE-CODE 'SYSTEM::SOURCE (CONS '((:METHOD PROLOGUE-CODE NIL (SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'PROLOGUE-CODE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROLOGUE-CODE :LAMBDA-LIST '(X) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2111) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2114))
(SYSTEM:PUT 'EPILOGUE-CODE 'SYSTEM::SOURCE (CONS '((:METHOD EPILOGUE-CODE NIL (SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'EPILOGUE-CODE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'EPILOGUE-CODE :LAMBDA-LIST '(X) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2117) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2120))
(SYSTEM:PUT 'NO-UIOP 'SYSTEM::SOURCE (CONS '((:METHOD NO-UIOP NIL (SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'NO-UIOP 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'NO-UIOP :LAMBDA-LIST '(X) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2123) :FAST-FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2126))
(SYSTEM:PUT 'PREFIX-LISP-OBJECT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD PREFIX-LISP-OBJECT-FILES 
NIL (SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'PREFIX-LISP-OBJECT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PREFIX-LISP-OBJECT-FILES :LAMBDA-LIST '(X) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2129) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2132))
(SYSTEM:PUT 'POSTFIX-LISP-OBJECT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD POSTFIX-LISP-OBJECT-FILES 
NIL (SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'POSTFIX-LISP-OBJECT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'POSTFIX-LISP-OBJECT-FILES :LAMBDA-LIST '(X) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2135) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2138))
(SYSTEM:PUT 'EXTRA-OBJECT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD EXTRA-OBJECT-FILES 
NIL (SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'EXTRA-OBJECT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'EXTRA-OBJECT-FILES :LAMBDA-LIST '(X) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2141) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2144))
(SYSTEM:PUT 'EXTRA-BUILD-ARGS 'SYSTEM::SOURCE (CONS '((:METHOD EXTRA-BUILD-ARGS NIL 
(SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) 
(GET 'EXTRA-BUILD-ARGS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'EXTRA-BUILD-ARGS :LAMBDA-LIST '(X) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2147) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2150))
(SYSTEM:PUT 'LINK-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'LINK-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2153))
(SYSTEM:PUT 'GATHER-OPERATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'GATHER-OPERATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2154))
(PROCLAIM '(NOTINLINE GATHER-OPERATION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2155))
(PROGN (SYSTEM:PUT 'GATHER-OPERATION 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION GATHER-OPERATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'GATHER-OPERATION 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'GATHER-OPERATION 'SYSTEM::SOURCE (CONS '((:METHOD GATHER-OPERATION NIL 
(GATHER-OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'GATHER-OPERATION 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'GATHER-OPERATION :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'GATHER-OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2156) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2159))
(PROCLAIM '(NOTINLINE GATHER-TYPE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2162))
(PROGN (SYSTEM:PUT 'GATHER-TYPE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION GATHER-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'GATHER-TYPE 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE OPERATION-MONOLITHIC-P))
(PROGN (SYSTEM:PUT 'OPERATION-MONOLITHIC-P 'SYSTEM::SOURCE (CONS '((:FUNCTION OPERATION-MONOLITHIC-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'OPERATION-MONOLITHIC-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OPERATION-MONOLITHIC-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2163) 602839 '(OP) NIL))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (GATHER-OPERATION SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'GATHER-OPERATION 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2164))
(SYSTEM:PUT 'BASIC-COMPILE-BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'BASIC-COMPILE-BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2167))
(SYSTEM:PUT 'BUNDLE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD BUNDLE-TYPE NIL (BASIC-COMPILE-BUNDLE-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'BUNDLE-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'BASIC-COMPILE-BUNDLE-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2168) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2171))
(SYSTEM:PUT 'GATHER-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD GATHER-TYPE NIL (BASIC-COMPILE-BUNDLE-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'GATHER-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'GATHER-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'BASIC-COMPILE-BUNDLE-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2174) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2177))
(SYSTEM:PUT 'PREPARE-BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'PREPARE-BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2180))
(SYSTEM:PUT 'LIB-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'LIB-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2182))
(SYSTEM:PUT 'BUNDLE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD BUNDLE-TYPE NIL (LIB-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'BUNDLE-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LIB-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2183) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2186))
(SYSTEM:PUT 'GATHER-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD GATHER-TYPE NIL (LIB-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'GATHER-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'GATHER-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LIB-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2189) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2192))
(SYSTEM:PUT 'COMPILE-BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'COMPILE-BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2195))
(SYSTEM:PUT 'LOAD-BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'LOAD-BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2197))
(SYSTEM:PUT 'DLL-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'DLL-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2199))
(SYSTEM:PUT 'BUNDLE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD BUNDLE-TYPE NIL (DLL-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'BUNDLE-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DLL-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2200) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2203))
(SYSTEM:PUT 'GATHER-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD GATHER-TYPE NIL (DLL-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'GATHER-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'GATHER-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DLL-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2206) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2209))
(SYSTEM:PUT 'DELIVER-ASD-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'DELIVER-ASD-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2212))
(SYSTEM:PUT 'MONOLITHIC-DELIVER-ASD-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'MONOLITHIC-DELIVER-ASD-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2214))
(SYSTEM:PUT 'MONOLITHIC-COMPILE-BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'MONOLITHIC-COMPILE-BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2216))
(SYSTEM:PUT 'MONOLITHIC-LOAD-BUNDLE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'MONOLITHIC-LOAD-BUNDLE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2217))
(SYSTEM:PUT 'MONOLITHIC-LIB-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'MONOLITHIC-LIB-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2219))
(SYSTEM:PUT 'MONOLITHIC-DLL-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'MONOLITHIC-DLL-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2220))
(SYSTEM:PUT 'IMAGE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'IMAGE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2221))
(SYSTEM:PUT 'BUNDLE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD BUNDLE-TYPE NIL (IMAGE-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'BUNDLE-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'IMAGE-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2223) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2226))
(SYSTEM:PUT 'PROGRAM-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'PROGRAM-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2229))
(SYSTEM:PUT 'BUNDLE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD BUNDLE-TYPE NIL (PROGRAM-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'BUNDLE-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PROGRAM-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2230) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2233))
(PROCLAIM '(NOTINLINE BUNDLE-PATHNAME-TYPE))
(PROGN (SYSTEM:PUT 'BUNDLE-PATHNAME-TYPE 'SYSTEM::SOURCE (CONS '((:FUNCTION BUNDLE-PATHNAME-TYPE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-PATHNAME-TYPE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'BUNDLE-PATHNAME-TYPE (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2236) 602839 '(BUNDLE-TYPE) NIL))
(PROCLAIM '(NOTINLINE BUNDLE-OUTPUT-FILES))
(PROGN (SYSTEM:PUT 'BUNDLE-OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:FUNCTION BUNDLE-OUTPUT-FILES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'BUNDLE-OUTPUT-FILES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'BUNDLE-OUTPUT-FILES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2237) 602839 '(O C) NIL))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (BUNDLE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'BUNDLE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2239) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2242))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (IMAGE-OP SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'IMAGE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2245) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2248))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM (:BEFORE) (PROGRAM-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 602839) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS '(:BEFORE) :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PROGRAM-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2251) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2254))
(SYSTEM:PUT 'COMPILED-FILE 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'COMPILED-FILE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2257))
(SYSTEM:PUT 'PRECOMPILED-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'PRECOMPILED-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2259))
(SYSTEM:PUT 'PREBUILT-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
602839) (GET 'PREBUILT-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2260))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2261))
(PROCLAIM '(NOTINLINE TRIVIAL-SYSTEM-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2262))
(PROGN (SYSTEM:PUT 'TRIVIAL-SYSTEM-P 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION TRIVIAL-SYSTEM-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 618542) (GET 
'TRIVIAL-SYSTEM-P 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE USER-SYSTEM-P))
(PROGN (SYSTEM:PUT 'USER-SYSTEM-P 'SYSTEM::SOURCE (CONS '((:FUNCTION USER-SYSTEM-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 618542) (GET 
'USER-SYSTEM-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'USER-SYSTEM-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2263) 618542 '(S) NIL))
(PROGN (SYSTEM:PUT 'USER-SYSTEM 'SYSTEM::SOURCE (CONS '(USER-SYSTEM "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
618740) (GET 'USER-SYSTEM 'SYSTEM::SOURCE NIL))) (DEFTYPE USER-SYSTEM NIL '(AND SYSTEM 
(SATISFIES USER-SYSTEM-P))))
(PROCLAIM '(NOTINLINE DIRECT-DEPENDENCY-FILES))
(PROGN (SYSTEM:PUT 'DIRECT-DEPENDENCY-FILES 'SYSTEM::SOURCE (CONS '((:FUNCTION DIRECT-DEPENDENCY-FILES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 618876) (GET 
'DIRECT-DEPENDENCY-FILES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECT-DEPENDENCY-FILES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2264) 618876 '(O C &KEY (TEST 'IDENTITY) 
(KEY 'OUTPUT-FILES) &ALLOW-OTHER-KEYS) NIL))
(PROCLAIM '(NOTINLINE PATHNAME-TYPE-EQUAL-FUNCTION))
(PROGN (SYSTEM:PUT 'PATHNAME-TYPE-EQUAL-FUNCTION 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PATHNAME-TYPE-EQUAL-FUNCTION) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
618876) (GET 'PATHNAME-TYPE-EQUAL-FUNCTION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PATHNAME-TYPE-EQUAL-FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2267) 618876 '(TYPE) NIL))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (GATHER-OPERATION 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 618876) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'GATHER-OPERATION 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2269) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2272))
(PROCLAIM '(NOTINLINE SELECT-BUNDLE-OPERATION))
(PROGN (SYSTEM:PUT 'SELECT-BUNDLE-OPERATION 'SYSTEM::SOURCE (CONS '((:FUNCTION SELECT-BUNDLE-OPERATION) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 618876) (GET 
'SELECT-BUNDLE-OPERATION 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SELECT-BUNDLE-OPERATION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2275) 618876 '(TYPE &OPTIONAL MONOLITHIC) 
NIL))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (LOAD-BUNDLE-OP SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
620459) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-BUNDLE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2276))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (LOAD-BUNDLE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 620459) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-BUNDLE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2279) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2282))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-BUNDLE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 620459) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-BUNDLE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2285) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2288))
(SYSTEM:PUT 'MARK-OPERATION-DONE 'SYSTEM::SOURCE (CONS '((:METHOD MARK-OPERATION-DONE 
(:AFTER) (LOAD-BUNDLE-OP SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
620459) (GET 'MARK-OPERATION-DONE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'MARK-OPERATION-DONE :LAMBDA-LIST '(O C) :QUALIFIERS '(:AFTER) 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-BUNDLE-OP 'SYSTEM)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2291) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2294))
(SYSTEM:PUT 'TRIVIAL-SYSTEM-P 'SYSTEM::SOURCE (CONS '((:METHOD TRIVIAL-SYSTEM-P NIL 
(SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 621181) 
(GET 'TRIVIAL-SYSTEM-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'TRIVIAL-SYSTEM-P :LAMBDA-LIST '(S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2297) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2301))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (OPERATION 
COMPILED-FILE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
621181) (GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPILED-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2305) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2308))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-OP COMPILED-FILE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 621181) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-OP 'COMPILED-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2311) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2314))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-SOURCE-OP 
COMPILED-FILE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
621181) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-SOURCE-OP 'COMPILED-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2317) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2320))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (OPERATION COMPILED-FILE)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 621181) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'COMPILED-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2323) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2326))
(SYSTEM:PUT 'TRIVIAL-SYSTEM-P 'SYSTEM::SOURCE (CONS '((:METHOD TRIVIAL-SYSTEM-P NIL 
(PREBUILT-SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
621855) (GET 'TRIVIAL-SYSTEM-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'TRIVIAL-SYSTEM-P :LAMBDA-LIST '(S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'PREBUILT-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2329) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2332))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LINK-OP PREBUILT-SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 621855) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LINK-OP 'PREBUILT-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2335) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2338))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (BASIC-COMPILE-BUNDLE-OP 
PREBUILT-SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
621855) (GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'BASIC-COMPILE-BUNDLE-OP 'PREBUILT-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2341) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2344))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LIB-OP PREBUILT-SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 621855) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LIB-OP 'PREBUILT-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2347) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2350))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (DLL-OP PREBUILT-SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 621855) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'DLL-OP 'PREBUILT-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2353) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2356))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (GATHER-OPERATION PREBUILT-SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
621855) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'GATHER-OPERATION 'PREBUILT-SYSTEM)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2359) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2362))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (LIB-OP 
PREBUILT-SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
621855) (GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LIB-OP 'PREBUILT-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2365) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2368))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (DELIVER-ASD-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 622448) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DELIVER-ASD-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2371) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2374))
(SYSTEM:PUT 'OPERATION-DONE-P 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-DONE-P NIL 
(DELIVER-ASD-OP SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
622448) (GET 'OPERATION-DONE-P 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'DELIVER-ASD-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2377) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2380))
(PROCLAIM '(NOTINLINE SPACE-FOR-CRLF))
(PROGN (SYSTEM:PUT 'SPACE-FOR-CRLF 'SYSTEM::SOURCE (CONS '((:FUNCTION SPACE-FOR-CRLF) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 622448) (GET 
'SPACE-FOR-CRLF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SPACE-FOR-CRLF (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2383) 622448 '(S) NIL))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (DELIVER-ASD-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 622448) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'DELIVER-ASD-OP 'SYSTEM)) :DOCUMENTATION "Write an ASDF system definition for loading S as a delivered system." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2385) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2392))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (BASIC-COMPILE-BUNDLE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 622448) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'BASIC-COMPILE-BUNDLE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2399) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2403))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (LOAD-OP 
PRECOMPILED-SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
622448) (GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'PRECOMPILED-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2407) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2410))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (LOAD-OP PRECOMPILED-SYSTEM)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 622448) (GET 
'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-OP 'PRECOMPILED-SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2413) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2416))
(SYSTEM:PUT 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-DEPENDS-ON 
NIL (LOAD-BUNDLE-OP PRECOMPILED-SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
622448) (GET 'COMPONENT-DEPENDS-ON 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-BUNDLE-OP 'PRECOMPILED-SYSTEM)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2419))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2422))
(SYSTEM:%IN-PACKAGE "ASDF/CONCATENATE-SOURCE")
(SYSTEM:PUT 'BASIC-CONCATENATE-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
632056) (GET 'BASIC-CONCATENATE-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2423))
(SYSTEM:PUT 'BUNDLE-TYPE 'SYSTEM::SOURCE (CONS '((:METHOD BUNDLE-TYPE NIL (BASIC-CONCATENATE-SOURCE-OP)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) (GET 
'BUNDLE-TYPE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'BUNDLE-TYPE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'BASIC-CONCATENATE-SOURCE-OP)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2424) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2427))
(SYSTEM:PUT 'BASIC-LOAD-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
632056) (GET 'BASIC-LOAD-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2430))
(SYSTEM:PUT 'BASIC-COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) (GET 
'BASIC-COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2431))
(SYSTEM:PUT 'BASIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) (GET 
'BASIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2432))
(SYSTEM:PUT 'CONCATENATE-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
632056) (GET 'CONCATENATE-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2433))
(SYSTEM:PUT 'LOAD-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
632056) (GET 'LOAD-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2434))
(SYSTEM:PUT 'COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
632056) (GET 'COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2436))
(SYSTEM:PUT 'LOAD-COMPILED-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) (GET 
'LOAD-COMPILED-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2438))
(SYSTEM:PUT 'MONOLITHIC-CONCATENATE-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
632056) (GET 'MONOLITHIC-CONCATENATE-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2440))
(SYSTEM:PUT 'MONOLITHIC-LOAD-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) (GET 
'MONOLITHIC-LOAD-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2441))
(SYSTEM:PUT 'MONOLITHIC-COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS '(:CLASS 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) (GET 
'MONOLITHIC-COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2443))
(SYSTEM:PUT 'MONOLITHIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE (CONS 
'(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) 
(GET 'MONOLITHIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2445))
(SYSTEM:PUT 'INPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD INPUT-FILES NIL (BASIC-CONCATENATE-SOURCE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) 
(GET 'INPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'BASIC-CONCATENATE-SOURCE-OP 'SYSTEM)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2447) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2451))
(SYSTEM:PUT 'OUTPUT-FILES 'SYSTEM::SOURCE (CONS '((:METHOD OUTPUT-FILES NIL (BASIC-COMPILE-CONCATENATED-SOURCE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) 
(GET 'OUTPUT-FILES 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'BASIC-COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2455) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2458))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (BASIC-CONCATENATE-SOURCE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'BASIC-CONCATENATE-SOURCE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2461) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2464))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (BASIC-LOAD-CONCATENATED-SOURCE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'BASIC-LOAD-CONCATENATED-SOURCE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2467) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2470))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (BASIC-COMPILE-CONCATENATED-SOURCE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'BASIC-COMPILE-CONCATENATED-SOURCE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2473) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2476))
(SYSTEM:PUT 'PERFORM 'SYSTEM::SOURCE (CONS '((:METHOD PERFORM NIL (BASIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP 
SYSTEM)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 632056) 
(GET 'PERFORM 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O S) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'BASIC-LOAD-COMPILED-CONCATENATED-SOURCE-OP 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2479) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2482))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2485))
(SYSTEM:%IN-PACKAGE "ASDF/PACKAGE-INFERRED-SYSTEM")
(PROGN (SYSTEM:PUT '*DEFPACKAGE-FORMS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET '*DEFPACKAGE-FORMS* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEFPACKAGE-FORMS* 
'(DEFPACKAGE DEFINE-PACKAGE)))
(PROCLAIM '(NOTINLINE INITIAL-PACKAGE-INFERRED-SYSTEMS-TABLE))
(PROGN (SYSTEM:PUT 'INITIAL-PACKAGE-INFERRED-SYSTEMS-TABLE 'SYSTEM::SOURCE (CONS 
'((:FUNCTION INITIAL-PACKAGE-INFERRED-SYSTEMS-TABLE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET 'INITIAL-PACKAGE-INFERRED-SYSTEMS-TABLE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'INITIAL-PACKAGE-INFERRED-SYSTEMS-TABLE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2486) 637959 'NIL NIL))
(PROGN (SYSTEM:PUT '*PACKAGE-INFERRED-SYSTEMS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'*PACKAGE-INFERRED-SYSTEMS* 'SYSTEM::SOURCE NIL))) (DEFVAR *PACKAGE-INFERRED-SYSTEMS* 
(INITIAL-PACKAGE-INFERRED-SYSTEMS-TABLE)))
(SYSTEM:PUT 'PACKAGE-INFERRED-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET 'PACKAGE-INFERRED-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2487))
(SYSTEM:PUT 'PACKAGE-SYSTEM 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET 'PACKAGE-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2488))
(PROCLAIM '(NOTINLINE DEFPACKAGE-FORM-P))
(PROGN (SYSTEM:PUT 'DEFPACKAGE-FORM-P 'SYSTEM::SOURCE (CONS '((:FUNCTION DEFPACKAGE-FORM-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'DEFPACKAGE-FORM-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFPACKAGE-FORM-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2489) 637959 '(FORM) NIL))
(PROCLAIM '(NOTINLINE STREAM-DEFPACKAGE-FORM))
(PROGN (SYSTEM:PUT 'STREAM-DEFPACKAGE-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION STREAM-DEFPACKAGE-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'STREAM-DEFPACKAGE-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'STREAM-DEFPACKAGE-FORM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2490) 637959 '(STREAM) NIL))
(PROCLAIM '(NOTINLINE FILE-DEFPACKAGE-FORM))
(PROGN (SYSTEM:PUT 'FILE-DEFPACKAGE-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION FILE-DEFPACKAGE-FORM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'FILE-DEFPACKAGE-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FILE-DEFPACKAGE-FORM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2491) 637959 '(FILE) "Return the first DEFPACKAGE form in FILE."))
(SYSTEM:PUT 'PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR 'SYSTEM::SOURCE (CONS 
'(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET 'PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR 'SYSTEM::SOURCE (CONS 
'(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) 
(GET 'PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2493))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PACKAGE-INFERRED-SYSTEM-MISSING-PACKAGE-ERROR 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2494))
(PROCLAIM '(NOTINLINE PACKAGE-DEPENDENCIES))
(PROGN (SYSTEM:PUT 'PACKAGE-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:FUNCTION PACKAGE-DEPENDENCIES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'PACKAGE-DEPENDENCIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PACKAGE-DEPENDENCIES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2498) 637959 '(DEFPACKAGE-FORM) "Return a list of packages depended on by the package
defined in DEFPACKAGE-FORM.  A package is depended upon if
the DEFPACKAGE-FORM uses it or imports a symbol from it."))
(PROCLAIM '(NOTINLINE PACKAGE-DESIGNATOR-NAME))
(PROGN (SYSTEM:PUT 'PACKAGE-DESIGNATOR-NAME 'SYSTEM::SOURCE (CONS '((:FUNCTION PACKAGE-DESIGNATOR-NAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'PACKAGE-DESIGNATOR-NAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PACKAGE-DESIGNATOR-NAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2500) 637959 '(PACKAGE) "Normalize a package designator to a string"))
(PROCLAIM '(NOTINLINE REGISTER-SYSTEM-PACKAGES))
(PROGN (SYSTEM:PUT 'REGISTER-SYSTEM-PACKAGES 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTER-SYSTEM-PACKAGES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'REGISTER-SYSTEM-PACKAGES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-SYSTEM-PACKAGES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2501) 637959 '(SYSTEM PACKAGES) "Register SYSTEM as providing PACKAGES."))
(PROCLAIM '(NOTINLINE PACKAGE-NAME-SYSTEM))
(PROGN (SYSTEM:PUT 'PACKAGE-NAME-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION PACKAGE-NAME-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 637959) (GET 
'PACKAGE-NAME-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PACKAGE-NAME-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2502) 637959 '(PACKAGE-NAME) "Return the name of the SYSTEM providing PACKAGE-NAME, if such exists,
otherwise return a default system name computed from PACKAGE-NAME."))
(PROCLAIM '(NOTINLINE PACKAGE-INFERRED-SYSTEM-FILE-DEPENDENCIES))
(PROGN (SYSTEM:PUT 'PACKAGE-INFERRED-SYSTEM-FILE-DEPENDENCIES 'SYSTEM::SOURCE (CONS 
'((:FUNCTION PACKAGE-INFERRED-SYSTEM-FILE-DEPENDENCIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET 'PACKAGE-INFERRED-SYSTEM-FILE-DEPENDENCIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'PACKAGE-INFERRED-SYSTEM-FILE-DEPENDENCIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2503) 637959 '(FILE &OPTIONAL SYSTEM) NIL))
(PROCLAIM '(NOTINLINE SAME-PACKAGE-INFERRED-SYSTEM-P))
(PROGN (SYSTEM:PUT 'SAME-PACKAGE-INFERRED-SYSTEM-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SAME-PACKAGE-INFERRED-SYSTEM-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET 'SAME-PACKAGE-INFERRED-SYSTEM-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SAME-PACKAGE-INFERRED-SYSTEM-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2504) 
637959 '(SYSTEM NAME DIRECTORY SUBPATH AROUND-COMPILE DEPENDENCIES) NIL))
(PROCLAIM '(NOTINLINE SYSDEF-PACKAGE-INFERRED-SYSTEM-SEARCH))
(PROGN (SYSTEM:PUT 'SYSDEF-PACKAGE-INFERRED-SYSTEM-SEARCH 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSDEF-PACKAGE-INFERRED-SYSTEM-SEARCH) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
637959) (GET 'SYSDEF-PACKAGE-INFERRED-SYSTEM-SEARCH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYSDEF-PACKAGE-INFERRED-SYSTEM-SEARCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2505) 637959 '(SYSTEM-NAME) "Takes SYSTEM-NAME and returns an initialized SYSTEM object, or NIL.  Made to be added to
*SYSTEM-DEFINITION-SEARCH-FUNCTIONS*."))
(SETQ *SYSTEM-DEFINITION-SEARCH-FUNCTIONS* (ADJOIN 'SYSDEF-PACKAGE-INFERRED-SYSTEM-SEARCH 
*SYSTEM-DEFINITION-SEARCH-FUNCTIONS*))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2506))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2507))
(SYSTEM:%IN-PACKAGE "ASDF/OUTPUT-TRANSLATIONS")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2508))
(SYSTEM:PUT 'INVALID-OUTPUT-TRANSLATION 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'INVALID-OUTPUT-TRANSLATION 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'INVALID-OUTPUT-TRANSLATION 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'INVALID-OUTPUT-TRANSLATION 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2509))
(PROGN (SYSTEM:PUT '*OUTPUT-TRANSLATIONS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET '*OUTPUT-TRANSLATIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *OUTPUT-TRANSLATIONS* 
NIL "Either NIL (for uninitialized), or a list of one element,
said element itself being a sorted list of mappings.
Each mapping is a pair of a source pathname and destination pathname,
and the order is by decreasing length of namestring of the source pathname."))
(PROCLAIM '(NOTINLINE OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION OUTPUT-TRANSLATIONS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 646895) (GET 
'OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2511) 646895 'NIL "Return the configured output-translations, if any"))
(PROCLAIM '(NOTINLINE SET-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'SET-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION SET-OUTPUT-TRANSLATIONS) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 646895) (GET 
'SET-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SET-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2512) 646895 '(NEW-VALUE) NIL))
(PROCLAIM '(NOTINLINE (SETF OUTPUT-TRANSLATIONS)))
(PROGN (SYSTEM:PUT 'OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION (SETF 
OUTPUT-TRANSLATIONS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET '(SETF OUTPUT-TRANSLATIONS) 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2514) 646895 '(NEW-VALUE) NIL))
(PROCLAIM '(NOTINLINE OUTPUT-TRANSLATIONS-INITIALIZED-P))
(PROGN (SYSTEM:PUT 'OUTPUT-TRANSLATIONS-INITIALIZED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
OUTPUT-TRANSLATIONS-INITIALIZED-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'OUTPUT-TRANSLATIONS-INITIALIZED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'OUTPUT-TRANSLATIONS-INITIALIZED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2515) 646895 'NIL "Have the output-translations been initialized yet?"))
(PROCLAIM '(NOTINLINE CLEAR-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'CLEAR-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
CLEAR-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'CLEAR-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CLEAR-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2516) 646895 'NIL "Undoes any initialization of the output translations."))
(REGISTER-CLEAR-CONFIGURATION-HOOK 'CLEAR-OUTPUT-TRANSLATIONS)
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE))
(PROGN (SYSTEM:PUT 'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE 'SYSTEM::SOURCE (CONS 
'((:FUNCTION VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2517) 646895 '(DIRECTIVE) NIL))
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-FORM))
(PROGN (SYSTEM:PUT 'VALIDATE-OUTPUT-TRANSLATIONS-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-OUTPUT-TRANSLATIONS-FORM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'VALIDATE-OUTPUT-TRANSLATIONS-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'VALIDATE-OUTPUT-TRANSLATIONS-FORM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2518) 646895 '(FORM &KEY LOCATION) NIL))
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-FILE))
(PROGN (SYSTEM:PUT 'VALIDATE-OUTPUT-TRANSLATIONS-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-OUTPUT-TRANSLATIONS-FILE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'VALIDATE-OUTPUT-TRANSLATIONS-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'VALIDATE-OUTPUT-TRANSLATIONS-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2519) 646895 '(FILE) NIL))
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY))
(PROGN (SYSTEM:PUT 'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY 'SYSTEM::SOURCE (CONS 
'((:FUNCTION VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2520) 646895 '(DIRECTORY) NIL))
(PROCLAIM '(NOTINLINE PARSE-OUTPUT-TRANSLATIONS-STRING))
(PROGN (SYSTEM:PUT 'PARSE-OUTPUT-TRANSLATIONS-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PARSE-OUTPUT-TRANSLATIONS-STRING) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PARSE-OUTPUT-TRANSLATIONS-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'PARSE-OUTPUT-TRANSLATIONS-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2521) 646895 '(STRING &KEY LOCATION) NIL))
(PROGN (SYSTEM:PUT '%COMPUTE-DEFAULT-OUTPUT-TRANSLATIONS-VALUE 'SYSTEM::SOURCE (CONS 
'((:FUNCTION %COMPUTE-DEFAULT-OUTPUT-TRANSLATIONS-VALUE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET '%COMPUTE-DEFAULT-OUTPUT-TRANSLATIONS-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'%COMPUTE-DEFAULT-OUTPUT-TRANSLATIONS-VALUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2522) 646895 'NIL NIL))
(PROGN (SYSTEM:PUT '*DEFAULT-OUTPUT-TRANSLATIONS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 646895) (GET 
'*DEFAULT-OUTPUT-TRANSLATIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *DEFAULT-OUTPUT-TRANSLATIONS* 
(%COMPUTE-DEFAULT-OUTPUT-TRANSLATIONS-VALUE)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2523))
(PROCLAIM '(NOTINLINE WRAPPING-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'WRAPPING-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
WRAPPING-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'WRAPPING-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WRAPPING-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2524) 646895 'NIL NIL))
(PROGN (SYSTEM:PUT '*OUTPUT-TRANSLATIONS-FILE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 646895) (GET 
'*OUTPUT-TRANSLATIONS-FILE* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *OUTPUT-TRANSLATIONS-FILE* 
(PARSE-UNIX-NAMESTRING "common-lisp/asdf-output-translations.conf")))
(PROGN (SYSTEM:PUT '*OUTPUT-TRANSLATIONS-DIRECTORY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 646895) (GET 
'*OUTPUT-TRANSLATIONS-DIRECTORY* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *OUTPUT-TRANSLATIONS-DIRECTORY* 
(PARSE-UNIX-NAMESTRING "common-lisp/asdf-output-translations.conf.d/")))
(PROCLAIM '(NOTINLINE USER-OUTPUT-TRANSLATIONS-PATHNAME))
(PROGN (SYSTEM:PUT 'USER-OUTPUT-TRANSLATIONS-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
USER-OUTPUT-TRANSLATIONS-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'USER-OUTPUT-TRANSLATIONS-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'USER-OUTPUT-TRANSLATIONS-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2525) 646895 '(&KEY (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME))
(PROGN (SYSTEM:PUT 'SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2526) 646895 '(&KEY (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME))
(PROGN (SYSTEM:PUT 'USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME 'SYSTEM::SOURCE (CONS 
'((:FUNCTION USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME 'SYSTEM::SOURCE NIL))) 
(SYSTEM:FSET 'USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2527) 646895 '(&KEY (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME))
(PROGN (SYSTEM:PUT 'SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME 'SYSTEM::SOURCE 
(CONS '((:FUNCTION SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME 'SYSTEM::SOURCE NIL))) 
(SYSTEM:FSET 'SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2528) 646895 '(&KEY (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE ENVIRONMENT-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'ENVIRONMENT-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENVIRONMENT-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'ENVIRONMENT-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'ENVIRONMENT-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2529) 646895 'NIL NIL))
(PROCLAIM '(NOTINLINE PROCESS-OUTPUT-TRANSLATIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2530))
(PROGN (SYSTEM:PUT 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
PROCESS-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE INHERIT-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'INHERIT-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
INHERIT-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'INHERIT-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'INHERIT-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2531) 646895 '(INHERIT &KEY COLLECT) 
NIL))
(PROCLAIM '(NOTINLINE PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE))
(PROGN (SYSTEM:PUT 'PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2532) 646895 '(DIRECTIVE &KEY INHERIT COLLECT) NIL))
(SYSTEM:PUT 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-OUTPUT-TRANSLATIONS 
NIL (SYMBOL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(X &KEY (INHERIT *DEFAULT-OUTPUT-TRANSLATIONS*) 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2533))
(SYSTEM:PUT 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-OUTPUT-TRANSLATIONS 
NIL (PATHNAME)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(PATHNAME &KEY INHERIT 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PATHNAME)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2537))
(SYSTEM:PUT 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-OUTPUT-TRANSLATIONS 
NIL (STRING)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(STRING &KEY INHERIT 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2541))
(SYSTEM:PUT 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-OUTPUT-TRANSLATIONS 
NIL (NULL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(X &KEY INHERIT COLLECT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2545))
(SYSTEM:PUT 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-OUTPUT-TRANSLATIONS 
NIL (CONS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'PROCESS-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(FORM &KEY INHERIT 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2549))
(PROCLAIM '(NOTINLINE COMPUTE-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'COMPUTE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
COMPUTE-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'COMPUTE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPUTE-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2553) 646895 '(&OPTIONAL PARAMETER) 
"read the configuration, return it"))
(PROGN (SYSTEM:PUT '*OUTPUT-TRANSLATIONS-PARAMETER* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 646895) (GET 
'*OUTPUT-TRANSLATIONS-PARAMETER* 'SYSTEM::SOURCE NIL))) (DEFVAR *OUTPUT-TRANSLATIONS-PARAMETER* 
NIL))
(PROCLAIM '(NOTINLINE INITIALIZE-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'INITIALIZE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
INITIALIZE-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'INITIALIZE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'INITIALIZE-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2555) 
646895 '(&OPTIONAL (PARAMETER *OUTPUT-TRANSLATIONS-PARAMETER*)) "read the configuration, initialize the internal configuration variable,
return the configuration"))
(PROCLAIM '(NOTINLINE DISABLE-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'DISABLE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DISABLE-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'DISABLE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DISABLE-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2556) 646895 'NIL "Initialize output translations in a way that maps every file to itself,
effectively disabling the output translation facility."))
(PROCLAIM '(NOTINLINE ENSURE-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'ENSURE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENSURE-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'ENSURE-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2557) 646895 'NIL NIL))
(PROCLAIM '(NOTINLINE APPLY-OUTPUT-TRANSLATIONS))
(PROGN (SYSTEM:PUT 'APPLY-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE (CONS '((:FUNCTION 
APPLY-OUTPUT-TRANSLATIONS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
646895) (GET 'APPLY-OUTPUT-TRANSLATIONS 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'APPLY-OUTPUT-TRANSLATIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2558) 646895 '(PATH) NIL))
(SETQ *OUTPUT-TRANSLATION-FUNCTION* 'APPLY-OUTPUT-TRANSLATIONS)
(PROCLAIM '(NOTINLINE TRANSLATE-JAR-PATHNAME))
(PROGN (SYSTEM:PUT 'TRANSLATE-JAR-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION TRANSLATE-JAR-PATHNAME) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 646895) (GET 
'TRANSLATE-JAR-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'TRANSLATE-JAR-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2559) 646895 '(SOURCE WILDCARD) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2562))
(SYSTEM:%IN-PACKAGE "ASDF/SOURCE-REGISTRY")
(SYSTEM:PUT 'INVALID-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'INVALID-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'INVALID-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'INVALID-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2563))
(PROGN (SYSTEM:PUT '*DEFAULT-SOURCE-REGISTRY-EXCLUSIONS* 'SYSTEM::SOURCE (CONS (LIST 
:VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) 
(GET '*DEFAULT-SOURCE-REGISTRY-EXCLUSIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *DEFAULT-SOURCE-REGISTRY-EXCLUSIONS* 
'(".bzr" ".cdv" ".git" ".hg" ".pc" ".svn" "CVS" "RCS" "SCCS" "_darcs" "_sgbak" "autom4te.cache" 
"cover_db" "_build" "debian")))
(PROGN (SYSTEM:PUT '*SOURCE-REGISTRY-EXCLUSIONS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'*SOURCE-REGISTRY-EXCLUSIONS* 'SYSTEM::SOURCE NIL))) (DEFVAR *SOURCE-REGISTRY-EXCLUSIONS* 
*DEFAULT-SOURCE-REGISTRY-EXCLUSIONS*))
(PROGN (SYSTEM:PUT '*SOURCE-REGISTRY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET '*SOURCE-REGISTRY* 'SYSTEM::SOURCE NIL))) (DEFVAR *SOURCE-REGISTRY* 
NIL "Either NIL (for uninitialized), or an equal hash-table, mapping
system names to pathnames of .asd files"))
(PROGN (SYSTEM:PUT '*SOURCE-REGISTRY-PARAMETER* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'*SOURCE-REGISTRY-PARAMETER* 'SYSTEM::SOURCE NIL))) (DEFVAR *SOURCE-REGISTRY-PARAMETER* 
NIL))
(PROCLAIM '(NOTINLINE SOURCE-REGISTRY-INITIALIZED-P))
(PROGN (SYSTEM:PUT 'SOURCE-REGISTRY-INITIALIZED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SOURCE-REGISTRY-INITIALIZED-P) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'SOURCE-REGISTRY-INITIALIZED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SOURCE-REGISTRY-INITIALIZED-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2565) 663404 'NIL NIL))
(PROCLAIM '(NOTINLINE CLEAR-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'CLEAR-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION CLEAR-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'CLEAR-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'CLEAR-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2566) 663404 'NIL "Undoes any initialization of the source registry."))
(REGISTER-CLEAR-CONFIGURATION-HOOK 'CLEAR-SOURCE-REGISTRY)
(PROGN (SYSTEM:PUT '*WILD-ASD* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET '*WILD-ASD* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *WILD-ASD* (MAKE-PATHNAME 
:DIRECTORY NIL :NAME *WILD* :TYPE "asd" :VERSION :NEWEST)))
(PROCLAIM '(NOTINLINE DIRECTORY-ASD-FILES))
(PROGN (SYSTEM:PUT 'DIRECTORY-ASD-FILES 'SYSTEM::SOURCE (CONS '((:FUNCTION DIRECTORY-ASD-FILES) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'DIRECTORY-ASD-FILES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DIRECTORY-ASD-FILES (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2567) 663404 '(DIRECTORY) NIL))
(PROCLAIM '(NOTINLINE COLLECT-ASDS-IN-DIRECTORY))
(PROGN (SYSTEM:PUT 'COLLECT-ASDS-IN-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
COLLECT-ASDS-IN-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'COLLECT-ASDS-IN-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COLLECT-ASDS-IN-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2568) 663404 '(DIRECTORY COLLECT) 
NIL))
(PROGN (SYSTEM:PUT '*RECURSE-BEYOND-ASDS* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET '*RECURSE-BEYOND-ASDS* 'SYSTEM::SOURCE NIL))) (DEFVAR *RECURSE-BEYOND-ASDS* 
T "Should :tree entries of the source-registry recurse in subdirectories
after having found a .asd file? True by default."))
(PROCLAIM '(NOTINLINE PROCESS-SOURCE-REGISTRY-CACHE))
(PROGN (SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY-CACHE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PROCESS-SOURCE-REGISTRY-CACHE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY-CACHE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PROCESS-SOURCE-REGISTRY-CACHE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2569) 663404 '(DIRECTORY COLLECT) 
NIL))
(PROCLAIM '(NOTINLINE COLLECT-SUB*DIRECTORIES-ASD-FILES))
(PROGN (SYSTEM:PUT 'COLLECT-SUB*DIRECTORIES-ASD-FILES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
COLLECT-SUB*DIRECTORIES-ASD-FILES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'COLLECT-SUB*DIRECTORIES-ASD-FILES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'COLLECT-SUB*DIRECTORIES-ASD-FILES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2571) 663404 '(DIRECTORY &KEY (EXCLUDE *DEFAULT-SOURCE-REGISTRY-EXCLUSIONS*) COLLECT 
(RECURSE-BEYOND-ASDS *RECURSE-BEYOND-ASDS*) IGNORE-CACHE) NIL))
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-DIRECTIVE))
(PROGN (SYSTEM:PUT 'VALIDATE-SOURCE-REGISTRY-DIRECTIVE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-SOURCE-REGISTRY-DIRECTIVE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'VALIDATE-SOURCE-REGISTRY-DIRECTIVE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'VALIDATE-SOURCE-REGISTRY-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2575) 663404 '(DIRECTIVE) NIL))
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-FORM))
(PROGN (SYSTEM:PUT 'VALIDATE-SOURCE-REGISTRY-FORM 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-SOURCE-REGISTRY-FORM) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'VALIDATE-SOURCE-REGISTRY-FORM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VALIDATE-SOURCE-REGISTRY-FORM 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2576) 663404 '(FORM &KEY LOCATION) 
NIL))
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-FILE))
(PROGN (SYSTEM:PUT 'VALIDATE-SOURCE-REGISTRY-FILE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-SOURCE-REGISTRY-FILE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'VALIDATE-SOURCE-REGISTRY-FILE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'VALIDATE-SOURCE-REGISTRY-FILE 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2577) 663404 '(FILE) NIL))
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-DIRECTORY))
(PROGN (SYSTEM:PUT 'VALIDATE-SOURCE-REGISTRY-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
VALIDATE-SOURCE-REGISTRY-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'VALIDATE-SOURCE-REGISTRY-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'VALIDATE-SOURCE-REGISTRY-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2578) 663404 '(DIRECTORY) NIL))
(PROCLAIM '(NOTINLINE PARSE-SOURCE-REGISTRY-STRING))
(PROGN (SYSTEM:PUT 'PARSE-SOURCE-REGISTRY-STRING 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PARSE-SOURCE-REGISTRY-STRING) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PARSE-SOURCE-REGISTRY-STRING 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PARSE-SOURCE-REGISTRY-STRING 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2579) 663404 '(STRING &KEY LOCATION) 
NIL))
(PROCLAIM '(NOTINLINE REGISTER-ASD-DIRECTORY))
(PROGN (SYSTEM:PUT 'REGISTER-ASD-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION REGISTER-ASD-DIRECTORY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'REGISTER-ASD-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REGISTER-ASD-DIRECTORY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2581) 663404 '(DIRECTORY &KEY RECURSE 
EXCLUDE COLLECT) NIL))
(PROGN (SYSTEM:PUT '%COMPUTE-DEFAULT-SOURCE-REGISTRIES-VALUE 'SYSTEM::SOURCE (CONS 
'((:FUNCTION %COMPUTE-DEFAULT-SOURCE-REGISTRIES-VALUE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET '%COMPUTE-DEFAULT-SOURCE-REGISTRIES-VALUE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'%COMPUTE-DEFAULT-SOURCE-REGISTRIES-VALUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2582) 663404 'NIL NIL))
(PROGN (SYSTEM:PUT '*DEFAULT-SOURCE-REGISTRIES* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'*DEFAULT-SOURCE-REGISTRIES* 'SYSTEM::SOURCE NIL))) (DEFVAR *DEFAULT-SOURCE-REGISTRIES* 
(%COMPUTE-DEFAULT-SOURCE-REGISTRIES-VALUE) "List of default source registries"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2583))
(PROGN (SYSTEM:PUT '*SOURCE-REGISTRY-FILE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'*SOURCE-REGISTRY-FILE* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *SOURCE-REGISTRY-FILE* 
(PARSE-UNIX-NAMESTRING "common-lisp/source-registry.conf")))
(PROGN (SYSTEM:PUT '*SOURCE-REGISTRY-DIRECTORY* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'*SOURCE-REGISTRY-DIRECTORY* 'SYSTEM::SOURCE NIL))) (DEFPARAMETER *SOURCE-REGISTRY-DIRECTORY* 
(PARSE-UNIX-NAMESTRING "common-lisp/source-registry.conf.d/")))
(PROCLAIM '(NOTINLINE WRAPPING-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'WRAPPING-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION WRAPPING-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'WRAPPING-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'WRAPPING-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2584) 663404 'NIL NIL))
(PROCLAIM '(NOTINLINE DEFAULT-USER-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'DEFAULT-USER-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DEFAULT-USER-SOURCE-REGISTRY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'DEFAULT-USER-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'DEFAULT-USER-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2585) 663404 'NIL NIL))
(PROCLAIM '(NOTINLINE DEFAULT-SYSTEM-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'DEFAULT-SYSTEM-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
DEFAULT-SYSTEM-SOURCE-REGISTRY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'DEFAULT-SYSTEM-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'DEFAULT-SYSTEM-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2586) 
663404 'NIL NIL))
(PROCLAIM '(NOTINLINE USER-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'USER-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION USER-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'USER-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'USER-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2587) 663404 '(&KEY (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'SYSTEM-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'SYSTEM-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2588) 663404 '(&KEY (DIRECTION :INPUT)) 
NIL))
(PROCLAIM '(NOTINLINE USER-SOURCE-REGISTRY-DIRECTORY))
(PROGN (SYSTEM:PUT 'USER-SOURCE-REGISTRY-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
USER-SOURCE-REGISTRY-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'USER-SOURCE-REGISTRY-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'USER-SOURCE-REGISTRY-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2589) 
663404 '(&KEY (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-REGISTRY-DIRECTORY))
(PROGN (SYSTEM:PUT 'SYSTEM-SOURCE-REGISTRY-DIRECTORY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSTEM-SOURCE-REGISTRY-DIRECTORY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'SYSTEM-SOURCE-REGISTRY-DIRECTORY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'SYSTEM-SOURCE-REGISTRY-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2590) 663404 '(&KEY (DIRECTION :INPUT)) NIL))
(PROCLAIM '(NOTINLINE ENVIRONMENT-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'ENVIRONMENT-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
ENVIRONMENT-SOURCE-REGISTRY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'ENVIRONMENT-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENVIRONMENT-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2591) 663404 'NIL NIL))
(PROCLAIM '(NOTINLINE PROCESS-SOURCE-REGISTRY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2592))
(PROGN (SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
PROCESS-SOURCE-REGISTRY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))))
(PROCLAIM '(NOTINLINE INHERIT-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'INHERIT-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION INHERIT-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'INHERIT-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'INHERIT-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2593) 663404 '(INHERIT &KEY REGISTER) 
NIL))
(PROCLAIM '(NOTINLINE PROCESS-SOURCE-REGISTRY-DIRECTIVE))
(PROGN (SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY-DIRECTIVE 'SYSTEM::SOURCE (CONS '((:FUNCTION 
PROCESS-SOURCE-REGISTRY-DIRECTIVE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY-DIRECTIVE 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'PROCESS-SOURCE-REGISTRY-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2594) 663404 '(DIRECTIVE &KEY INHERIT REGISTER) NIL))
(SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-SOURCE-REGISTRY 
NIL (SYMBOL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(X &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2595))
(SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-SOURCE-REGISTRY 
NIL (PATHNAME)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(PATHNAME &KEY INHERIT 
REGISTER) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PATHNAME)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2599))
(SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-SOURCE-REGISTRY 
NIL (STRING)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(STRING &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2603))
(SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-SOURCE-REGISTRY 
NIL (NULL)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(X &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2607))
(SYSTEM:PUT 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:METHOD PROCESS-SOURCE-REGISTRY 
NIL (CONS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'PROCESS-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(FORM &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2611))
(PROCLAIM '(NOTINLINE FLATTEN-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'FLATTEN-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION FLATTEN-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'FLATTEN-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'FLATTEN-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2615) 663404 '(&OPTIONAL (PARAMETER 
*SOURCE-REGISTRY-PARAMETER*)) NIL))
(PROCLAIM '(NOTINLINE PATHNAME-DIRECTORY-DEPTH))
(PROGN (SYSTEM:PUT 'PATHNAME-DIRECTORY-DEPTH 'SYSTEM::SOURCE (CONS '((:FUNCTION PATHNAME-DIRECTORY-DEPTH) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'PATHNAME-DIRECTORY-DEPTH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PATHNAME-DIRECTORY-DEPTH 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2618) 663404 '(P) NIL))
(PROCLAIM '(NOTINLINE PREFERRED-SOURCE-PATH-P))
(PROGN (SYSTEM:PUT 'PREFERRED-SOURCE-PATH-P 'SYSTEM::SOURCE (CONS '((:FUNCTION PREFERRED-SOURCE-PATH-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'PREFERRED-SOURCE-PATH-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'PREFERRED-SOURCE-PATH-P 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2619) 663404 '(X Y) "Return T iff X is to be preferred over Y as a source path"))
(PROCLAIM '(NOTINLINE COMPUTE-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'COMPUTE-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION COMPUTE-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'COMPUTE-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPUTE-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2620) 663404 '(&OPTIONAL (PARAMETER 
*SOURCE-REGISTRY-PARAMETER*) (REGISTRY *SOURCE-REGISTRY*)) NIL))
(PROCLAIM '(NOTINLINE INITIALIZE-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'INITIALIZE-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION 
INITIALIZE-SOURCE-REGISTRY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'INITIALIZE-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'INITIALIZE-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2623) 663404 '(&OPTIONAL (PARAMETER 
*SOURCE-REGISTRY-PARAMETER*)) NIL))
(PROCLAIM '(NOTINLINE ENSURE-SOURCE-REGISTRY))
(PROGN (SYSTEM:PUT 'ENSURE-SOURCE-REGISTRY 'SYSTEM::SOURCE (CONS '((:FUNCTION ENSURE-SOURCE-REGISTRY) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 663404) (GET 
'ENSURE-SOURCE-REGISTRY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'ENSURE-SOURCE-REGISTRY 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2624) 663404 '(&OPTIONAL PARAMETER) 
NIL))
(PROCLAIM '(NOTINLINE SYSDEF-SOURCE-REGISTRY-SEARCH))
(PROGN (SYSTEM:PUT 'SYSDEF-SOURCE-REGISTRY-SEARCH 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSDEF-SOURCE-REGISTRY-SEARCH) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
663404) (GET 'SYSDEF-SOURCE-REGISTRY-SEARCH 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSDEF-SOURCE-REGISTRY-SEARCH 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2625) 663404 '(SYSTEM) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2626))
(SYSTEM:%IN-PACKAGE "ASDF/BACKWARD-INTERNALS")
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-LOAD-SYSDEF-NOTIFIED-P* 'SYSTEM::SOURCE 
(CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
680321) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-LOAD-SYSDEF-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-LOAD-SYSDEF-NOTIFIED-P* NIL))
(PROCLAIM '(INLINE LOAD-SYSDEF))
(SYSTEM:PUT 'LOAD-SYSDEF 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
680321) (GET 'LOAD-SYSDEF 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2627))
(SETF (SYSTEM:INLINE-EXPANSION 'LOAD-SYSDEF) '(LAMBDA (NAME PATHNAME) (DECLARE (IGNORE 
NAME PATHNAME)) (BLOCK LOAD-SYSDEF (UNLESS *DEPRECATED-FUNCTION-STYLE-WARNING-LOAD-SYSDEF-NOTIFIED-P* 
(SETF *DEPRECATED-FUNCTION-STYLE-WARNING-LOAD-SYSDEF-NOTIFIED-P* T) (UIOP/VERSION::NOTIFY-DEPRECATED-FUNCTION 
:STYLE-WARNING 'LOAD-SYSDEF)) (ERROR "Use asdf:load-asd instead of asdf::load-sysdef"))))
(PROGN (SYSTEM:PUT 'LOAD-SYSDEF 'SYSTEM::SOURCE (CONS '((:FUNCTION LOAD-SYSDEF) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
680321) (GET 'LOAD-SYSDEF 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'LOAD-SYSDEF (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2629) 680321 '(NAME PATHNAME) NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2630))
(SYSTEM:%IN-PACKAGE "ASDF/BACKWARD-INTERFACE")
(SYSTEM:PUT 'OPERATION-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'OPERATION-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2631))
(SYSTEM:PUT 'PRINT-OBJECT 'SYSTEM::SOURCE (CONS '((:METHOD PRINT-OBJECT NIL (OPERATION-ERROR 
T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) 
(GET 'PRINT-OBJECT 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION-ERROR 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2632))
(SYSTEM:PUT 'COMPILE-ERROR 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPILE-ERROR 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-ERROR 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPILE-ERROR 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2636))
(SYSTEM:PUT 'COMPILE-FAILED 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPILE-FAILED 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-FAILED 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPILE-FAILED 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2637))
(SYSTEM:PUT 'COMPILE-WARNED 'SYSTEM::SOURCE (CONS '(:CONDITION "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPILE-WARNED 'SYSTEM::SOURCE NIL)))
(SYSTEM:PUT 'COMPILE-WARNED 'SYSTEM::SOURCE (CONS '(:CLASS "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPILE-WARNED 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2638))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-LOAD-DEPENDENCIES-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-LOAD-DEPENDENCIES-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-LOAD-DEPENDENCIES-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE COMPONENT-LOAD-DEPENDENCIES))
(SYSTEM:PUT 'COMPONENT-LOAD-DEPENDENCIES 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'COMPONENT-LOAD-DEPENDENCIES 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2639))
(SETF (SYSTEM:INLINE-EXPANSION 'COMPONENT-LOAD-DEPENDENCIES) '(LAMBDA (COMPONENT) 
(BLOCK COMPONENT-LOAD-DEPENDENCIES (UNLESS *DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-LOAD-DEPENDENCIES-NOTIFIED-P* 
(SETF *DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-LOAD-DEPENDENCIES-NOTIFIED-P* 
T) (UIOP/VERSION::NOTIFY-DEPRECATED-FUNCTION :STYLE-WARNING 'COMPONENT-LOAD-DEPENDENCIES)) 
(COMPONENT-SIDEWAY-DEPENDENCIES COMPONENT))))
(PROGN (SYSTEM:PUT 'COMPONENT-LOAD-DEPENDENCIES 'SYSTEM::SOURCE (CONS '((:FUNCTION 
COMPONENT-LOAD-DEPENDENCIES) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPONENT-LOAD-DEPENDENCIES 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'COMPONENT-LOAD-DEPENDENCIES 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2641) 681597 '(COMPONENT) "DEPRECATED. Please use COMPONENT-SIDEWAY-DEPENDENCIES instead; or better,
define your operations with proper use of SIDEWAY-OPERATION, SELFWARD-OPERATION,
or define methods on PREPARE-OP, etc."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2642))
(PROGN (SYSTEM:PUT 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
OPERATION-ON-WARNINGS) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE NIL))))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2643))
(PROGN (SYSTEM:PUT 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
OPERATION-ON-FAILURE) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE NIL))))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2644))
(PROGN (SYSTEM:PUT 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
(SETF OPERATION-ON-WARNINGS)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE NIL))))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2645))
(PROGN (SYSTEM:PUT 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
(SETF OPERATION-ON-FAILURE)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-ON-WARNINGS 
NIL (OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-ON-WARNINGS :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2646) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2649))
(SYSTEM:PUT 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATION-ON-FAILURE 
NIL (OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATION-ON-FAILURE :LAMBDA-LIST '(O) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2652) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2655))
(SYSTEM:PUT 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE (CONS '((:METHOD (SETF OPERATION-ON-WARNINGS) 
NIL (T OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-WARNINGS 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD '(SETF OPERATION-ON-WARNINGS) :LAMBDA-LIST '(X O) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2658) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2661))
(SYSTEM:PUT 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE (CONS '((:METHOD (SETF OPERATION-ON-FAILURE) 
NIL (T OPERATION)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATION-ON-FAILURE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD '(SETF OPERATION-ON-FAILURE) :LAMBDA-LIST '(X O) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2664) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2667))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-DEFINITION-PATHNAME-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-DEFINITION-PATHNAME-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-DEFINITION-PATHNAME-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE SYSTEM-DEFINITION-PATHNAME))
(SYSTEM:PUT 'SYSTEM-DEFINITION-PATHNAME 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'SYSTEM-DEFINITION-PATHNAME 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2670))
(SETF (SYSTEM:INLINE-EXPANSION 'SYSTEM-DEFINITION-PATHNAME) '(LAMBDA (X) (BLOCK SYSTEM-DEFINITION-PATHNAME 
(UNLESS *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-DEFINITION-PATHNAME-NOTIFIED-P* 
(SETF *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-DEFINITION-PATHNAME-NOTIFIED-P* T) 
(UIOP/VERSION::NOTIFY-DEPRECATED-FUNCTION :STYLE-WARNING 'SYSTEM-DEFINITION-PATHNAME)) 
(SYSTEM-SOURCE-FILE X))))
(PROGN (SYSTEM:PUT 'SYSTEM-DEFINITION-PATHNAME 'SYSTEM::SOURCE (CONS '((:FUNCTION 
SYSTEM-DEFINITION-PATHNAME) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'SYSTEM-DEFINITION-PATHNAME 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-DEFINITION-PATHNAME 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2672) 681597 '(X) "DEPRECATED. This function used to expose ASDF internals with subtle
differences with respect to user expectations, that have been refactored
away since. We recommend you use ASDF:SYSTEM-SOURCE-FILE instead for a
mostly compatible replacement that we're supporting, or even
ASDF:SYSTEM-SOURCE-DIRECTORY or ASDF:SYSTEM-RELATIVE-PATHNAME
if that's whay you mean."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2673))
(PROGN (SYSTEM:PUT 'TRAVERSE 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION TRAVERSE) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'TRAVERSE 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'TRAVERSE 'SYSTEM::SOURCE (CONS '((:METHOD TRAVERSE NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'TRAVERSE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'TRAVERSE :LAMBDA-LIST '(OPERATION COMPONENT &REST #1073? &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2674))
(SYSTEM:PUT 'TRAVERSE 'SYSTEM::SOURCE (CONS '((:METHOD TRAVERSE NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'TRAVERSE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'TRAVERSE :LAMBDA-LIST '(OPERATION COMPONENT &REST #1073? &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2678))
(SYSTEM:PUT 'TRAVERSE 'SYSTEM::SOURCE (CONS '((:METHOD TRAVERSE NIL (OPERATION T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'TRAVERSE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'TRAVERSE :LAMBDA-LIST '(OPERATION COMPONENT &REST #1073? &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2682))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-TRAVERSE-NOTIFIED-P* 'SYSTEM::SOURCE 
(CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-TRAVERSE-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-TRAVERSE-NOTIFIED-P* NIL))
(PROCLAIM '(INLINE TRAVERSE))
(SYSTEM:PUT 'TRAVERSE 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'TRAVERSE 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2686))
(SYSTEM:PUT 'TRAVERSE 'SYSTEM::SOURCE (CONS '((:METHOD TRAVERSE NIL (OPERATION COMPONENT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'TRAVERSE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'TRAVERSE :LAMBDA-LIST '(O C &REST KEYS &KEY PLAN-CLASS &ALLOW-OTHER-KEYS) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2688))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY))
(SYSTEM:PUT 'ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2692))
(SETF (SYSTEM:INLINE-EXPANSION 'ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY) 'NIL)
(PROGN (SYSTEM:PUT 'ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY 'SYSTEM::SOURCE (CONS 
'((:FUNCTION ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 
'ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2694) 681597 '(&KEY (CENTRALIZE-LISP-BINARIES NIL) (DEFAULT-TOPLEVEL-DIRECTORY (SUBPATHNAME 
(USER-HOMEDIR-PATHNAME) ".fasls/")) (INCLUDE-PER-USER-INFORMATION NIL) (MAP-ALL-SOURCE-FILES 
(OR NIL)) (SOURCE-TO-TARGET-MAPPINGS NIL) (FILE-TYPES (SYSTEM::BACKQ-CONS (COMPILE-FILE-TYPE) 
'("build-report")))) "DEPRECATED. Use asdf-output-translations instead."))
(SYSTEM:PUT 'OPERATE 'SYSTEM::SOURCE (CONS '((:METHOD OPERATE (:BEFORE) (T T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'OPERATE 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION-CLASS SYSTEM &REST ARGS &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS '(:BEFORE) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2695))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-RUN-SHELL-COMMAND-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-RUN-SHELL-COMMAND-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-RUN-SHELL-COMMAND-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE RUN-SHELL-COMMAND))
(SYSTEM:PUT 'RUN-SHELL-COMMAND 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'RUN-SHELL-COMMAND 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2699))
(SETF (SYSTEM:INLINE-EXPANSION 'RUN-SHELL-COMMAND) 'NIL)
(PROGN (SYSTEM:PUT 'RUN-SHELL-COMMAND 'SYSTEM::SOURCE (CONS '((:FUNCTION RUN-SHELL-COMMAND) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'RUN-SHELL-COMMAND 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'RUN-SHELL-COMMAND (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2701) 681597 '(CONTROL-STRING &REST ARGS) "PLEASE DO NOT USE. This function is not just DEPRECATED, but also dysfunctional.
Please use UIOP:RUN-PROGRAM instead."))
(PROGN (SYSTEM:PUT '*ASDF-VERBOSE* 'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*ASDF-VERBOSE* 'SYSTEM::SOURCE NIL))) (DEFVAR *ASDF-VERBOSE* NIL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2703))
(PROGN (SYSTEM:PUT 'COMPONENT-PROPERTY 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
COMPONENT-PROPERTY) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPONENT-PROPERTY 'SYSTEM::SOURCE NIL))))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2704))
(PROGN (SYSTEM:PUT 'COMPONENT-PROPERTY 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION 
(SETF COMPONENT-PROPERTY)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPONENT-PROPERTY 'SYSTEM::SOURCE NIL))))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-PROPERTY-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-PROPERTY-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-COMPONENT-PROPERTY-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE COMPONENT-PROPERTY))
(SYSTEM:PUT 'COMPONENT-PROPERTY 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPONENT-PROPERTY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2705))
(SYSTEM:PUT 'COMPONENT-PROPERTY 'SYSTEM::SOURCE (CONS '((:METHOD COMPONENT-PROPERTY 
NIL (COMPONENT T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPONENT-PROPERTY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'COMPONENT-PROPERTY :LAMBDA-LIST '(C PROPERTY) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2707) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2710))
(PROGN (SYSTEM:PUT '|*DEPRECATED-FUNCTION-STYLE-WARNING-(SETF COMPONENT-PROPERTY)-NOTIFIED-P*| 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '|*DEPRECATED-FUNCTION-STYLE-WARNING-(SETF COMPONENT-PROPERTY)-NOTIFIED-P*| 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER |*DEPRECATED-FUNCTION-STYLE-WARNING-(SETF COMPONENT-PROPERTY)-NOTIFIED-P*| 
NIL))
(PROCLAIM '(INLINE (SETF COMPONENT-PROPERTY)))
(SYSTEM:PUT 'COMPONENT-PROPERTY 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPONENT-PROPERTY 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2713))
(SYSTEM:PUT 'COMPONENT-PROPERTY 'SYSTEM::SOURCE (CONS '((:METHOD (SETF COMPONENT-PROPERTY) 
NIL (T COMPONENT T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'COMPONENT-PROPERTY 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD '(SETF COMPONENT-PROPERTY) :LAMBDA-LIST '(NEW-VALUE C PROPERTY) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'COMPONENT 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2715))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2718))
(PROGN (SYSTEM:PUT 'EXPLAIN 'SYSTEM::SOURCE (CONS '((:GENERIC-FUNCTION EXPLAIN) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'EXPLAIN 'SYSTEM::SOURCE NIL))))
(SYSTEM:PUT 'EXPLAIN 'SYSTEM::SOURCE (CONS '((:METHOD EXPLAIN NIL (STRING T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'EXPLAIN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'EXPLAIN :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2719) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2722))
(SYSTEM:PUT 'EXPLAIN 'SYSTEM::SOURCE (CONS '((:METHOD EXPLAIN NIL (SYMBOL T)) "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'EXPLAIN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'EXPLAIN :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2725) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2728))
(SYSTEM:PUT 'EXPLAIN 'SYSTEM::SOURCE (CONS '((:METHOD EXPLAIN NIL (OPERATION T)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'EXPLAIN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'EXPLAIN :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2731) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2734))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-EXPLAIN-NOTIFIED-P* 'SYSTEM::SOURCE 
(CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-EXPLAIN-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-EXPLAIN-NOTIFIED-P* NIL))
(PROCLAIM '(INLINE EXPLAIN))
(SYSTEM:PUT 'EXPLAIN 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
681597) (GET 'EXPLAIN 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2737))
(SYSTEM:PUT 'EXPLAIN 'SYSTEM::SOURCE (CONS '((:METHOD EXPLAIN NIL (OPERATION COMPONENT)) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 681597) (GET 
'EXPLAIN 'SYSTEM::SOURCE NIL)))
(MOP::ENSURE-METHOD 'EXPLAIN :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2739) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2742))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-REGISTERED-P-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
691663) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-REGISTERED-P-NOTIFIED-P* 
'SYSTEM::SOURCE NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-REGISTERED-P-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE SYSTEM-REGISTERED-P))
(SYSTEM:PUT 'SYSTEM-REGISTERED-P 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
691663) (GET 'SYSTEM-REGISTERED-P 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2745))
(SETF (SYSTEM:INLINE-EXPANSION 'SYSTEM-REGISTERED-P) '(LAMBDA (NAME) (BLOCK SYSTEM-REGISTERED-P 
(UNLESS *DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-REGISTERED-P-NOTIFIED-P* (SETF 
*DEPRECATED-FUNCTION-STYLE-WARNING-SYSTEM-REGISTERED-P-NOTIFIED-P* T) (UIOP/VERSION::NOTIFY-DEPRECATED-FUNCTION 
:STYLE-WARNING 'SYSTEM-REGISTERED-P)) (IF-LET (SYSTEM (REGISTERED-SYSTEM NAME)) (CONS 
(IF-LET (PRIMARY-SYSTEM (REGISTERED-SYSTEM (PRIMARY-SYSTEM-NAME NAME))) (COMPONENT-OPERATION-TIME 
'DEFINE-OP PRIMARY-SYSTEM)) SYSTEM)))))
(PROGN (SYSTEM:PUT 'SYSTEM-REGISTERED-P 'SYSTEM::SOURCE (CONS '((:FUNCTION SYSTEM-REGISTERED-P) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 691663) (GET 
'SYSTEM-REGISTERED-P 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'SYSTEM-REGISTERED-P (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2747) 691663 '(NAME) "DEPRECATED. Return a generalized boolean that is true if a system of given NAME was registered already.
NAME is a system designator, to be normalized by COERCE-NAME.
The value returned if true is a pair of a timestamp and a system object."))
(PROGN (SYSTEM:PUT '*DEPRECATED-FUNCTION-STYLE-WARNING-REQUIRE-SYSTEM-NOTIFIED-P* 
'SYSTEM::SOURCE (CONS (LIST :VARIABLE "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
691663) (GET '*DEPRECATED-FUNCTION-STYLE-WARNING-REQUIRE-SYSTEM-NOTIFIED-P* 'SYSTEM::SOURCE 
NIL))) (DEFPARAMETER *DEPRECATED-FUNCTION-STYLE-WARNING-REQUIRE-SYSTEM-NOTIFIED-P* 
NIL))
(PROCLAIM '(INLINE REQUIRE-SYSTEM))
(SYSTEM:PUT 'REQUIRE-SYSTEM 'SYSTEM::SOURCE (CONS '(:COMPILER-MACRO "/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 
691663) (GET 'REQUIRE-SYSTEM 'SYSTEM::SOURCE NIL)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2748))
(SETF (SYSTEM:INLINE-EXPANSION 'REQUIRE-SYSTEM) 'NIL)
(PROGN (SYSTEM:PUT 'REQUIRE-SYSTEM 'SYSTEM::SOURCE (CONS '((:FUNCTION REQUIRE-SYSTEM) 
"/Users/evenson/work/abcl.easye.git/src/org/armedbear/lisp/asdf.lisp" 691663) (GET 
'REQUIRE-SYSTEM 'SYSTEM::SOURCE NIL))) (SYSTEM:FSET 'REQUIRE-SYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 2750) 691663 '(SYSTEM &REST KEYS &KEY &ALLOW-OTHER-KEYS) "Ensure the specified SYSTEM is loaded, passing the KEYS to OPERATE, but do not update the
system or its dependencies if it has already been loaded."))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2751))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2752))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2753))
(SYSTEM:%IN-PACKAGE "ASDF/FOOTER")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2754))
(REGISTER-PRELOADED-SYSTEM "uiop" :VERSION *UIOP-VERSION*)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2755))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2756))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2757))
(SETQ *MODULE-PROVIDER-FUNCTIONS* (ADJOIN 'MODULE-PROVIDE-ASDF *MODULE-PROVIDER-FUNCTIONS*))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2758))
(PROVIDE "asdf")
(PROVIDE "ASDF")
(CLEANUP-UPGRADED-ASDF)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2759))
