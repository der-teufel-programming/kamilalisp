
(def ⍉ transpose)
(def ⊃= first-idx)
(def ∊⊃ first)
(def π pi)
(def ← def)
(def ←∘ defun)
(def ←⍤ defmacro)
(def Φ match)
(def ∨= any)
(def ∧= every)
(def ⍳ iota)
(def ⌊ min)
(def ⌈ max)
(def ⍴ size)
(def , tie)
(def *⍟ ln)
(def ⊥⍟ log2)
(def ⍟ log)
(def ≤ <=)
(def ≥ >=)
(def ∪ unique)
(def ⌸ keys)
(def ⍵ x)
(def ⍺ y)
(def +/= count)
(def ⎕ lambda)
(def ⍎ eval)
(def ⍸ where)
(def ⌿ foldl1')
(def ⍀ scanr1')
(def ⍠⌿ foldl')
(def ⍠⍀ scanr')
(def ⊃ nth)
(def φ monad)
(def φφ dyad)
(def ⍡ filter)
(def ⍨ commute)
(def ⍞ println)
(def +/ sum)
(def ∊↑ car)
(def ∊↓ cdr)
(def ∊ flatten)
(def ⎕r⊂ regex-split)
(def ⎕s⊂ str-split)
(def ⍎π parse-num)
(def ↑⍕↓ str-trim)
(def ↑ take)
(def ↓ drop)
(def ⊆ partition)
(def ∘.⍋ prefixes)
(def ∘.⍒ suffixes)
(def φ⍳ index-of)
(def ⌽ reverse)
(def φ/ replicate)
